{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/main/webapp/app/app.component.html","./src/main/webapp/app/exercise/all-exercises/all-exercises.component.html","./src/main/webapp/app/exercise/create-exercise/create-exercise.component.html","./src/main/webapp/app/exercise/exercise-card/exercise-card.component.html","./src/main/webapp/app/exercise/exercise-details/exercise-details.component.html","./src/main/webapp/app/food/food.component.html","./src/main/webapp/app/food/search-food/search-food.component.html","./src/main/webapp/app/footer/footer.component.html","./src/main/webapp/app/home/create-fitness-profile/create-fitness-profile.component.html","./src/main/webapp/app/home/edit-fitness-profile/edit-fitness-profile.component.html","./src/main/webapp/app/home/home.component.html","./src/main/webapp/app/home/my-profile/my-profile.component.html","./src/main/webapp/app/index/index.component.html","./src/main/webapp/app/muscle-selector/muscle-selector.component.html","./src/main/webapp/app/navbar/guest-navbar/guest-navbar.component.html","./src/main/webapp/app/navbar/logged-navbar/logged-navbar.component.html","./src/main/webapp/app/navbar/navbar.component.html","./src/main/webapp/app/user/register/register.component.html","./src/main/webapp/app/user/signin/signin.component.html","./src/main/webapp/app/user/user-profile/user-profile.component.html","./src/main/webapp/app/workout/all-workout-plans/all-workout-plans.component.html","./src/main/webapp/app/workout/all-workouts/all-workouts.component.html","./src/main/webapp/app/workout/my-workout-plans/my-workout-plans.component.html","./src/main/webapp/app/workout/my-workout-plans/no-selected-workout-plan/no-selected-workout-plan.component.html","./src/main/webapp/app/workout/my-workout-plans/selected-workout-plan/selected-workout-plan.component.html","./src/main/webapp/app/workout/my-workouts/edit-selected-workout/edit-selected-workout.component.html","./src/main/webapp/app/workout/my-workouts/my-workouts.component.html","./src/main/webapp/app/workout/my-workouts/no-selected-workout/no-selected-workout.component.html","./src/main/webapp/app/workout/my-workouts/selected-workout/selected-workout.component.html","./src/main/webapp/app/workout/workout-card/workout-card.component.html","./src/main/webapp/app/workout/workout-details/workout-details.component.html","./src/main/webapp/app/workout/workout-plan-card/workout-plan-card.component.html","./src/main/webapp/app/workout/workout-plan-details/workout-plan-details.component.html","./node_modules/tslib/tslib.es6.js","./src/main/webapp/app/app-routing.module.ts","./src/main/webapp/app/app.component.css","./src/main/webapp/app/app.component.ts","./src/main/webapp/app/app.module.ts","./src/main/webapp/app/auth/auth-interceptor.service.ts","./src/main/webapp/app/auth/auth.service.ts","./src/main/webapp/app/auth/user-auth.model.ts","./src/main/webapp/app/exercise/all-exercises/all-exercises.component.css","./src/main/webapp/app/exercise/all-exercises/all-exercises.component.ts","./src/main/webapp/app/exercise/all-exercises/workout-exercise-binding.model.ts","./src/main/webapp/app/exercise/create-exercise/create-exercise.component.css","./src/main/webapp/app/exercise/create-exercise/create-exercise.component.ts","./src/main/webapp/app/exercise/exercise-binding.model.ts","./src/main/webapp/app/exercise/exercise-card/exercise-card.component.css","./src/main/webapp/app/exercise/exercise-card/exercise-card.component.ts","./src/main/webapp/app/exercise/exercise-details/exercise-details.component.css","./src/main/webapp/app/exercise/exercise-details/exercise-details.component.ts","./src/main/webapp/app/exercise/exercise.model.ts","./src/main/webapp/app/exercise/exercise.service.ts","./src/main/webapp/app/exercise/selected-muscle-groups.model.ts","./src/main/webapp/app/food/food.component.css","./src/main/webapp/app/food/food.component.ts","./src/main/webapp/app/food/food.model.ts","./src/main/webapp/app/food/food.service.ts","./src/main/webapp/app/food/search-food/search-food.component.css","./src/main/webapp/app/food/search-food/search-food.component.ts","./src/main/webapp/app/footer/footer.component.css","./src/main/webapp/app/footer/footer.component.ts","./src/main/webapp/app/get-constant-view-name.pipe.ts","./src/main/webapp/app/home/create-fitness-profile/create-fitness-profile.component.css","./src/main/webapp/app/home/create-fitness-profile/create-fitness-profile.component.ts","./src/main/webapp/app/home/create-fitness-profile/fitness-profile-binding.model.ts","./src/main/webapp/app/home/edit-fitness-profile/edit-fitness-profile.component.css","./src/main/webapp/app/home/edit-fitness-profile/edit-fitness-profile.component.ts","./src/main/webapp/app/home/home.component.css","./src/main/webapp/app/home/home.component.ts","./src/main/webapp/app/home/my-profile/my-profile.component.css","./src/main/webapp/app/home/my-profile/my-profile.component.ts","./src/main/webapp/app/index/index.component.css","./src/main/webapp/app/index/index.component.ts","./src/main/webapp/app/muscle-selector/muscle-selector.component.css","./src/main/webapp/app/muscle-selector/muscle-selector.component.ts","./src/main/webapp/app/navbar/guest-navbar/guest-navbar.component.css","./src/main/webapp/app/navbar/guest-navbar/guest-navbar.component.ts","./src/main/webapp/app/navbar/logged-navbar/logged-navbar.component.css","./src/main/webapp/app/navbar/logged-navbar/logged-navbar.component.ts","./src/main/webapp/app/navbar/navbar.component.css","./src/main/webapp/app/navbar/navbar.component.ts","./src/main/webapp/app/safe.pipe.ts","./src/main/webapp/app/user/fitness-profile.model.ts","./src/main/webapp/app/user/nutrition-goal.model.ts","./src/main/webapp/app/user/register/register-binding.model.ts","./src/main/webapp/app/user/register/register.component.css","./src/main/webapp/app/user/register/register.component.ts","./src/main/webapp/app/user/signin/signin-binding.model.ts","./src/main/webapp/app/user/signin/signin.component.css","./src/main/webapp/app/user/signin/signin.component.ts","./src/main/webapp/app/user/user-profile/user-profile.component.css","./src/main/webapp/app/user/user-profile/user-profile.component.ts","./src/main/webapp/app/user/user.model.ts","./src/main/webapp/app/user/user.service.ts","./src/main/webapp/app/workout/all-workout-plans/all-workout-plans.component.css","./src/main/webapp/app/workout/all-workout-plans/all-workout-plans.component.ts","./src/main/webapp/app/workout/all-workouts/all-workouts.component.css","./src/main/webapp/app/workout/all-workouts/all-workouts.component.ts","./src/main/webapp/app/workout/my-workout-plans/my-workout-plans.component.css","./src/main/webapp/app/workout/my-workout-plans/my-workout-plans.component.ts","./src/main/webapp/app/workout/my-workout-plans/no-selected-workout-plan/no-selected-workout-plan.component.css","./src/main/webapp/app/workout/my-workout-plans/no-selected-workout-plan/no-selected-workout-plan.component.ts","./src/main/webapp/app/workout/my-workout-plans/selected-workout-plan/selected-workout-plan.component.css","./src/main/webapp/app/workout/my-workout-plans/selected-workout-plan/selected-workout-plan.component.ts","./src/main/webapp/app/workout/my-workouts/edit-selected-workout/edit-selected-workout.component.css","./src/main/webapp/app/workout/my-workouts/edit-selected-workout/edit-selected-workout.component.ts","./src/main/webapp/app/workout/my-workouts/my-workouts.component.css","./src/main/webapp/app/workout/my-workouts/my-workouts.component.ts","./src/main/webapp/app/workout/my-workouts/no-selected-workout/no-selected-workout.component.css","./src/main/webapp/app/workout/my-workouts/no-selected-workout/no-selected-workout.component.ts","./src/main/webapp/app/workout/my-workouts/selected-workout/selected-workout.component.css","./src/main/webapp/app/workout/my-workouts/selected-workout/selected-workout.component.ts","./src/main/webapp/app/workout/workout-binding-model.ts","./src/main/webapp/app/workout/workout-card/workout-card.component.css","./src/main/webapp/app/workout/workout-card/workout-card.component.ts","./src/main/webapp/app/workout/workout-details/workout-details.component.css","./src/main/webapp/app/workout/workout-details/workout-details.component.ts","./src/main/webapp/app/workout/workout-plan-binding-model.ts","./src/main/webapp/app/workout/workout-plan-card/workout-plan-card.component.css","./src/main/webapp/app/workout/workout-plan-card/workout-plan-card.component.ts","./src/main/webapp/app/workout/workout-plan-details/workout-plan-details.component.css","./src/main/webapp/app/workout/workout-plan-details/workout-plan-details.component.ts","./src/main/webapp/app/workout/workout-plan.model.ts","./src/main/webapp/app/workout/workout-plan.service.ts","./src/main/webapp/app/workout/workout.model.ts","./src/main/webapp/app/workout/workout.service.ts","./src/main/webapp/environments/environment.ts","./src/main/webapp/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-navbar></app-navbar>\\r\\n\\r\\n<main>\\r\\n  <router-outlet></router-outlet>\\r\\n</main>\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n\\n    <ng-template #createWorkoutExerciseModal let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Exercise to Workout</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <form #addToWorkoutForm=\\\"ngForm\\\">\\n                <h5>{{selectedExerciseForModal.name}}</h5>\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-3\\\">\\n                        <label for=\\\"inputReps\\\">Reps</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputReps\\\" name=\\\"inputReps\\\" #inputReps=\\\"ngModel\\\"\\n                               required\\n                               pattern=\\\"^[1-9][0-9]*\\\"\\n                               min=\\\"1\\\"\\n                               [ngClass]=\\\"{'is-valid': inputReps.valid && inputReps.touched,\\n                         'is-invalid': inputReps.invalid && inputReps.touched}\\\"\\n                               [(ngModel)]=\\\"workoutExerciseBindingModel.reps\\\">\\n                        <div class=\\\"valid-feedback\\\"></div>\\n                        <div class=\\\"invalid-feedback\\\">\\n                            Reps should be a positive number.\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-3\\\">\\n                        <label for=\\\"inputSets\\\">Sets</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputSets\\\" name=\\\"inputSets\\\" #inputSets=\\\"ngModel\\\"\\n                               required\\n                               pattern=\\\"^[1-9][0-9]*\\\"\\n                               min=\\\"1\\\"\\n                               [ngClass]=\\\"{'is-valid': inputSets.valid && inputSets.touched,\\n                         'is-invalid': inputSets.invalid && inputSets.touched}\\\"\\n                               [(ngModel)]=\\\"workoutExerciseBindingModel.sets\\\">\\n                        <div class=\\\"valid-feedback\\\"></div>\\n                        <div class=\\\"invalid-feedback\\\">\\n                            Sets should be a positive number.\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-6\\\">\\n                        <label for=\\\"inputStatus\\\">Workout</label>\\n                        <select id=\\\"inputStatus\\\" name=\\\"status\\\" class=\\\"form-control\\\" #inputWorkoutId\\n                                [(ngModel)]=\\\"selectedWorkoutId\\\">\\n                            <option [ngValue]=\\\"workout.id\\\"\\n                                    *ngFor=\\\"let workout of userWorkouts\\\">{{workout.name}}</option>\\n                        </select>\\n                    </div>\\n\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" [disabled]=\\\"addToWorkoutForm.invalid\\\"\\n                    (click)=\\\"modal.close()\\\">Add to Workout\\n            </button>\\n        </div>\\n    </ng-template>\\n\\n    <div class=\\\"jumbotron\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"inline-block col-md-4 my-auto\\\">\\n                    <div class=\\\"form-label-group p-4\\\">\\n                        <h3 class=\\\"d-block\\\">Select involving muscles</h3>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"bicepsCheckBox\\\"\\n                                   value=\\\"biceps\\\" [(ngModel)]=\\\"muscleGroupFilter.biceps\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"bicepsCheckBox\\\">Biceps</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"tricepsCheckBox\\\"\\n                                   value=\\\"triceps\\\" [(ngModel)]=\\\"muscleGroupFilter.triceps\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"tricepsCheckBox\\\">Triceps</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"forearmCheckBox\\\"\\n                                   value=\\\"forearm\\\" [(ngModel)]=\\\"muscleGroupFilter.forearm\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"forearmCheckBox\\\">Forearm</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"latisimusCheckBox\\\"\\n                                   value=\\\"latisimus\\\" [(ngModel)]=\\\"muscleGroupFilter.latisimus\\\"\\n                                   (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\"\\n                                   for=\\\"latisimusCheckBox\\\">Latisimus</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"erectorsCheckBox\\\"\\n                                   value=\\\"erectors\\\" [(ngModel)]=\\\"muscleGroupFilter.erectors\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"erectorsCheckBox\\\">Erectors</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"trapsCheckBox\\\"\\n                                   value=\\\"traps\\\" [(ngModel)]=\\\"muscleGroupFilter.traps\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"trapsCheckBox\\\">Traps</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"chestCheckBox\\\"\\n                                   value=\\\"chest\\\" [(ngModel)]=\\\"muscleGroupFilter.chest\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"chestCheckBox\\\">Chest</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                                   id=\\\"anteriorDeltoidCheckBox\\\" value=\\\"anteriorDeltoid\\\"\\n                                   [(ngModel)]=\\\"muscleGroupFilter.anteriorDeltoid\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"anteriorDeltoidCheckBox\\\">Anterior\\n                                Deltoid</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                                   id=\\\"lateralDeltoidCheckBox\\\" value=\\\"lateralDeltoid\\\"\\n                                   [(ngModel)]=\\\"muscleGroupFilter.lateralDeltoid\\\"\\n                                   (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"lateralDeltoidCheckBox\\\">Lateral\\n                                Deltoid</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                                   id=\\\"posteriorDeltoidCheckBox\\\" value=\\\"posteriorDeltoid\\\"\\n                                   [(ngModel)]=\\\"muscleGroupFilter.posteriorDeltoid\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"posteriorDeltoidCheckBox\\\">Posterior\\n                                Deltoid</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"hamstringsCheckBox\\\"\\n                                   value=\\\"hamstrings\\\" [(ngModel)]=\\\"muscleGroupFilter.hamstrings\\\"\\n                                   (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\"\\n                                   for=\\\"hamstringsCheckBox\\\">Hamstrings</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"gluteusCheckBox\\\"\\n                                   value=\\\"gluteus\\\" [(ngModel)]=\\\"muscleGroupFilter.gluteus\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"gluteusCheckBox\\\">Gluteus</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"calvesCheckBox\\\"\\n                                   value=\\\"calves\\\" [(ngModel)]=\\\"muscleGroupFilter.calves\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"calvesCheckBox\\\">Calves</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"quadricepsCheckBox\\\"\\n                                   value=\\\"quadriceps\\\" [(ngModel)]=\\\"muscleGroupFilter.quadriceps\\\"\\n                                   (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\"\\n                                   for=\\\"quadricepsCheckBox\\\">Quadriceps</label>\\n                        </div>\\n\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"absCheckBox\\\"\\n                                   value=\\\"abs\\\" [(ngModel)]=\\\"muscleGroupFilter.abs\\\" (change)=\\\"handleFilter()\\\">\\n                            <label class=\\\"form-check-label\\\" for=\\\"absCheckBox\\\">Abs</label>\\n                        </div>\\n                    </div>\\n\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onClearFilter()\\\">Clear Filter</button>\\n\\n                </div>\\n                <div class=\\\"d-inline-block col-md-4 mt-4\\\">\\n                    <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"align-center\\\" alt=\\\"\\\">\\n                    <h1 class=\\\"display-4\\\">All Exercises</h1>\\n                </div>\\n                <div class=\\\"inline-block col-md-3\\\">\\n                    <svg class=\\\"body-model\\\" version=\\\"1.1\\\" id=\\\"Layer_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n                         xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" height=\\\"400\\\"\\n                         viewBox=\\\"0 0 612 792\\\" xml:space=\\\"preserve\\\">\\n\\n                                        <image style=\\\"overflow:visible;\\\" xlink:href=\\\"assets/static/images/muscles.png\\\"\\n                                               transform=\\\"matrix(0.7228 0 0 0.7228 -42.5334 69.2174)\\\"></image>\\n                        <path (click)=\\\"onMuscleClick('abs')\\\" (mouseenter)=\\\"onMuscleMouseEnter('abs')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='abs',\\n        'major-muscle-group': muscleGroupFilter.abs}\\\"\\n                              class=\\\"abs muscle\\\" d=\\\"M137.3,267.09c0,0-53.61,7.17-50.74,35.87c2.87,28.7,4.57,25.83,1.7,45.39c-2.87,19.57,4.83,28.7,4.83,28.7\\n\\tl38.09,50.74c0,0,18.26,21.78,32.87-14.48c14.61-36.26,27-42.39,27-42.39l7.3-6.78c0,0-1.43-7.3-1.3-10.3\\n\\tc0.13-3-2.87-16.04-2.87-16.04s-2.35-10.83,0.13-19.3c2.48-8.48,0-25.04-0.65-26.22s-1.96-16.43-20.74-18s-22.88-5.43-22.88-5.43\\n\\tL137.3,267.09z\\\"><title>Abs</title></path>\\n                        <path (click)=\\\"onMuscleClick('traps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('traps')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='traps',\\n        'major-muscle-group': muscleGroupFilter.traps}\\\"\\n                              class=\\\"traps muscle\\\" d=\\\"M83.7,184.85l10.76,6.46l8.22,3.91l10.17,2.93h6.65v-4.3v-10.57l-1.96-10.76\\n                    C117.54,172.52,107.17,185.43,83.7,184.85z\\\"><title>Traps</title></path>\\n                        <path (click)=\\\"onMuscleClick('traps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('traps')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='traps',\\n        'major-muscle-group': muscleGroupFilter.traps}\\\"\\n                              class=\\\"traps muscle\\\" d=\\\"M163.72,169.98l-1.96,15.36l-0.98,12.82l1.47,1.37l15.95-2.35l12.72-4.3l9-3.52l4.11-1.76\\n                    C204.02,187.59,193.46,190.13,163.72,169.98z\\\"><title>Traps</title></path>\\n                        <path (click)=\\\"onMuscleClick('chest')\\\" (mouseenter)=\\\"onMuscleMouseEnter('chest')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='chest',\\n        'major-muscle-group': muscleGroupFilter.chest}\\\"\\n                              class=\\\"chest muscle\\\" d=\\\"M74.5,213.41l-1.37,11.93l0.68,2.15l2.64,2.74l1.96,11.74c0,0,3.91,20.93,11.15,25.43s5.48,4.11,5.48,4.11\\n                    l6.55,2.74l9.77-0.32c0,0,15.18-1.05,18.7-7.5c3.52-6.46,3.33-5.48,3.52-10.37s0-13.11,0-13.11l0.09-11.54l-3.22-9l-0.2-11.54\\n                    l-0.39-5.28l-10.37-3.52l-11.74-1.17C107.76,200.89,79.59,208.52,74.5,213.41z\\\"><title>Chest</title></path>\\n                        <path (click)=\\\"onMuscleClick('chest')\\\" (mouseenter)=\\\"onMuscleMouseEnter('chest')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='chest',\\n        'major-muscle-group': muscleGroupFilter.chest}\\\"\\n                              class=\\\"chest muscle\\\" d=\\\"M168.41,200.89l-14.28,2.15l-5.67,2.15v2.93v6.85l-1.96,9.2l-4.89,10.37l-0.98,15.26c0,0,1.19,16.46,8.41,18.71\\n                    c7.23,2.25,10.37,4.18,17.22,4.77c6.85,0.59,13.3-1.17,13.3-1.17s8.41-1.57,13.89-10.37c5.48-8.8,7.24-14.48,7.24-14.48l2.35-10.11\\n                    l3.33-10.82l1.57-9l-5.28-5.09C202.65,212.24,180.15,199.12,168.41,200.89z\\\"><title>Chest</title></path>\\n                        <path (click)=\\\"onMuscleClick('biceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('biceps')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='biceps',\\n        'major-muscle-group': muscleGroupFilter.biceps}\\\"\\n                              class=\\\"biceps muscle\\\" d=\\\"M71.96,229.46c0,0-16.96,12.07-19.3,34.11c-2.35,22.04-2.22,25.7-2.22,25.7l1.17,12.91l1.3,6.78l2.35,5.35\\n                    l2.09,6.39l15.26-17.35l8.61-37.3l-3.92-30.78l-2.82-7.08L71.96,229.46z\\\"><title>Biceps</title></path>\\n                        <path (click)=\\\"onMuscleClick('biceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('biceps')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='biceps',\\n        'major-muscle-group': muscleGroupFilter.biceps}\\\"\\n                              class=\\\"biceps muscle\\\" d=\\\"M208.91,228.87l17.22,21.91c0,0,12.33,19.57,11.35,38.93c-0.98,19.37-0.98,19.37-0.98,19.37l-3.52,12.33\\n                    l-9.75-5.87l-10.59-18.59l-3.72-14.09V228.87z\\\"><title>Biceps</title></path>\\n                        <path (click)=\\\"onMuscleClick('quadriceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('quadriceps')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='quadriceps',\\n        'major-muscle-group': muscleGroupFilter.quadriceps}\\\"\\n                              class=\\\"quadriceps muscle\\\" d=\\\"M96,400.04l0.61,8.83L88,425.7l-7.24,17.41l-5.28,19.17c0,0,0,21.13,3.33,40.89\\n                    c3.33,19.76,5.87,34.83,5.87,34.83l5.28,19.57l2.54,10.17l2.93,2.54l2.15-2.54L99.93,556v-10.37c0,0,3.21-5.28,6.21-4.7\\n                    c2.99,0.59,7.49,0.39,7.88,6.85c0.39,6.46,1.96,15.26,1.96,15.26s-0.39,9.2,5.67,7.24c6.07-1.96,7.24-3.72,7.24-3.72l2.15-7.24\\n                    l2.09-25.76l-4.96-30l-6-22.96l-14.87-40.17l-6.14-34.06L96,400.04z\\\"><title>Quadriceps</title></path>\\n                        <path (click)=\\\"onMuscleClick('quadriceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('quadriceps')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='quadriceps',\\n        'major-muscle-group': muscleGroupFilter.quadriceps}\\\"\\n                              class=\\\"quadriceps muscle\\\"\\n                              d=\\\"M185.34,394.05l-7.86,36.56l-11.22,32.52l-4.7,11.74l-6.52,23.74l-2.61,18.52l-0.52,37.3l1.3,5.22l4.43,4.43\\n                    c0,0,7.04,4.17,8.09-11.22c1.04-15.39,4.17-14.87,4.17-14.87l6.78-0.52c0,0,4.7-1.3,3.65,12.78c-1.04,14.09,12.78,5.48,12.78,5.48\\n                    l3.65-12.78l6-23.48l4.96-20.87l4.17-27.39l-2.09-15.91c0,0-3.65-16.7-14.61-35.74S185.34,394.05,185.34,394.05z\\\"><title>Quadriceps</title></path>\\n                        <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': muscleGroupFilter.calves}\\\"\\n                              class=\\\"calves muscle\\\" d=\\\"M422.57,562.07l-4.11,16.24l-1.37,16.43l-1.76,29.15c0,0-0.39,23.67,3.62,28.37c4.01,4.7,7.92,7.43,7.92,7.43\\n                    s9.39-1.76,9-8.02s0.01-10.57,0.01-10.57l3.51,8.02l6.26,9l6.46,4.89l7.63,1.57l1.17-24.85l-2.48-24l-3.39-15.13l-0.52-5.54\\n                    l-11.35-18.59l-6.78-10.3l-2.09,6.39l-1.17,1.43l-5.22-10.3l-3.13-3.39h-1.7L422.57,562.07z\\\"><title>Calves</title></path>\\n                        <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': muscleGroupFilter.calves}\\\"\\n                              class=\\\"calves muscle\\\" d=\\\"M499.52,572.7l-5.35,8.35l-4.43,9.91l-3.91,7.96l-0.78,4.17L483.09,637v13.3l2.74,12.39l0.91,7.7\\n                    c0,0,9.26-6.13,9.52-6.65s6.39-11.35,6.39-11.35l2.35-7.7l0.65-0.65l1.3,6.13v4.96l3.52,4.43l7.83,1.96c0,0,9-4.17,8.61-10.57\\n                    s1.57-21.65,1.57-21.65l-3.78-23.74l-2.61-12.39c0,0-0.78-9.13-2.61-13.57c-1.83-4.43-6.65-14.74-6.65-14.74l-8.35,9.13l-1.57,3.39\\n                    L499.52,572.7z\\\"><title>Calves</title></path>\\n                        <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': muscleGroupFilter.calves}\\\"\\n                              class=\\\"calves muscle\\\" d=\\\"M96.09,585.74l-7.3,15.39l-3.91,30.52l1.83,29.48c0,0,7.04,32.35,7.04,33.13s3.91,26.09,3.91,26.09l17.48-3.65\\n                    l-6.26-42l-5.48-47.74l-1.3-16.43l-0.52-13.57L96.09,585.74z\\\"><title>Calves</title></path>\\n                        <polygon (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                                 (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                 [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': muscleGroupFilter.calves}\\\"\\n                                 class=\\\"calves muscle\\\" points=\\\"128.11,605.5 127.49,606.57 119.7,619.98 115.98,630.35 115.13,648.35 117.35,675.54 119.5,700.59\\n                    120.67,713.5 123.8,684.93 128.11,661.07 130.07,649.91 130.07,636.8 130.07,625.85 \\\"><title>Calves</title></polygon>\\n                        <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': muscleGroupFilter.calves}\\\"\\n                              class=\\\"calves muscle\\\" d=\\\"M157.13,603.74l4.7,13.04l1.57,7.57l-1.83,32.61l-3.13,22.43l-3.65,23.48l-2.74-53.93v-20.02\\n                    C152.04,628.91,157.78,604.33,157.13,603.74z\\\"><title>Calves</title></path>\\n                        <polygon (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                                 (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                 [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': muscleGroupFilter.calves}\\\"\\n                                 class=\\\"calves muscle\\\" points=\\\"161.57,711.74 177.22,717.61 181.65,698.96 189.35,670.52 195.35,648.74 198.22,632.83 197.17,612.48\\n                    194.83,595.52 190.13,595.52 187.13,587.04 182.7,586.26 179.89,599.96 175.39,623.96 167.96,664.13 \\\"><title>Calves</title>\\n  </polygon>\\n                        <path (click)=\\\"onMuscleClick('gluteus')\\\" (mouseenter)=\\\"onMuscleMouseEnter('gluteus')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='gluteus',\\n        'major-muscle-group': muscleGroupFilter.gluteus}\\\"\\n                              class=\\\"gluteus muscle\\\"\\n                              d=\\\"M417.22,365.57l-4.43,11.87l-1.96,10.43L409,403.65l-0.65,20.87c0,0,4.04,21.78,17.35,24.39\\n                    c13.3,2.61,18.78,2.35,18.78,2.35s13.96-1.57,15.91-8.35c1.96-6.78,4.3-4.3,4.3-4.3l5.09,9.52c0,0,7.43,11.35,18.91,10.17\\n                    s18.78-3.52,18.78-3.52s15.26-7.57,13.96-29.09c-1.3-21.52,0.08-37.43,0.08-37.43l-3.47-18.65c0,0-31.3,11.35-35.87,15.26\\n                    s-16.75,20.22-17.24,24.52s-2.97,2.59-2.97,2.59s-0.26-13.54-13.57-26.33c-13.3-12.78-19.7-14.87-19.7-14.87\\\"><title>Gluteus</title></path>\\n                        <path (click)=\\\"onMuscleClick('anteriorDeltoid')\\\"\\n                              (mouseenter)=\\\"onMuscleMouseEnter('anteriorDeltoid')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='anteriorDeltoid',\\n        'major-muscle-group': muscleGroupFilter.anteriorDeltoid}\\\"\\n                              class=\\\"anteriorDeltoid muscle\\\" d=\\\"M109.39,200.89l-12.13-3.72l-6.65-3.65c0,0-17.61-0.65-21.13,2.22c-3.52,2.87-7.96,7.04-10.17,13.3\\n                    c-2.22,6.26-2.61,6.65-3,13.04c-0.39,6.39-0.91,9.26,0,13.83s2.24,9.29,2.24,9.29l6.37-10.46l7.7-6.56l0.52-1.01l1.15-11.81\\n                    l0.22-1.95C74.5,213.41,92.04,198.87,109.39,200.89z\\\"><title>Anterior Deltoid</title></path>\\n                        <path (click)=\\\"onMuscleClick('lateralDeltoid')\\\"\\n                              (mouseenter)=\\\"onMuscleMouseEnter('lateralDeltoid')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='lateralDeltoid',\\n        'major-muscle-group': muscleGroupFilter.lateralDeltoid}\\\"\\n                              class=\\\"lateralDeltoid muscle\\\"\\n                              d=\\\"M89.96,192.97l-11.84-4.99c0,0-14.77,0.59-20.93,10.86c-6.16,10.27-8.51,17.8-8.51,17.8L47.6,231.8l1.27,9.88\\n                    l0.39,10.47L52,264.97l4.4-16.73l1.99-3.6l-2.09-8.72c0,0-0.68-17.39,2.64-25.86C62.27,201.58,69.61,190.03,89.96,192.97z\\\"><title>Lateral Deltoid</title>\\n  </path>\\n                        <path (click)=\\\"onMuscleClick('anteriorDeltoid')\\\"\\n                              (mouseenter)=\\\"onMuscleMouseEnter('anteriorDeltoid')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='anteriorDeltoid',\\n        'major-muscle-group': muscleGroupFilter.anteriorDeltoid}\\\"\\n                              class=\\\"anteriorDeltoid muscle\\\" d=\\\"M173.43,199.52l20.83,8.35l9.76,4.57l5.8,8.48v9.78l15.76,19.4l3.23,5.55l3.05-12.29c0,0,1.7-9.91,0.65-18.65\\n                    c-1.04-8.74-2.48-12.39-5.74-16.3c-3.26-3.91-13.96-13.83-24.39-13.96c-10.43-0.13-12.65,1.43-12.65,1.43l-6.78,2.28L173.43,199.52z\\n                    \\\"><title>Anterior Deltoid</title></path>\\n                        <path (click)=\\\"onMuscleClick('lateralDeltoid')\\\"\\n                              (mouseenter)=\\\"onMuscleMouseEnter('lateralDeltoid')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='lateralDeltoid',\\n        'major-muscle-group': muscleGroupFilter.lateralDeltoid}\\\"\\n                              class=\\\"lateralDeltoid muscle\\\" d=\\\"M193.65,194.43l9.5-2.34c0,0,12.03-0.98,16.33,1.66c4.3,2.64,13.01,8.9,15.95,19.27\\n                    c2.93,10.37,4.21,17.02,4.21,17.61s-0.49,15.26-0.49,15.26l-3.52,20.74l-1.32,2.2l-4.95-12.13l2.63-14.06c0,0,3.89-26.66-6.66-35.87\\n                    s-15-10.58-15-10.58S200.7,193.05,193.65,194.43z\\\"><title>Lateral Deltoid</title></path>\\n                        <path (click)=\\\"onMuscleClick('traps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('traps')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='traps',\\n        'major-muscle-group': muscleGroupFilter.traps}\\\"\\n                              class=\\\"traps muscle\\\" d=\\\"M404.96,187.39L424,197.83l6.78,4.7l-4.17,2.09l4.17,25.3l2.87,28.43c0,0,27.65,43.04,28.43,54.52\\n                    c0.78,11.48,11.48,2.09,11.48,2.09l3.39-14.87l12.52-22.7l8.87-17.74l2.61-10.96l3.13-28.96l4.17-17.74l22.96-11.48l7.3-5.22\\n                    c0,0-44.09-1.83-56.09-29.48s-24.78,0-24.78,0S454.26,177.48,404.96,187.39z\\\"><title>Traps</title></path>\\n                        <path (click)=\\\"onMuscleClick('posteriorDeltoid')\\\"\\n                              (mouseenter)=\\\"onMuscleMouseEnter('posteriorDeltoid')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='posteriorDeltoid',\\n        'major-muscle-group': muscleGroupFilter.posteriorDeltoid}\\\"\\n                              class=\\\"posteriorDeltoid muscle\\\" d=\\\"M373.13,241.91l15.65-23.22l7.04-8.87c0,0,26.87-4.96,30.78-5.22c3.91-0.26,4.17-2.09,4.17-2.09l-15.4-9.42\\n                    l-10.42-5.71c0,0-22.7,6.52-26.61,21.39c-3.91,14.87-5.22,34.43-5.22,34.43V241.91z\\\"><title>Posterior Deltoid</title></path>\\n                        <path (click)=\\\"onMuscleClick('posteriorDeltoid')\\\"\\n                              (mouseenter)=\\\"onMuscleMouseEnter('posteriorDeltoid')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='posteriorDeltoid',\\n        'major-muscle-group': muscleGroupFilter.posteriorDeltoid}\\\"\\n                              class=\\\"posteriorDeltoid muscle\\\" d=\\\"M538.52,185.3c0,0,15.78,4.83,20.35,14.87c4.57,10.04,6.39,19.3,6.39,19.3l1.3,14.09l-1.96,8.61l-7.17-11.87\\n                    l-7.3-11.22c0,0-6.65-14.22-13.17-13.17c-6.52,1.04-8.74,0.52-9.13,0.13c-0.39-0.39-8.87-1.7-8.87-1.7l-8.87-0.52l-2.06-0.82\\n                    c0,0,18.06-8.82,23.19-12.49C536.35,186.86,538.52,185.3,538.52,185.3z\\\"><title>Posterior Deltoid</title></path>\\n                        <path (click)=\\\"onMuscleClick('hamstrings')\\\" (mouseenter)=\\\"onMuscleMouseEnter('hamstrings')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='hamstrings',\\n        'major-muscle-group': muscleGroupFilter.hamstrings}\\\"\\n                              class=\\\"hamstrings muscle\\\"\\n                              d=\\\"M414.09,459.74l-4.43,24.52l2.22,33.13l1.17,16.17l3.65,23.22l1.48,24.84l4.91-21.32l3-9.78l1.04-2.61\\n                    l10.1,19.53l17.29,27.62v-13.24l-6-61.04l-7.04-40.96l-4.17-21.44C437.3,458.39,425.83,446.17,414.09,459.74z\\\"><title>Hamstrings</title></path>\\n                        <path (click)=\\\"onMuscleClick('hamstrings')\\\" (mouseenter)=\\\"onMuscleMouseEnter('hamstrings')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='hamstrings',\\n        'major-muscle-group': muscleGroupFilter.hamstrings}\\\"\\n                              class=\\\"hamstrings muscle\\\"\\n                              d=\\\"M488.7,499.39l-4.17,24.81v34.93l-1.43,26.09l2.74,13.7l13.7-26.22l8.74-18l8.25,18.16l6.88-21.82v-49.3\\n                    c0,0-1.04-27.39-5.74-34.43c-2.46-3.69-15.28-13.81-22.17-4.43C489.2,471.41,488.7,499.39,488.7,499.39z\\\"><title>Hamstrings</title></path>\\n                        <path (click)=\\\"onMuscleClick('latisimus')\\\" (mouseenter)=\\\"onMuscleMouseEnter('latisimus')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='latisimus',\\n        'major-muscle-group': muscleGroupFilter.latisimus}\\\"\\n                              class=\\\"latisimus muscle\\\" d=\\\"M433.39,255.71l-15.65,1.85h-11.22v14.87l-1.57,10.7l6.78,17.22l6,14.87l3.65,17.74l6.26,19.83\\n                    c0,0,5.22,9.65,3.13,13.83c-2.09,4.17,6-8.61,6-8.61l2.61-13.3c0,0,4.99-17.52,13.57-26.12c8.58-8.6,8.96-6.99,8.96-6.99\\n                    l-12.54-27.12L433.39,255.71z\\\"><title>Latisimus</title></path>\\n                        <path (click)=\\\"onMuscleClick('latisimus')\\\" (mouseenter)=\\\"onMuscleMouseEnter('latisimus')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='latisimus',\\n        'major-muscle-group': muscleGroupFilter.latisimus}\\\"\\n                              class=\\\"latisimus muscle\\\"\\n                              d=\\\"M499.29,255.71l-12.95,27.38l-9.38,16.99l-2.62,11.49l16.71,15.38l8.24,15.65l1.15,24.84l3.65,4.12l6.26-17.48\\n                    l9.65-19.3l3.65-16.21l3.13-18.49l5.48-15.91l2.09-30l-7.04,4.17C527.3,258.35,508.83,260.12,499.29,255.71z\\\"><title>Latisimus</title></path>\\n                        <path (click)=\\\"onMuscleClick('triceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('triceps')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='triceps',\\n        'major-muscle-group': muscleGroupFilter.triceps}\\\"\\n                              class=\\\"triceps muscle\\\"\\n                              d=\\\"M389.3,222.61l-4.56,2.08l-9.95,14.76L370,257.57l-1.83,25.83v19.57l3.39,7.04l14.35,12.52l10.43-13.3\\n                    l5.61-10.96l1.17-15.91l3.39-13.3L403.65,238c0,0-1.57-17.22-12.26-15.39C380.7,224.43,389.3,222.61,389.3,222.61z\\\"><title>Triceps</title></path>\\n                        <path (click)=\\\"onMuscleClick('triceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('triceps')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='triceps',\\n        'major-muscle-group': muscleGroupFilter.triceps}\\\"\\n                              class=\\\"triceps muscle\\\" d=\\\"M534.35,224.43l1.04,21.65l-2.42,27.89l1.21,12.81l1.21,18.78l7.04,6.01l9.13,2.85l13.3-9.13l3.13-8.87v-22.17\\n                    l-2.87-21.65l-1.57-9.39l-6.13-12.91l-8.22-13C549.22,217.3,535.13,217.65,534.35,224.43z\\\"><title>Triceps</title></path>\\n                        <path (click)=\\\"onMuscleClick('erectors')\\\" (mouseenter)=\\\"onMuscleMouseEnter('erectors')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='erectors',\\n        'major-muscle-group': muscleGroupFilter.erectors}\\\"\\n                              class=\\\"erectors muscle\\\" d=\\\"M469.12,317.83c0,0,26.61,7.3,27.4,23.48c0.78,16.17,0,33.13,0,33.13L478,385.39l-14.35,23.48l-13.57-25.83\\n                    l-14.61-11.48l5.3-26.7C440.78,344.87,443.81,317.83,469.12,317.83z\\\"><title>Erectors</title></path>\\n                        <path (click)=\\\"onMuscleClick('forearm')\\\" (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': muscleGroupFilter.forearm}\\\"\\n                              class=\\\"forearm muscle\\\"\\n                              d=\\\"M45,298s-6.53,18.52-6.53,43.83S34.78,396,34.78,396L58,398.7s3.65-17.74,7.83-26.87S77,343.91,77.57,337.91s1-16.5,1-16.5l-9.83-9.06-3.66-.49-6.34,8.84Z\\\"><title>Forearm</title>\\n  </path>\\n                        <path (click)=\\\"onMuscleClick('forearm')\\\" (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': muscleGroupFilter.forearm}\\\"\\n                              class=\\\"forearm muscle\\\"\\n                              d=\\\"M215.3,325.91l7.92-10.37,9.76,5.87,6.65-14.28,5.67-13s8.61,25.82,9.92,35.74,5.21,44.6,5.21,44.6l4.7,24.27L243.74,400s-13.57-29-17.48-37.87S216.61,341,215.3,325.91Z\\\"><title>Forearm</title>\\n  </path>\\n                        <path (click)=\\\"onMuscleClick('forearm')\\\" (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': muscleGroupFilter.forearm}\\\"\\n                              class=\\\"forearm muscle\\\"\\n                              d=\\\"M346.78,400l20.09,2.31,2.87-6.35s16.69-31.74,20.09-41.13,9.79-31.62,9.65-40.44l-.14-8.81-13.06,18.43s-12.1,7.08-13.15-1.53l-1-8.61L371,309.52l-5.14-9.17s-7.57,21.65-10.18,42.78S346.78,400,346.78,400Z\\\"><title>Forearm</title>\\n  </path>\\n                        <path (click)=\\\"onMuscleClick('forearm')\\\" (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n                              (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                              [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': muscleGroupFilter.forearm}\\\"\\n                              class=\\\"forearm muscle\\\"\\n                              d=\\\"M534.35,306.15l1.89,32.09L540,352.33l12.32,30.32,5.09,20,21.91-2.94-2.93-19.56L576,333.54s-.2-14.47-2.74-24.06A99.07,99.07,0,0,0,568,294.22l-2.7,9.87-7.15,12s2.47,7.63-7.66,11.15-8.19-3.91-8.19-3.91l1.37-2.94Z\\\"><title>Forearm</title>\\n  </path>\\n                                    </svg>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n\\n        <hr class=\\\"my-4\\\">\\n        <div class=\\\"container justify-content-center pb-0\\\">\\n            <ng-template [ngIf]=\\\"filteredExercises.length > 0\\\" [ngIfElse]=\\\"noSuchExercises\\\">\\n                <div class=\\\"row\\\">\\n                    <app-exercise-card\\n                            (modalOpen)=\\\"open(createWorkoutExerciseModal, $event)\\\"\\n                            [exercise]=\\\"exercise\\\"\\n                            class=\\\"col-lg-4 col-sm-12 my-3 d-flex mx-auto align-items-stretch\\\"\\n                            *ngFor=\\\"let exercise of filteredExercises | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize\\\">\\n                        >\\n                    </app-exercise-card>\\n                </div>\\n                <ngb-pagination class=\\\"d-inline-block mt-5\\\" [(page)]=\\\"page\\\"\\n                                [pageSize]=\\\"pageSize\\\"\\n                                [collectionSize]=\\\"filteredExercises.length\\\"></ngb-pagination>\\n            </ng-template>\\n\\n            <ng-template #noSuchExercises>\\n                <h5>There are no exercises.</h5>\\n            </ng-template>\\n\\n        </div>\\n\\n\\n    </div>\\n\\n\\n</div>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"jumbotron\\\">\\n        <div class=\\\"col-lg-10 col-xl-9 mx-auto\\\" *ngIf=\\\"loading\\\">\\n            <div class=\\\"loader\\\">\\n                <img src=\\\"assets/static/images/loading.gif\\\" alt=\\\"Loading...\\\">\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"!loading\\\">\\n            <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\n            <h1 class=\\\"display-4\\\">Create Exercise</h1>\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-10 col-xl-9 mx-auto\\\">\\n                        <div class=\\\"card card-signin create-exercise flex-row my-5\\\">\\n                            <div class=\\\"card-img-left d-none d-md-flex\\\">\\n                                <svg class=\\\"body-model\\\" version=\\\"1.1\\\" id=\\\"Layer_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n                                     xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" height=\\\"800\\\"\\n                                     viewBox=\\\"0 0 612 792\\\" xml:space=\\\"preserve\\\">\\n\\n                                        <image style=\\\"overflow:visible;\\\" xlink:href=\\\"assets/static/images/muscles.png\\\"\\n                                               transform=\\\"matrix(0.7228 0 0 0.7228 -42.5334 69.2174)\\\"></image>\\n                                    <path (click)=\\\"onMuscleClick('abs')\\\" (mouseenter)=\\\"onMuscleMouseEnter('abs')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='abs',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'abs',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.abs}\\\"\\n                                          class=\\\"abs muscle\\\" d=\\\"M137.3,267.09c0,0-53.61,7.17-50.74,35.87c2.87,28.7,4.57,25.83,1.7,45.39c-2.87,19.57,4.83,28.7,4.83,28.7\\n\\tl38.09,50.74c0,0,18.26,21.78,32.87-14.48c14.61-36.26,27-42.39,27-42.39l7.3-6.78c0,0-1.43-7.3-1.3-10.3\\n\\tc0.13-3-2.87-16.04-2.87-16.04s-2.35-10.83,0.13-19.3c2.48-8.48,0-25.04-0.65-26.22s-1.96-16.43-20.74-18s-22.88-5.43-22.88-5.43\\n\\tL137.3,267.09z\\\"><title>Abs</title></path>\\n                                    <path (click)=\\\"onMuscleClick('traps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('traps')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='traps',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'traps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.traps}\\\"\\n                                          class=\\\"traps muscle\\\" d=\\\"M83.7,184.85l10.76,6.46l8.22,3.91l10.17,2.93h6.65v-4.3v-10.57l-1.96-10.76\\n                    C117.54,172.52,107.17,185.43,83.7,184.85z\\\"><title>Traps</title></path>\\n                                    <path (click)=\\\"onMuscleClick('traps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('traps')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='traps',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'traps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.traps}\\\"\\n                                          class=\\\"traps muscle\\\" d=\\\"M163.72,169.98l-1.96,15.36l-0.98,12.82l1.47,1.37l15.95-2.35l12.72-4.3l9-3.52l4.11-1.76\\n                    C204.02,187.59,193.46,190.13,163.72,169.98z\\\"><title>Traps</title></path>\\n                                    <path (click)=\\\"onMuscleClick('chest')\\\" (mouseenter)=\\\"onMuscleMouseEnter('chest')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='chest',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'chest',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.chest}\\\"\\n                                          class=\\\"chest muscle\\\" d=\\\"M74.5,213.41l-1.37,11.93l0.68,2.15l2.64,2.74l1.96,11.74c0,0,3.91,20.93,11.15,25.43s5.48,4.11,5.48,4.11\\n                    l6.55,2.74l9.77-0.32c0,0,15.18-1.05,18.7-7.5c3.52-6.46,3.33-5.48,3.52-10.37s0-13.11,0-13.11l0.09-11.54l-3.22-9l-0.2-11.54\\n                    l-0.39-5.28l-10.37-3.52l-11.74-1.17C107.76,200.89,79.59,208.52,74.5,213.41z\\\"><title>Chest</title></path>\\n                                    <path (click)=\\\"onMuscleClick('chest')\\\" (mouseenter)=\\\"onMuscleMouseEnter('chest')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='chest',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'chest',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.chest}\\\"\\n                                          class=\\\"chest muscle\\\" d=\\\"M168.41,200.89l-14.28,2.15l-5.67,2.15v2.93v6.85l-1.96,9.2l-4.89,10.37l-0.98,15.26c0,0,1.19,16.46,8.41,18.71\\n                    c7.23,2.25,10.37,4.18,17.22,4.77c6.85,0.59,13.3-1.17,13.3-1.17s8.41-1.57,13.89-10.37c5.48-8.8,7.24-14.48,7.24-14.48l2.35-10.11\\n                    l3.33-10.82l1.57-9l-5.28-5.09C202.65,212.24,180.15,199.12,168.41,200.89z\\\"><title>Chest</title></path>\\n                                    <path (click)=\\\"onMuscleClick('biceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('biceps')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='biceps',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'biceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.biceps}\\\"\\n                                          class=\\\"biceps muscle\\\" d=\\\"M71.96,229.46c0,0-16.96,12.07-19.3,34.11c-2.35,22.04-2.22,25.7-2.22,25.7l1.17,12.91l1.3,6.78l2.35,5.35\\n                    l2.09,6.39l15.26-17.35l8.61-37.3l-3.92-30.78l-2.82-7.08L71.96,229.46z\\\"><title>Biceps</title></path>\\n                                    <path (click)=\\\"onMuscleClick('biceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('biceps')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='biceps',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'biceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.biceps}\\\"\\n                                          class=\\\"biceps muscle\\\" d=\\\"M208.91,228.87l17.22,21.91c0,0,12.33,19.57,11.35,38.93c-0.98,19.37-0.98,19.37-0.98,19.37l-3.52,12.33\\n                    l-9.75-5.87l-10.59-18.59l-3.72-14.09V228.87z\\\"><title>Biceps</title></path>\\n                                    <path (click)=\\\"onMuscleClick('quadriceps')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('quadriceps')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='quadriceps',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'quadriceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.quadriceps}\\\"\\n                                          class=\\\"quadriceps muscle\\\" d=\\\"M96,400.04l0.61,8.83L88,425.7l-7.24,17.41l-5.28,19.17c0,0,0,21.13,3.33,40.89\\n                    c3.33,19.76,5.87,34.83,5.87,34.83l5.28,19.57l2.54,10.17l2.93,2.54l2.15-2.54L99.93,556v-10.37c0,0,3.21-5.28,6.21-4.7\\n                    c2.99,0.59,7.49,0.39,7.88,6.85c0.39,6.46,1.96,15.26,1.96,15.26s-0.39,9.2,5.67,7.24c6.07-1.96,7.24-3.72,7.24-3.72l2.15-7.24\\n                    l2.09-25.76l-4.96-30l-6-22.96l-14.87-40.17l-6.14-34.06L96,400.04z\\\"><title>Quadriceps</title></path>\\n                                    <path (click)=\\\"onMuscleClick('quadriceps')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('quadriceps')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='quadriceps',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'quadriceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.quadriceps}\\\"\\n                                          class=\\\"quadriceps muscle\\\"\\n                                          d=\\\"M185.34,394.05l-7.86,36.56l-11.22,32.52l-4.7,11.74l-6.52,23.74l-2.61,18.52l-0.52,37.3l1.3,5.22l4.43,4.43\\n                    c0,0,7.04,4.17,8.09-11.22c1.04-15.39,4.17-14.87,4.17-14.87l6.78-0.52c0,0,4.7-1.3,3.65,12.78c-1.04,14.09,12.78,5.48,12.78,5.48\\n                    l3.65-12.78l6-23.48l4.96-20.87l4.17-27.39l-2.09-15.91c0,0-3.65-16.7-14.61-35.74S185.34,394.05,185.34,394.05z\\\"><title>Quadriceps</title></path>\\n                                    <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n                                          class=\\\"calves muscle\\\" d=\\\"M422.57,562.07l-4.11,16.24l-1.37,16.43l-1.76,29.15c0,0-0.39,23.67,3.62,28.37c4.01,4.7,7.92,7.43,7.92,7.43\\n                    s9.39-1.76,9-8.02s0.01-10.57,0.01-10.57l3.51,8.02l6.26,9l6.46,4.89l7.63,1.57l1.17-24.85l-2.48-24l-3.39-15.13l-0.52-5.54\\n                    l-11.35-18.59l-6.78-10.3l-2.09,6.39l-1.17,1.43l-5.22-10.3l-3.13-3.39h-1.7L422.57,562.07z\\\"><title>Calves</title></path>\\n                                    <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n                                          class=\\\"calves muscle\\\" d=\\\"M499.52,572.7l-5.35,8.35l-4.43,9.91l-3.91,7.96l-0.78,4.17L483.09,637v13.3l2.74,12.39l0.91,7.7\\n                    c0,0,9.26-6.13,9.52-6.65s6.39-11.35,6.39-11.35l2.35-7.7l0.65-0.65l1.3,6.13v4.96l3.52,4.43l7.83,1.96c0,0,9-4.17,8.61-10.57\\n                    s1.57-21.65,1.57-21.65l-3.78-23.74l-2.61-12.39c0,0-0.78-9.13-2.61-13.57c-1.83-4.43-6.65-14.74-6.65-14.74l-8.35,9.13l-1.57,3.39\\n                    L499.52,572.7z\\\"><title>Calves</title></path>\\n                                    <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n                                          class=\\\"calves muscle\\\" d=\\\"M96.09,585.74l-7.3,15.39l-3.91,30.52l1.83,29.48c0,0,7.04,32.35,7.04,33.13s3.91,26.09,3.91,26.09l17.48-3.65\\n                    l-6.26-42l-5.48-47.74l-1.3-16.43l-0.52-13.57L96.09,585.74z\\\"><title>Calves</title></path>\\n                                    <polygon (click)=\\\"onMuscleClick('calves')\\\"\\n                                             (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                                             (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                             [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n                                             class=\\\"calves muscle\\\" points=\\\"128.11,605.5 127.49,606.57 119.7,619.98 115.98,630.35 115.13,648.35 117.35,675.54 119.5,700.59\\n                    120.67,713.5 123.8,684.93 128.11,661.07 130.07,649.91 130.07,636.8 130.07,625.85 \\\"><title>Calves</title></polygon>\\n                                    <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n                                          class=\\\"calves muscle\\\" d=\\\"M157.13,603.74l4.7,13.04l1.57,7.57l-1.83,32.61l-3.13,22.43l-3.65,23.48l-2.74-53.93v-20.02\\n                    C152.04,628.91,157.78,604.33,157.13,603.74z\\\"><title>Calves</title></path>\\n                                    <polygon (click)=\\\"onMuscleClick('calves')\\\"\\n                                             (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n                                             (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                             [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n                                             class=\\\"calves muscle\\\" points=\\\"161.57,711.74 177.22,717.61 181.65,698.96 189.35,670.52 195.35,648.74 198.22,632.83 197.17,612.48\\n                    194.83,595.52 190.13,595.52 187.13,587.04 182.7,586.26 179.89,599.96 175.39,623.96 167.96,664.13 \\\"><title>Calves</title>\\n  </polygon>\\n                                    <path (click)=\\\"onMuscleClick('gluteus')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('gluteus')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='gluteus',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'gluteus',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.gluteus}\\\"\\n                                          class=\\\"gluteus muscle\\\"\\n                                          d=\\\"M417.22,365.57l-4.43,11.87l-1.96,10.43L409,403.65l-0.65,20.87c0,0,4.04,21.78,17.35,24.39\\n                    c13.3,2.61,18.78,2.35,18.78,2.35s13.96-1.57,15.91-8.35c1.96-6.78,4.3-4.3,4.3-4.3l5.09,9.52c0,0,7.43,11.35,18.91,10.17\\n                    s18.78-3.52,18.78-3.52s15.26-7.57,13.96-29.09c-1.3-21.52,0.08-37.43,0.08-37.43l-3.47-18.65c0,0-31.3,11.35-35.87,15.26\\n                    s-16.75,20.22-17.24,24.52s-2.97,2.59-2.97,2.59s-0.26-13.54-13.57-26.33c-13.3-12.78-19.7-14.87-19.7-14.87\\\"><title>Gluteus</title></path>\\n                                    <path (click)=\\\"onMuscleClick('anteriorDeltoid')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('anteriorDeltoid')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='anteriorDeltoid',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'anteriorDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.anteriorDeltoid}\\\"\\n                                          class=\\\"anteriorDeltoid muscle\\\" d=\\\"M109.39,200.89l-12.13-3.72l-6.65-3.65c0,0-17.61-0.65-21.13,2.22c-3.52,2.87-7.96,7.04-10.17,13.3\\n                    c-2.22,6.26-2.61,6.65-3,13.04c-0.39,6.39-0.91,9.26,0,13.83s2.24,9.29,2.24,9.29l6.37-10.46l7.7-6.56l0.52-1.01l1.15-11.81\\n                    l0.22-1.95C74.5,213.41,92.04,198.87,109.39,200.89z\\\"><title>Anterior Deltoid</title></path>\\n                                    <path (click)=\\\"onMuscleClick('lateralDeltoid')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('lateralDeltoid')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='lateralDeltoid',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'lateralDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.lateralDeltoid}\\\"\\n                                          class=\\\"lateralDeltoid muscle\\\"\\n                                          d=\\\"M89.96,192.97l-11.84-4.99c0,0-14.77,0.59-20.93,10.86c-6.16,10.27-8.51,17.8-8.51,17.8L47.6,231.8l1.27,9.88\\n                    l0.39,10.47L52,264.97l4.4-16.73l1.99-3.6l-2.09-8.72c0,0-0.68-17.39,2.64-25.86C62.27,201.58,69.61,190.03,89.96,192.97z\\\">\\n  <title>Lateral Deltoid</title></path>\\n                                    <path (click)=\\\"onMuscleClick('anteriorDeltoid')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('anteriorDeltoid')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='anteriorDeltoid',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'anteriorDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.anteriorDeltoid}\\\"\\n                                          class=\\\"anteriorDeltoid muscle\\\" d=\\\"M173.43,199.52l20.83,8.35l9.76,4.57l5.8,8.48v9.78l15.76,19.4l3.23,5.55l3.05-12.29c0,0,1.7-9.91,0.65-18.65\\n                    c-1.04-8.74-2.48-12.39-5.74-16.3c-3.26-3.91-13.96-13.83-24.39-13.96c-10.43-0.13-12.65,1.43-12.65,1.43l-6.78,2.28L173.43,199.52z\\n                    \\\"><title>Anterior Deltoid</title></path>\\n                                    <path (click)=\\\"onMuscleClick('lateralDeltoid')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('lateralDeltoid')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='lateralDeltoid',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'lateralDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.lateralDeltoid}\\\"\\n                                          class=\\\"lateralDeltoid muscle\\\" d=\\\"M193.65,194.43l9.5-2.34c0,0,12.03-0.98,16.33,1.66c4.3,2.64,13.01,8.9,15.95,19.27\\n                    c2.93,10.37,4.21,17.02,4.21,17.61s-0.49,15.26-0.49,15.26l-3.52,20.74l-1.32,2.2l-4.95-12.13l2.63-14.06c0,0,3.89-26.66-6.66-35.87\\n                    s-15-10.58-15-10.58S200.7,193.05,193.65,194.43z\\\"><title>Lateral Deltoid</title></path>\\n                                    <path (click)=\\\"onMuscleClick('traps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('traps')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='traps',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'traps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.traps}\\\"\\n                                          class=\\\"traps muscle\\\" d=\\\"M404.96,187.39L424,197.83l6.78,4.7l-4.17,2.09l4.17,25.3l2.87,28.43c0,0,27.65,43.04,28.43,54.52\\n                    c0.78,11.48,11.48,2.09,11.48,2.09l3.39-14.87l12.52-22.7l8.87-17.74l2.61-10.96l3.13-28.96l4.17-17.74l22.96-11.48l7.3-5.22\\n                    c0,0-44.09-1.83-56.09-29.48s-24.78,0-24.78,0S454.26,177.48,404.96,187.39z\\\"><title>Traps</title></path>\\n                                    <path (click)=\\\"onMuscleClick('posteriorDeltoid')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('posteriorDeltoid')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='posteriorDeltoid',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'posteriorDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.posteriorDeltoid}\\\"\\n                                          class=\\\"posteriorDeltoid muscle\\\" d=\\\"M373.13,241.91l15.65-23.22l7.04-8.87c0,0,26.87-4.96,30.78-5.22c3.91-0.26,4.17-2.09,4.17-2.09l-15.4-9.42\\n                    l-10.42-5.71c0,0-22.7,6.52-26.61,21.39c-3.91,14.87-5.22,34.43-5.22,34.43V241.91z\\\"><title>Posterior Deltoid</title></path>\\n                                    <path (click)=\\\"onMuscleClick('posteriorDeltoid')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('posteriorDeltoid')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='posteriorDeltoid',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'posteriorDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.posteriorDeltoid}\\\"\\n                                          class=\\\"posteriorDeltoid muscle\\\" d=\\\"M538.52,185.3c0,0,15.78,4.83,20.35,14.87c4.57,10.04,6.39,19.3,6.39,19.3l1.3,14.09l-1.96,8.61l-7.17-11.87\\n                    l-7.3-11.22c0,0-6.65-14.22-13.17-13.17c-6.52,1.04-8.74,0.52-9.13,0.13c-0.39-0.39-8.87-1.7-8.87-1.7l-8.87-0.52l-2.06-0.82\\n                    c0,0,18.06-8.82,23.19-12.49C536.35,186.86,538.52,185.3,538.52,185.3z\\\"><title>Posterior Deltoid</title></path>\\n                                    <path (click)=\\\"onMuscleClick('hamstrings')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('hamstrings')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='hamstrings',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'hamstrings',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.hamstrings}\\\"\\n                                          class=\\\"hamstrings muscle\\\"\\n                                          d=\\\"M414.09,459.74l-4.43,24.52l2.22,33.13l1.17,16.17l3.65,23.22l1.48,24.84l4.91-21.32l3-9.78l1.04-2.61\\n                    l10.1,19.53l17.29,27.62v-13.24l-6-61.04l-7.04-40.96l-4.17-21.44C437.3,458.39,425.83,446.17,414.09,459.74z\\\"><title>Hamstrings</title></path>\\n                                    <path (click)=\\\"onMuscleClick('hamstrings')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('hamstrings')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='hamstrings',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'hamstrings',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.hamstrings}\\\"\\n                                          class=\\\"hamstrings muscle\\\"\\n                                          d=\\\"M488.7,499.39l-4.17,24.81v34.93l-1.43,26.09l2.74,13.7l13.7-26.22l8.74-18l8.25,18.16l6.88-21.82v-49.3\\n                    c0,0-1.04-27.39-5.74-34.43c-2.46-3.69-15.28-13.81-22.17-4.43C489.2,471.41,488.7,499.39,488.7,499.39z\\\"><title>Hamstrings</title></path>\\n                                    <path (click)=\\\"onMuscleClick('latisimus')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('latisimus')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='latisimus',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'latisimus',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.latisimus}\\\"\\n                                          class=\\\"latisimus muscle\\\" d=\\\"M433.39,255.71l-15.65,1.85h-11.22v14.87l-1.57,10.7l6.78,17.22l6,14.87l3.65,17.74l6.26,19.83\\n                    c0,0,5.22,9.65,3.13,13.83c-2.09,4.17,6-8.61,6-8.61l2.61-13.3c0,0,4.99-17.52,13.57-26.12c8.58-8.6,8.96-6.99,8.96-6.99\\n                    l-12.54-27.12L433.39,255.71z\\\"><title>Latisimus</title></path>\\n                                    <path (click)=\\\"onMuscleClick('latisimus')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('latisimus')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='latisimus',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'latisimus',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.latisimus}\\\"\\n                                          class=\\\"latisimus muscle\\\"\\n                                          d=\\\"M499.29,255.71l-12.95,27.38l-9.38,16.99l-2.62,11.49l16.71,15.38l8.24,15.65l1.15,24.84l3.65,4.12l6.26-17.48\\n                    l9.65-19.3l3.65-16.21l3.13-18.49l5.48-15.91l2.09-30l-7.04,4.17C527.3,258.35,508.83,260.12,499.29,255.71z\\\"><title>Latisimus</title></path>\\n                                    <path (click)=\\\"onMuscleClick('triceps')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('triceps')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='triceps',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'triceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.triceps}\\\"\\n                                          class=\\\"triceps muscle\\\"\\n                                          d=\\\"M389.3,222.61l-4.56,2.08l-9.95,14.76L370,257.57l-1.83,25.83v19.57l3.39,7.04l14.35,12.52l10.43-13.3\\n                    l5.61-10.96l1.17-15.91l3.39-13.3L403.65,238c0,0-1.57-17.22-12.26-15.39C380.7,224.43,389.3,222.61,389.3,222.61z\\\"><title>Triceps</title></path>\\n                                    <path (click)=\\\"onMuscleClick('triceps')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('triceps')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='triceps',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'triceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.triceps}\\\"\\n                                          class=\\\"triceps muscle\\\" d=\\\"M534.35,224.43l1.04,21.65l-2.42,27.89l1.21,12.81l1.21,18.78l7.04,6.01l9.13,2.85l13.3-9.13l3.13-8.87v-22.17\\n                    l-2.87-21.65l-1.57-9.39l-6.13-12.91l-8.22-13C549.22,217.3,535.13,217.65,534.35,224.43z\\\"><title>Triceps</title></path>\\n                                    <path (click)=\\\"onMuscleClick('erectors')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('erectors')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='erectors',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'erectors',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.erectors}\\\"\\n                                          class=\\\"erectors muscle\\\" d=\\\"M469.12,317.83c0,0,26.61,7.3,27.4,23.48c0.78,16.17,0,33.13,0,33.13L478,385.39l-14.35,23.48l-13.57-25.83\\n                    l-14.61-11.48l5.3-26.7C440.78,344.87,443.81,317.83,469.12,317.83z\\\"><title>Erectors</title></path>\\n                                    <path (click)=\\\"onMuscleClick('forearm')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'forearm',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.forearm}\\\"\\n                                          class=\\\"forearm muscle\\\"\\n                                          d=\\\"M45,298s-6.53,18.52-6.53,43.83S34.78,396,34.78,396L58,398.7s3.65-17.74,7.83-26.87S77,343.91,77.57,337.91s1-16.5,1-16.5l-9.83-9.06-3.66-.49-6.34,8.84Z\\\">\\n  <title>Abs</title></path>\\n                                    <path (click)=\\\"onMuscleClick('forearm')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'forearm',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.forearm}\\\"\\n                                          class=\\\"forearm muscle\\\"\\n                                          d=\\\"M215.3,325.91l7.92-10.37,9.76,5.87,6.65-14.28,5.67-13s8.61,25.82,9.92,35.74,5.21,44.6,5.21,44.6l4.7,24.27L243.74,400s-13.57-29-17.48-37.87S216.61,341,215.3,325.91Z\\\">\\n  <title>Forearm</title></path>\\n                                    <path (click)=\\\"onMuscleClick('forearm')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'forearm',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.forearm}\\\"\\n                                          class=\\\"forearm muscle\\\"\\n                                          d=\\\"M346.78,400l20.09,2.31,2.87-6.35s16.69-31.74,20.09-41.13,9.79-31.62,9.65-40.44l-.14-8.81-13.06,18.43s-12.1,7.08-13.15-1.53l-1-8.61L371,309.52l-5.14-9.17s-7.57,21.65-10.18,42.78S346.78,400,346.78,400Z\\\">\\n  <title>Forearm</title></path>\\n                                    <path (click)=\\\"onMuscleClick('forearm')\\\"\\n                                          (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n                                          (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n                                          [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': exerciseBindingModel.majorMuscleGroup === 'forearm',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.forearm}\\\"\\n                                          class=\\\"forearm muscle\\\"\\n                                          d=\\\"M534.35,306.15l1.89,32.09L540,352.33l12.32,30.32,5.09,20,21.91-2.94-2.93-19.56L576,333.54s-.2-14.47-2.74-24.06A99.07,99.07,0,0,0,568,294.22l-2.7,9.87-7.15,12s2.47,7.63-7.66,11.15-8.19-3.91-8.19-3.91l1.37-2.94Z\\\">\\n  <title>Forearm</title></path>\\n                                    </svg>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <h5 class=\\\"card-title text-center\\\">Exercise Form</h5>\\n                                <form class=\\\"form-signin\\\" #exerciseForm=\\\"ngForm\\\">\\n\\n                                    <div class=\\\"form-label-group\\\">\\n                                        <label for=\\\"inputExerciseName\\\">Exercise name</label>\\n                                        <input type=\\\"text\\\" id=\\\"inputExerciseName\\\" class=\\\"form-control\\\"\\n                                               placeholder=\\\"Exercise name\\\" name=\\\"exerciseName\\\"\\n                                               #inputExerciseName=\\\"ngModel\\\" required\\n                                               [ngClass]=\\\"{'is-valid': inputExerciseName.valid && inputExerciseName.touched,\\n                         'is-invalid': inputExerciseName.invalid && inputExerciseName.touched}\\\"\\n                                               [(ngModel)]=\\\"exerciseBindingModel.name\\\">\\n                                        <div class=\\\"valid-feedback\\\"></div>\\n                                        <div class=\\\"invalid-feedback\\\">\\n                                            Exercise name is required.\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-label-group\\\">\\n                                        <label for=\\\"inputExerciseInstructions\\\">Exercise instructions</label>\\n                                        <textarea class=\\\"form-control\\\" id=\\\"inputExerciseInstructions\\\" rows=\\\"4\\\" required\\n                                                  minlength=\\\"20\\\" wrap=\\\"hard\\\" placeholder=\\\"Exercise instructions\\\"\\n                                                  name=\\\"exerciseInstructions\\\"\\n                                                  #inputExerciseInstructions=\\\"ngModel\\\"\\n                                                  [ngClass]=\\\"{'is-valid': inputExerciseInstructions.valid && inputExerciseInstructions.touched,\\n                         'is-invalid': inputExerciseInstructions.invalid && inputExerciseInstructions.touched}\\\"\\n                                                  [(ngModel)]=\\\"exerciseBindingModel.instructions\\\"></textarea>\\n                                        <div class=\\\"valid-feedback\\\"></div>\\n                                        <div class=\\\"invalid-feedback\\\">\\n                                            Exercise instructions are required.\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-label-group\\\">\\n                                        <label for=\\\"customFile\\\" id=\\\"exercisePictureLabel\\\">Exercise picture</label>\\n                                        <div class=\\\"custom-file\\\" id=\\\"customFileContainer\\\">\\n                                            <input type=\\\"file\\\" class=\\\"custom-file-input form-control\\\"\\n                                                   id=\\\"customFile\\\" name=\\\"exercisePictureFile\\\"\\n                                                   (change)=\\\"handleFileInput($event.target.files)\\\">\\n                                            <label class=\\\"custom-file-label\\\" for=\\\"customFile\\\"\\n                                                   id=\\\"çhooseFileLabel\\\" #chooseFileLabel>Choose\\n                                                file</label>\\n                                        </div>\\n\\n                                    </div>\\n\\n                                    <div class=\\\"form-label-group\\\">\\n                                        <label for=\\\"youtubeVideoUrl\\\">YouTube Video URL</label>\\n                                        <input type=\\\"url\\\" class=\\\"form-control is-valid\\\" id=\\\"youtubeVideoUrl\\\"\\n                                               name=\\\"youtubeVideoUrl\\\" #youtubeVideoUrl=\\\"ngModel\\\"\\n                                               placeholder=\\\"Enter YouTube Video URL\\\"\\n                                               pattern=\\\"http(?:s?):\\\\/\\\\/(?:www\\\\.)?youtu(?:be\\\\.com\\\\/watch\\\\?v=|\\\\.be\\\\/)([\\\\w\\\\-\\\\_]*)(&(amp;)?[\\\\w\\\\?‌​=]*)?\\\"\\n                                               [ngClass]=\\\"{'is-valid': youtubeVideoUrl.valid && youtubeVideoUrl.touched,\\n                         'is-invalid': youtubeVideoUrl.invalid && youtubeVideoUrl.touched}\\\"\\n                                               [(ngModel)]=\\\"exerciseBindingModel.youtubeURL\\\">\\n                                        <div class=\\\"valid-feedback\\\">\\n                                        </div>\\n                                        <div class=\\\"invalid-feedback\\\">\\n                                            Please enter a valid YouTube link.\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-label-group\\\">\\n                                        <label for=\\\"inputMajorMuscleGroup\\\">Major Muscle Group</label>\\n                                        <select class=\\\"custom-select form-control\\\" id=\\\"inputMajorMuscleGroup\\\"\\n                                                name=\\\"inputMajorMuscleGroup\\\" #inputMajorMuscleGroup=\\\"ngModel\\\" required\\n                                                [ngClass]=\\\"{'is-valid': inputMajorMuscleGroup.valid && inputMajorMuscleGroup.touched,\\n                         'is-invalid': inputMajorMuscleGroup.invalid && inputMajorMuscleGroup.touched}\\\"\\n                                                [(ngModel)]=\\\"exerciseBindingModel.majorMuscleGroup\\\"\\n                                                (change)=\\\"handleMajorMuscleGroupChange($event)\\\">\\n                                            <option selected value=\\\"\\\">Select Major Muscle Group</option>\\n                                            <option value=\\\"biceps\\\">Biceps</option>\\n                                            <option value=\\\"triceps\\\">Triceps</option>\\n                                            <option value=\\\"forearm\\\">Forearm</option>\\n                                            <option value=\\\"latisimus\\\">Latisimus</option>\\n                                            <option value=\\\"erectors\\\">Erectors</option>\\n                                            <option value=\\\"traps\\\">Traps</option>\\n                                            <option value=\\\"chest\\\">Chest</option>\\n                                            <option value=\\\"anteriorDeltoid\\\">Anterior Deltoid</option>\\n                                            <option value=\\\"lateralDeltoid\\\">Lateral Deltoid</option>\\n                                            <option value=\\\"posteriorDeltoid\\\">Posterior Deltoid</option>\\n                                            <option value=\\\"hamstrings\\\">Hamstrings</option>\\n                                            <option value=\\\"gluteus\\\">Gluteus</option>\\n                                            <option value=\\\"calves\\\">Calves</option>\\n                                            <option value=\\\"quadriceps\\\">Quadriceps</option>\\n                                            <option value=\\\"abs\\\">Abs</option>\\n                                        </select>\\n                                    </div>\\n\\n                                    <div class=\\\"form-label-group\\\">\\n                                        <label class=\\\"d-block\\\">Assisting Muscle Groups</label>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"bicepsCheckBox\\\"\\n                                                   value=\\\"biceps\\\" (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.biceps\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='biceps'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"bicepsCheckBox\\\">Biceps</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"tricepsCheckBox\\\"\\n                                                   value=\\\"triceps\\\" (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.triceps\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='triceps'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"tricepsCheckBox\\\">Triceps</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"forearmCheckBox\\\"\\n                                                   value=\\\"forearm\\\" (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.forearm\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='forearm'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"forearmCheckBox\\\">Forearm</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"latisimusCheckBox\\\"\\n                                                   value=\\\"latisimus\\\"\\n                                                   (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.latisimus\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='latisimus'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"latisimusCheckBox\\\">Latisimus</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"erectorsCheckBox\\\"\\n                                                   value=\\\"erectors\\\" (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.erectors\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='erectors'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"erectorsCheckBox\\\">Erectors</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"trapsCheckBox\\\"\\n                                                   value=\\\"traps\\\" (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.traps\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='traps'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"trapsCheckBox\\\">Traps</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"chestCheckBox\\\"\\n                                                   value=\\\"chest\\\" (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.chest\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='chest'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"chestCheckBox\\\">Chest</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"anteriorDeltoidCheckBox\\\"\\n                                                   value=\\\"anteriorDeltoid\\\"\\n                                                   (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.anteriorDeltoid\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='anteriorDeltoid'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"anteriorDeltoidCheckBox\\\">Anterior\\n                                                Deltoid</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"lateralDeltoidCheckBox\\\"\\n                                                   value=\\\"lateralDeltoid\\\"\\n                                                   (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.lateralDeltoid\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='lateralDeltoid'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"lateralDeltoidCheckBox\\\">Lateral\\n                                                Deltoid</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\n                                                   id=\\\"posteriorDeltoidCheckBox\\\"\\n                                                   value=\\\"posteriorDeltoid\\\"\\n                                                   (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.posteriorDeltoid\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='posteriorDeltoid'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"posteriorDeltoidCheckBox\\\">Posterior\\n                                                Deltoid</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"hamstringsCheckBox\\\"\\n                                                   value=\\\"hamstrings\\\"\\n                                                   (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.hamstrings\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='hamstrings'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"hamstringsCheckBox\\\">Hamstrings</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"gluteusCheckBox\\\"\\n                                                   value=\\\"gluteus\\\" (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.gluteus\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='gluteus'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"gluteusCheckBox\\\">Gluteus</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"calvesCheckBox\\\"\\n                                                   value=\\\"calves\\\" (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.calves\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='calves'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"calvesCheckBox\\\">Calves</label>\\n                                        </div>\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"quadricepsCheckBox\\\"\\n                                                   value=\\\"quadriceps\\\"\\n                                                   (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.quadriceps\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='quadriceps'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"quadricepsCheckBox\\\">Quadriceps</label>\\n                                        </div>\\n\\n                                        <div class=\\\"form-check form-check-inline\\\">\\n                                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"absCheckBox\\\"\\n                                                   value=\\\"abs\\\" (change)=\\\"handleAssistingMuscleGroupsChange($event)\\\"\\n                                                   [checked]=\\\"assistingMuscleGroupsSelected.abs\\\"\\n                                                   [disabled]=\\\"exerciseBindingModel.majorMuscleGroup==='abs'\\\">\\n                                            <label class=\\\"form-check-label\\\" for=\\\"absCheckBox\\\">Abs</label>\\n                                        </div>\\n\\n                                    </div>\\n\\n\\n                                    <hr>\\n\\n                                    <button class=\\\"btn btn-lg btn-secondary btn-block text-uppercase\\\"\\n                                            type=\\\"submit\\\" [disabled]=\\\"exerciseForm.invalid\\\" (click)=\\\"onSubmit()\\\">Submit\\n                                    </button>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\"","export default \"<div class=\\\"card d-inline-flex\\\">\\n  <div class=\\\"thumbnail\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{exercise.pictureURL}}\\\" alt=\\\"Card image cap\\\"/>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <h3 class=\\\"card-title\\\">{{exercise.name}}</h3>\\n    <hr/>\\n    <h5 class=\\\"card-subtitle font-weight-light mb-3\\\">Major Muscle Group:</h5>\\n    <h5 class=\\\"card-subtitle\\\"> {{exercise.majorMuscleGroup | getConstantViewName}} </h5>\\n    <hr/>\\n    <h5 class=\\\"card-subtitle font-weight-light mb-1\\\">Assisting Muscle Groups:</h5>\\n    <h6 class=\\\"card-subtitle mt-2\\\">{{assistingMuscleGroups.join(\\\", \\\")}}</h6>\\n    <hr class=\\\"mb-5\\\"/>\\n    <div class=\\\"buttons-wrapper left\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"addToWorkoutHandler(exercise.id)\\\">Add to workout</button>\\n    </div>\\n    <div class=\\\"buttons-wrapper right\\\">\\n      <a routerLink=\\\"/exercises/details/{{exercise.id}}\\\" class=\\\"btn btn-sm btn-info\\\">Details</a>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <ng-template #createWorkoutExerciseModal let-modal>\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Exercise to Workout</h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <form #createWorkoutExerciseForm=\\\"ngForm\\\">\\r\\n                <h5>{{selectedExercise.name}}</h5>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-3\\\">\\r\\n                        <label for=\\\"inputReps\\\">Reps</label>\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputReps\\\" name=\\\"inputReps\\\" #inputReps=\\\"ngModel\\\"\\r\\n                               required\\r\\n                               pattern=\\\"^[1-9][0-9]*\\\"\\r\\n                               min=\\\"1\\\"\\r\\n                               [ngClass]=\\\"{'is-valid': inputReps.valid && inputReps.touched,\\r\\n                         'is-invalid': inputReps.invalid && inputReps.touched}\\\"\\r\\n                               [(ngModel)]=\\\"workoutExerciseBindingModel.reps\\\">\\r\\n                        <div class=\\\"valid-feedback\\\"></div>\\r\\n                        <div class=\\\"invalid-feedback\\\">\\r\\n                            Reps should be a positive number.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-3\\\">\\r\\n                        <label for=\\\"inputSets\\\">Sets</label>\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputSets\\\" name=\\\"inputSets\\\" #inputSets=\\\"ngModel\\\"\\r\\n                               required\\r\\n                               pattern=\\\"^[1-9][0-9]*\\\"\\r\\n                               min=\\\"1\\\"\\r\\n                               [ngClass]=\\\"{'is-valid': inputSets.valid && inputSets.touched,\\r\\n                         'is-invalid': inputSets.invalid && inputSets.touched}\\\"\\r\\n                               [(ngModel)]=\\\"workoutExerciseBindingModel.sets\\\">\\r\\n                        <div class=\\\"valid-feedback\\\"></div>\\r\\n                        <div class=\\\"invalid-feedback\\\">\\r\\n                            Sets should be a positive number.\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-6\\\">\\r\\n                        <label for=\\\"inputStatus\\\">Workout</label>\\r\\n                        <select id=\\\"inputStatus\\\" name=\\\"status\\\" class=\\\"form-control\\\" #inputWorkoutId\\r\\n                                [(ngModel)]=\\\"selectedWorkoutId\\\">\\r\\n                            <option [ngValue]=\\\"workout.id\\\"\\r\\n                                    *ngFor=\\\"let workout of userWorkouts\\\">{{workout.name}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" [disabled]=\\\"createWorkoutExerciseForm.invalid\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Add to Workout</button>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\\r\\n\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\r\\n        <h1 class=\\\"display-4\\\">Exercise Details</h1>\\r\\n        <hr class=\\\"my-2\\\"/>\\r\\n        <div class=\\\"container pt-4\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"exercise-container col-lg-9 mx-auto\\\">\\r\\n                    <div class=\\\"exercise-intro mt-4\\\">\\r\\n                        <img src=\\\"{{selectedExercise.pictureURL}}\\\" height=\\\"300px\\\"\\r\\n                             class=\\\"d-block mx-auto img-thumbnail\\\" alt=\\\"Exercise picture\\\">\\r\\n                        <h2 class=\\\"display-4 d-block mx-auto font-weight-bolder\\\">{{selectedExercise.name}}</h2>\\r\\n                    </div>\\r\\n\\r\\n                    <hr class=\\\"my-4\\\"/>\\r\\n\\r\\n                    <div class=\\\"involving-muscles\\\">\\r\\n                        <div class=\\\"col-lg-5 d-inline-block\\\">\\r\\n                            <svg class=\\\"body-model\\\" version=\\\"1.1\\\" id=\\\"Layer_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n                                 xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" height=\\\"400\\\"\\r\\n                                 viewBox=\\\"0 0 612 792\\\" xml:space=\\\"preserve\\\">\\r\\n\\r\\n                                        <image style=\\\"overflow:visible;\\\" xlink:href=\\\"assets/static/images/muscles.png\\\"\\r\\n                                               transform=\\\"matrix(0.7228 0 0 0.7228 -42.5334 69.2174)\\\"></image>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('abs'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'abs'}\\\"\\r\\n                                      class=\\\"abs muscle\\\" d=\\\"M137.3,267.09c0,0-53.61,7.17-50.74,35.87c2.87,28.7,4.57,25.83,1.7,45.39c-2.87,19.57,4.83,28.7,4.83,28.7\\r\\n\\tl38.09,50.74c0,0,18.26,21.78,32.87-14.48c14.61-36.26,27-42.39,27-42.39l7.3-6.78c0,0-1.43-7.3-1.3-10.3\\r\\n\\tc0.13-3-2.87-16.04-2.87-16.04s-2.35-10.83,0.13-19.3c2.48-8.48,0-25.04-0.65-26.22s-1.96-16.43-20.74-18s-22.88-5.43-22.88-5.43\\r\\n\\tL137.3,267.09z\\\"><title>Abs</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('traps'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'traps'}\\\"\\r\\n                                      class=\\\"traps muscle\\\" d=\\\"M83.7,184.85l10.76,6.46l8.22,3.91l10.17,2.93h6.65v-4.3v-10.57l-1.96-10.76\\r\\n                    C117.54,172.52,107.17,185.43,83.7,184.85z\\\"><title>Traps</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('traps'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'traps'}\\\"\\r\\n                                      class=\\\"traps muscle\\\" d=\\\"M163.72,169.98l-1.96,15.36l-0.98,12.82l1.47,1.37l15.95-2.35l12.72-4.3l9-3.52l4.11-1.76\\r\\n                    C204.02,187.59,193.46,190.13,163.72,169.98z\\\"><title>Traps</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('chest'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'chest'}\\\"\\r\\n                                      class=\\\"chest muscle\\\" d=\\\"M74.5,213.41l-1.37,11.93l0.68,2.15l2.64,2.74l1.96,11.74c0,0,3.91,20.93,11.15,25.43s5.48,4.11,5.48,4.11\\r\\n                    l6.55,2.74l9.77-0.32c0,0,15.18-1.05,18.7-7.5c3.52-6.46,3.33-5.48,3.52-10.37s0-13.11,0-13.11l0.09-11.54l-3.22-9l-0.2-11.54\\r\\n                    l-0.39-5.28l-10.37-3.52l-11.74-1.17C107.76,200.89,79.59,208.52,74.5,213.41z\\\"><title>Chest</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('chest'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'chest'}\\\"\\r\\n                                      class=\\\"chest muscle\\\" d=\\\"M168.41,200.89l-14.28,2.15l-5.67,2.15v2.93v6.85l-1.96,9.2l-4.89,10.37l-0.98,15.26c0,0,1.19,16.46,8.41,18.71\\r\\n                    c7.23,2.25,10.37,4.18,17.22,4.77c6.85,0.59,13.3-1.17,13.3-1.17s8.41-1.57,13.89-10.37c5.48-8.8,7.24-14.48,7.24-14.48l2.35-10.11\\r\\n                    l3.33-10.82l1.57-9l-5.28-5.09C202.65,212.24,180.15,199.12,168.41,200.89z\\\"><title>Chest</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('biceps'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'biceps'}\\\"\\r\\n                                      class=\\\"biceps muscle\\\" d=\\\"M71.96,229.46c0,0-16.96,12.07-19.3,34.11c-2.35,22.04-2.22,25.7-2.22,25.7l1.17,12.91l1.3,6.78l2.35,5.35\\r\\n                    l2.09,6.39l15.26-17.35l8.61-37.3l-3.92-30.78l-2.82-7.08L71.96,229.46z\\\"><title>Biceps</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('biceps'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'biceps'}\\\"\\r\\n                                      class=\\\"biceps muscle\\\" d=\\\"M208.91,228.87l17.22,21.91c0,0,12.33,19.57,11.35,38.93c-0.98,19.37-0.98,19.37-0.98,19.37l-3.52,12.33\\r\\n                    l-9.75-5.87l-10.59-18.59l-3.72-14.09V228.87z\\\"><title>Biceps</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('quadriceps'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'quadriceps'}\\\"\\r\\n                                      class=\\\"quadriceps muscle\\\" d=\\\"M96,400.04l0.61,8.83L88,425.7l-7.24,17.41l-5.28,19.17c0,0,0,21.13,3.33,40.89\\r\\n                    c3.33,19.76,5.87,34.83,5.87,34.83l5.28,19.57l2.54,10.17l2.93,2.54l2.15-2.54L99.93,556v-10.37c0,0,3.21-5.28,6.21-4.7\\r\\n                    c2.99,0.59,7.49,0.39,7.88,6.85c0.39,6.46,1.96,15.26,1.96,15.26s-0.39,9.2,5.67,7.24c6.07-1.96,7.24-3.72,7.24-3.72l2.15-7.24\\r\\n                    l2.09-25.76l-4.96-30l-6-22.96l-14.87-40.17l-6.14-34.06L96,400.04z\\\"><title>Quadriceps</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('quadriceps'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'quadriceps'}\\\"\\r\\n                                      class=\\\"quadriceps muscle\\\"\\r\\n                                      d=\\\"M185.34,394.05l-7.86,36.56l-11.22,32.52l-4.7,11.74l-6.52,23.74l-2.61,18.52l-0.52,37.3l1.3,5.22l4.43,4.43\\r\\n                    c0,0,7.04,4.17,8.09-11.22c1.04-15.39,4.17-14.87,4.17-14.87l6.78-0.52c0,0,4.7-1.3,3.65,12.78c-1.04,14.09,12.78,5.48,12.78,5.48\\r\\n                    l3.65-12.78l6-23.48l4.96-20.87l4.17-27.39l-2.09-15.91c0,0-3.65-16.7-14.61-35.74S185.34,394.05,185.34,394.05z\\\"><title>Quadriceps</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('calves'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'calves'}\\\"\\r\\n                                      class=\\\"calves muscle\\\" d=\\\"M422.57,562.07l-4.11,16.24l-1.37,16.43l-1.76,29.15c0,0-0.39,23.67,3.62,28.37c4.01,4.7,7.92,7.43,7.92,7.43\\r\\n                    s9.39-1.76,9-8.02s0.01-10.57,0.01-10.57l3.51,8.02l6.26,9l6.46,4.89l7.63,1.57l1.17-24.85l-2.48-24l-3.39-15.13l-0.52-5.54\\r\\n                    l-11.35-18.59l-6.78-10.3l-2.09,6.39l-1.17,1.43l-5.22-10.3l-3.13-3.39h-1.7L422.57,562.07z\\\"><title>Calves</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('calves'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'calves'}\\\"\\r\\n                                      class=\\\"calves muscle\\\" d=\\\"M499.52,572.7l-5.35,8.35l-4.43,9.91l-3.91,7.96l-0.78,4.17L483.09,637v13.3l2.74,12.39l0.91,7.7\\r\\n                    c0,0,9.26-6.13,9.52-6.65s6.39-11.35,6.39-11.35l2.35-7.7l0.65-0.65l1.3,6.13v4.96l3.52,4.43l7.83,1.96c0,0,9-4.17,8.61-10.57\\r\\n                    s1.57-21.65,1.57-21.65l-3.78-23.74l-2.61-12.39c0,0-0.78-9.13-2.61-13.57c-1.83-4.43-6.65-14.74-6.65-14.74l-8.35,9.13l-1.57,3.39\\r\\n                    L499.52,572.7z\\\"><title>Calves</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('calves'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'calves'}\\\"\\r\\n                                      class=\\\"calves muscle\\\" d=\\\"M96.09,585.74l-7.3,15.39l-3.91,30.52l1.83,29.48c0,0,7.04,32.35,7.04,33.13s3.91,26.09,3.91,26.09l17.48-3.65\\r\\n                    l-6.26-42l-5.48-47.74l-1.3-16.43l-0.52-13.57L96.09,585.74z\\\"><title>Calves</title></path>\\r\\n                                <polygon\\r\\n\\r\\n                                        [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('calves'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'calves'}\\\"\\r\\n                                        class=\\\"calves muscle\\\" points=\\\"128.11,605.5 127.49,606.57 119.7,619.98 115.98,630.35 115.13,648.35 117.35,675.54 119.5,700.59\\r\\n                    120.67,713.5 123.8,684.93 128.11,661.07 130.07,649.91 130.07,636.8 130.07,625.85 \\\"><title>Calves</title></polygon>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('calves'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'calves'}\\\"\\r\\n                                      class=\\\"calves muscle\\\" d=\\\"M157.13,603.74l4.7,13.04l1.57,7.57l-1.83,32.61l-3.13,22.43l-3.65,23.48l-2.74-53.93v-20.02\\r\\n                    C152.04,628.91,157.78,604.33,157.13,603.74z\\\"><title>Calves</title></path>\\r\\n                                <polygon\\r\\n\\r\\n                                        [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('calves'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'calves'}\\\"\\r\\n                                        class=\\\"calves muscle\\\" points=\\\"161.57,711.74 177.22,717.61 181.65,698.96 189.35,670.52 195.35,648.74 198.22,632.83 197.17,612.48\\r\\n                    194.83,595.52 190.13,595.52 187.13,587.04 182.7,586.26 179.89,599.96 175.39,623.96 167.96,664.13 \\\"><title>Calves</title>\\r\\n  </polygon>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('gluteus'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'gluteus'}\\\"\\r\\n                                      class=\\\"gluteus muscle\\\"\\r\\n                                      d=\\\"M417.22,365.57l-4.43,11.87l-1.96,10.43L409,403.65l-0.65,20.87c0,0,4.04,21.78,17.35,24.39\\r\\n                    c13.3,2.61,18.78,2.35,18.78,2.35s13.96-1.57,15.91-8.35c1.96-6.78,4.3-4.3,4.3-4.3l5.09,9.52c0,0,7.43,11.35,18.91,10.17\\r\\n                    s18.78-3.52,18.78-3.52s15.26-7.57,13.96-29.09c-1.3-21.52,0.08-37.43,0.08-37.43l-3.47-18.65c0,0-31.3,11.35-35.87,15.26\\r\\n                    s-16.75,20.22-17.24,24.52s-2.97,2.59-2.97,2.59s-0.26-13.54-13.57-26.33c-13.3-12.78-19.7-14.87-19.7-14.87\\\"><title>Gluteus</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('anteriorDeltoid'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'anteriorDeltoid'}\\\"\\r\\n                                      class=\\\"anteriorDeltoid muscle\\\" d=\\\"M109.39,200.89l-12.13-3.72l-6.65-3.65c0,0-17.61-0.65-21.13,2.22c-3.52,2.87-7.96,7.04-10.17,13.3\\r\\n                    c-2.22,6.26-2.61,6.65-3,13.04c-0.39,6.39-0.91,9.26,0,13.83s2.24,9.29,2.24,9.29l6.37-10.46l7.7-6.56l0.52-1.01l1.15-11.81\\r\\n                    l0.22-1.95C74.5,213.41,92.04,198.87,109.39,200.89z\\\"><title>Anterior Deltoid</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('lateralDeltoid'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'lateralDeltoid'}\\\"\\r\\n                                      class=\\\"lateralDeltoid muscle\\\"\\r\\n                                      d=\\\"M89.96,192.97l-11.84-4.99c0,0-14.77,0.59-20.93,10.86c-6.16,10.27-8.51,17.8-8.51,17.8L47.6,231.8l1.27,9.88\\r\\n                    l0.39,10.47L52,264.97l4.4-16.73l1.99-3.6l-2.09-8.72c0,0-0.68-17.39,2.64-25.86C62.27,201.58,69.61,190.03,89.96,192.97z\\\"><title>Lateral Deltoid</title>\\r\\n  </path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('anteriorDeltoid'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'anteriorDeltoid'}\\\"\\r\\n                                      class=\\\"anteriorDeltoid muscle\\\" d=\\\"M173.43,199.52l20.83,8.35l9.76,4.57l5.8,8.48v9.78l15.76,19.4l3.23,5.55l3.05-12.29c0,0,1.7-9.91,0.65-18.65\\r\\n                    c-1.04-8.74-2.48-12.39-5.74-16.3c-3.26-3.91-13.96-13.83-24.39-13.96c-10.43-0.13-12.65,1.43-12.65,1.43l-6.78,2.28L173.43,199.52z\\r\\n                    \\\"><title>Anterior Deltoid</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('lateralDeltoid'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'lateralDeltoid'}\\\"\\r\\n                                      class=\\\"lateralDeltoid muscle\\\" d=\\\"M193.65,194.43l9.5-2.34c0,0,12.03-0.98,16.33,1.66c4.3,2.64,13.01,8.9,15.95,19.27\\r\\n                    c2.93,10.37,4.21,17.02,4.21,17.61s-0.49,15.26-0.49,15.26l-3.52,20.74l-1.32,2.2l-4.95-12.13l2.63-14.06c0,0,3.89-26.66-6.66-35.87\\r\\n                    s-15-10.58-15-10.58S200.7,193.05,193.65,194.43z\\\"><title>Lateral Deltoid</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('traps'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'traps'}\\\"\\r\\n                                      class=\\\"traps muscle\\\" d=\\\"M404.96,187.39L424,197.83l6.78,4.7l-4.17,2.09l4.17,25.3l2.87,28.43c0,0,27.65,43.04,28.43,54.52\\r\\n                    c0.78,11.48,11.48,2.09,11.48,2.09l3.39-14.87l12.52-22.7l8.87-17.74l2.61-10.96l3.13-28.96l4.17-17.74l22.96-11.48l7.3-5.22\\r\\n                    c0,0-44.09-1.83-56.09-29.48s-24.78,0-24.78,0S454.26,177.48,404.96,187.39z\\\"><title>Traps</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('posteriorDeltoid'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'posteriorDeltoid'}\\\"\\r\\n                                      class=\\\"posteriorDeltoid muscle\\\" d=\\\"M373.13,241.91l15.65-23.22l7.04-8.87c0,0,26.87-4.96,30.78-5.22c3.91-0.26,4.17-2.09,4.17-2.09l-15.4-9.42\\r\\n                    l-10.42-5.71c0,0-22.7,6.52-26.61,21.39c-3.91,14.87-5.22,34.43-5.22,34.43V241.91z\\\"><title>Posterior Deltoid</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('posteriorDeltoid'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'posteriorDeltoid'}\\\"\\r\\n                                      class=\\\"posteriorDeltoid muscle\\\" d=\\\"M538.52,185.3c0,0,15.78,4.83,20.35,14.87c4.57,10.04,6.39,19.3,6.39,19.3l1.3,14.09l-1.96,8.61l-7.17-11.87\\r\\n                    l-7.3-11.22c0,0-6.65-14.22-13.17-13.17c-6.52,1.04-8.74,0.52-9.13,0.13c-0.39-0.39-8.87-1.7-8.87-1.7l-8.87-0.52l-2.06-0.82\\r\\n                    c0,0,18.06-8.82,23.19-12.49C536.35,186.86,538.52,185.3,538.52,185.3z\\\"><title>Posterior Deltoid</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('hamstrings'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'hamstrings'}\\\"\\r\\n                                      class=\\\"hamstrings muscle\\\"\\r\\n                                      d=\\\"M414.09,459.74l-4.43,24.52l2.22,33.13l1.17,16.17l3.65,23.22l1.48,24.84l4.91-21.32l3-9.78l1.04-2.61\\r\\n                    l10.1,19.53l17.29,27.62v-13.24l-6-61.04l-7.04-40.96l-4.17-21.44C437.3,458.39,425.83,446.17,414.09,459.74z\\\"><title>Hamstrings</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('hamstrings'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'hamstrings'}\\\"\\r\\n                                      class=\\\"hamstrings muscle\\\"\\r\\n                                      d=\\\"M488.7,499.39l-4.17,24.81v34.93l-1.43,26.09l2.74,13.7l13.7-26.22l8.74-18l8.25,18.16l6.88-21.82v-49.3\\r\\n                    c0,0-1.04-27.39-5.74-34.43c-2.46-3.69-15.28-13.81-22.17-4.43C489.2,471.41,488.7,499.39,488.7,499.39z\\\"><title>Hamstrings</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('latisimus'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'latisimus'}\\\"\\r\\n                                      class=\\\"latisimus muscle\\\" d=\\\"M433.39,255.71l-15.65,1.85h-11.22v14.87l-1.57,10.7l6.78,17.22l6,14.87l3.65,17.74l6.26,19.83\\r\\n                    c0,0,5.22,9.65,3.13,13.83c-2.09,4.17,6-8.61,6-8.61l2.61-13.3c0,0,4.99-17.52,13.57-26.12c8.58-8.6,8.96-6.99,8.96-6.99\\r\\n                    l-12.54-27.12L433.39,255.71z\\\"><title>Latisimus</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('latisimus'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'latisimus'}\\\"\\r\\n                                      class=\\\"latisimus muscle\\\"\\r\\n                                      d=\\\"M499.29,255.71l-12.95,27.38l-9.38,16.99l-2.62,11.49l16.71,15.38l8.24,15.65l1.15,24.84l3.65,4.12l6.26-17.48\\r\\n                    l9.65-19.3l3.65-16.21l3.13-18.49l5.48-15.91l2.09-30l-7.04,4.17C527.3,258.35,508.83,260.12,499.29,255.71z\\\"><title>Latisimus</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('triceps'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'triceps'}\\\"\\r\\n                                      class=\\\"triceps muscle\\\"\\r\\n                                      d=\\\"M389.3,222.61l-4.56,2.08l-9.95,14.76L370,257.57l-1.83,25.83v19.57l3.39,7.04l14.35,12.52l10.43-13.3\\r\\n                    l5.61-10.96l1.17-15.91l3.39-13.3L403.65,238c0,0-1.57-17.22-12.26-15.39C380.7,224.43,389.3,222.61,389.3,222.61z\\\"><title>Triceps</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('triceps'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'triceps'}\\\"\\r\\n                                      class=\\\"triceps muscle\\\" d=\\\"M534.35,224.43l1.04,21.65l-2.42,27.89l1.21,12.81l1.21,18.78l7.04,6.01l9.13,2.85l13.3-9.13l3.13-8.87v-22.17\\r\\n                    l-2.87-21.65l-1.57-9.39l-6.13-12.91l-8.22-13C549.22,217.3,535.13,217.65,534.35,224.43z\\\"><title>Triceps</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('erectors'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'erectors'}\\\"\\r\\n                                      class=\\\"erectors muscle\\\" d=\\\"M469.12,317.83c0,0,26.61,7.3,27.4,23.48c0.78,16.17,0,33.13,0,33.13L478,385.39l-14.35,23.48l-13.57-25.83\\r\\n                    l-14.61-11.48l5.3-26.7C440.78,344.87,443.81,317.83,469.12,317.83z\\\"><title>Erectors</title></path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('forearm'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'forearm'}\\\"\\r\\n                                      class=\\\"forearm muscle\\\"\\r\\n                                      d=\\\"M45,298s-6.53,18.52-6.53,43.83S34.78,396,34.78,396L58,398.7s3.65-17.74,7.83-26.87S77,343.91,77.57,337.91s1-16.5,1-16.5l-9.83-9.06-3.66-.49-6.34,8.84Z\\\"><title>Forearm</title>\\r\\n  </path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('forearm'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'forearm'}\\\"\\r\\n                                      class=\\\"forearm muscle\\\"\\r\\n                                      d=\\\"M215.3,325.91l7.92-10.37,9.76,5.87,6.65-14.28,5.67-13s8.61,25.82,9.92,35.74,5.21,44.6,5.21,44.6l4.7,24.27L243.74,400s-13.57-29-17.48-37.87S216.61,341,215.3,325.91Z\\\"><title>Forearm</title>\\r\\n  </path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('forearm'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'forearm'}\\\"\\r\\n                                      class=\\\"forearm muscle\\\"\\r\\n                                      d=\\\"M346.78,400l20.09,2.31,2.87-6.35s16.69-31.74,20.09-41.13,9.79-31.62,9.65-40.44l-.14-8.81-13.06,18.43s-12.1,7.08-13.15-1.53l-1-8.61L371,309.52l-5.14-9.17s-7.57,21.65-10.18,42.78S346.78,400,346.78,400Z\\\"><title>Forearm</title>\\r\\n  </path>\\r\\n                                <path [ngClass]=\\\"{'assisting-muscle-group': selectedExercise.assistingMuscleGroups.includes('forearm'),\\r\\n        'major-muscle-group': selectedExercise.majorMuscleGroup === 'forearm'}\\\"\\r\\n                                      class=\\\"forearm muscle\\\"\\r\\n                                      d=\\\"M534.35,306.15l1.89,32.09L540,352.33l12.32,30.32,5.09,20,21.91-2.94-2.93-19.56L576,333.54s-.2-14.47-2.74-24.06A99.07,99.07,0,0,0,568,294.22l-2.7,9.87-7.15,12s2.47,7.63-7.66,11.15-8.19-3.91-8.19-3.91l1.37-2.94Z\\\"><title>Forearm</title>\\r\\n  </path>\\r\\n                                    </svg>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-5 d-inline-block align-middle\\\">\\r\\n                            <h4>Major Muscle Group</h4>\\r\\n                            <h4 class=\\\"font-weight-light\\\">{{selectedExercise.majorMuscleGroup | getConstantViewName}}</h4>\\r\\n                            <h4>Assisting Muscle Groups</h4>\\r\\n                            <h4 class=\\\"font-weight-light\\\"\\r\\n                                *ngFor=\\\"let muscleGroup of selectedExercise.assistingMuscleGroups\\\">\\r\\n                                {{muscleGroup | getConstantViewName}}\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"instructions col-12 my-3\\\">\\r\\n                        <h4 class=\\\"mb-4\\\">Instructions</h4>\\r\\n                        <p class=\\\"text-center text-justify\\\">{{selectedExercise.instructions}}></p>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"video px-5 pb-5 pt-0 my-0 d-inline-block col-12\\\" *ngIf=\\\"youtubeVideoId\\\">\\r\\n                        <h4 class=\\\"m-5\\\">Video Instructions</h4>\\r\\n                        <youtube-player [videoId]=\\\"youtubeVideoId\\\" class=\\\"embed-responsive embed-responsive-16by9\\\"\\r\\n                                        (ready)=\\\"onPlayerInit($event)\\\"></youtube-player>\\r\\n                    </div>\\r\\n\\r\\n                    <hr/>\\r\\n\\r\\n                    <div class=\\\"buttons col-12 mx-auto p-3\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"open(createWorkoutExerciseModal)\\\">\\r\\n                            Add to workout\\r\\n                        </button>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<p>food works!</p>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n\\n    <ng-template #foodNutritionDataModal let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Nutrition Info per 100 grams</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <form #createFoodForm=\\\"ngForm\\\">\\n                <h1 class=\\\"text-center font-weight-light\\\">{{selectedFoodForModal.description}}</h1>\\n\\n\\n                <h3 class=\\\"text-center font-weight-light\\\">Calories: {{selectedFoodForModal.calories}}</h3>\\n                <div class=\\\"chart-container row align-middle\\\">\\n                    <ngx-charts-pie-chart\\n                            [results]=\\\"macroNutrientsData\\\"\\n                            [animations]=\\\"true\\\"\\n                            [trimLabels]=\\\"false\\\"\\n                            [doughnut]=\\\"true\\\"\\n                    >\\n\\n                    </ngx-charts-pie-chart>\\n\\n                    <div class=\\\"macros text-center mx-auto\\\">\\n                        <h5 class=\\\"font-weight-light \\\">\\n                            Protein: {{this.selectedFoodForModal.proteinPerHundred}}g.</h5>\\n                        <h5 class=\\\"font-weight-light \\\">\\n                            Carbohydrates: {{this.selectedFoodForModal.carbohydratesPerHundred}}g.</h5>\\n                        <h5 class=\\\"font-weight-light \\\">Fats: {{this.selectedFoodForModal.fatsPerHundred}}\\n                            g.</h5>\\n                        <span class=\\\"display-5 opacity-5\\\"><i\\n                                class=\\\"fas fa-utensils fa-lg\\\"></i></span>\\n                    </div>\\n\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.dismiss()\\\">Close</button>\\n        </div>\\n    </ng-template>\\n\\n    <div class=\\\"jumbotron\\\">\\n        <div class=\\\"container\\\">\\n\\n            <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"align-center\\\" alt=\\\"\\\">\\n            <h1 class=\\\"display-4\\\">Search Food in USDA FoodData Central</h1>\\n        </div>\\n\\n        <hr/>\\n\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-6\\\">\\n                <form class=\\\"card card-sm\\\">\\n                    <div class=\\\"card-body row no-gutters align-items-center\\\">\\n                        <div class=\\\"col-lg-1\\\">\\n                            <label for=\\\"searchInput\\\"><i class=\\\"fas fa-search fa-2x\\\"></i></label>\\n\\n                        </div>\\n                        <div class=\\\"col-lg-9\\\">\\n                            <form #searchForm=\\\"ngForm\\\"></form>\\n                            <input class=\\\"form-control form-control-lg form-control-borderless\\\" id=\\\"searchInput\\\"\\n                                   type=\\\"search\\\"\\n                                   placeholder=\\\"Enter food name\\\"\\n                                   #inputSearch=\\\"ngModel\\\"\\n                                   name=\\\"foodName\\\"\\n                                   required\\n                                   [ngClass]=\\\"{'is-valid': inputSearch.valid && inputSearch.touched, 'is-invalid': inputSearch.invalid && inputSearch.touched}\\\"\\n                                   [(ngModel)]=\\\"searchFoodName\\\">\\n                        </div>\\n                        <div class=\\\"col-lg-2\\\">\\n                            <button class=\\\"btn btn-lg btn-success\\\" [disabled]=\\\"searchForm.invalid\\\" type=\\\"submit\\\"\\n                                    (click)=\\\"onSearchHandler()\\\">Search\\n                            </button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n\\n\\n        <hr class=\\\"my-4\\\">\\n        <div class=\\\"container justify-content-center pb-0\\\">\\n            <ng-template [ngIf]=\\\"foodSearchResults.length > 0\\\" [ngIfElse]=\\\"noSuchFoods\\\">\\n\\n\\n                <div class=\\\"results-container col-10 mx-auto py-2\\\">\\n                    <h2 class=\\\"font-weight-bold text-center py-4\\\">Search Food Results</h2>\\n                    <table class=\\\"table table-striped table-hover mb-4\\\">\\n                        <thead>\\n                        <tr>\\n                            <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                            <th scope=\\\"col\\\" style=\\\"width: 50%\\\">Description</th>\\n                            <th scope=\\\"col\\\" style=\\\"width: 40%\\\">Actions</th>\\n\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n\\n                        <tr *ngFor=\\\"let food of foodSearchResults| slice: (page-1) * pageSize : (page-1) * pageSize + pageSize; let i = index\\\">\\n                            <td class=\\\"align-middle\\\">{{i + 1 + (page - 1) * pageSize}}</td>\\n                            <td class=\\\"align-middle\\\">{{food.description}}</td>\\n                            <td>\\n                                <button type=\\\"button\\\"\\n                                        class=\\\"btn btn-secondary mr-2\\\" (click)=\\\"open(foodNutritionDataModal, food.id)\\\">\\n                                    Nutrition Info\\n                                </button>\\n                                <button type=\\\"button\\\"\\n                                        class=\\\"btn btn-primary mr-2\\\">Create Food\\n                                </button>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n                <ngb-pagination class=\\\"d-inline-block mt-5\\\" [(page)]=\\\"page\\\"\\n                                [pageSize]=\\\"pageSize\\\"\\n                                [collectionSize]=\\\"foodSearchResults.length\\\"></ngb-pagination>\\n            </ng-template>\\n\\n            <ng-template #noSuchFoods>\\n                <h5>There are no foods with given name.</h5>\\n            </ng-template>\\n\\n        </div>\\n\\n\\n    </div>\\n\\n\\n</div>\\n\"","export default \"<footer>\\n\\n  <div class=\\\"bg-light p-4\\\">\\n    <div class=\\\"footer-info text-center\\\">© 2019 Copyright:<a href=\\\"/\\\"> FitBook</a></div>\\n  </div>\\n\\n\\n</footer>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\n    <h1 class=\\\"display-4\\\">Welcome to FitBook, {{userFirstName}}!</h1>\\n    <p class=\\\"lead\\\">You are almost ready to use our platform! The last step is to fill your Fitness Profile.\\n    </p>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-5 col-xl-4 mx-auto\\\">\\n        <div style=\\\"height: 17px\\\" class=\\\"progress rounded-pill\\\">\\n          <div role=\\\"progressbar\\\" aria-valuenow=\\\"80\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"\\n               style=\\\"width: 80%\\\"\\n               class=\\\"progress-bar progress-bar-striped progress-bar-animated rounded-pill bg-primary\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-10 col-xl-9 mx-auto\\\">\\n          <div class=\\\"card card-signin flex-row my-5\\\"\\n               [ngClass]=\\\"{'female-fitness-profile': userGender === 'female', 'male-fitness-profile': userGender==='male'}\\\">\\n            <div class=\\\"card-img-left d-none d-md-flex\\\">\\n            </div>\\n            <div class=\\\"card-body text-center\\\">\\n              <h5 class=\\\"card-title text-center\\\">Fitness Profile</h5>\\n              <form class=\\\"form-signin\\\" #fitnessProfileForm=\\\"ngForm\\\">\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputWeight\\\">Weight in KG</label>\\n                  <input type=\\\"number\\\" id=\\\"inputWeight\\\" name=\\\"inputWeight\\\" #inputWeight=\\\"ngModel\\\"\\n                         class=\\\"form-control\\\" placeholder=\\\"Enter your weight in KG\\\"\\n                         required\\n                         pattern=\\\"^[1-9][0-9]*\\\"\\n                         min=\\\"1\\\"\\n                         [ngClass]=\\\"{'is-valid': inputWeight.valid && inputWeight.touched,\\n                         'is-invalid': inputWeight.invalid && inputWeight.touched}\\\"\\n                         [(ngModel)]=\\\"fitnessProfileBindingModel.weight\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Weight should be a positive number.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputHeight\\\">Height in CM</label>\\n                  <input type=\\\"number\\\" id=\\\"inputHeight\\\" name=\\\"inputHeight\\\" #inputHeight=\\\"ngModel\\\"\\n                         class=\\\"form-control\\\" placeholder=\\\"Enter your height in CM\\\"\\n                         min=\\\"1\\\"\\n                         required\\n                         pattern=\\\"^[1-9][0-9]*\\\"\\n                         min=\\\"1\\\"\\n                         [ngClass]=\\\"{'is-valid': inputHeight.valid && inputHeight.touched,\\n                         'is-invalid': inputHeight.invalid && inputHeight.touched}\\\"\\n                         [(ngModel)]=\\\"fitnessProfileBindingModel.height\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Height should be a positive number.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputAge\\\">Age</label>\\n                  <input type=\\\"number\\\" id=\\\"inputAge\\\" name=\\\"inputAge\\\" #inputAge=\\\"ngModel\\\"\\n                         class=\\\"form-control\\\" placeholder=\\\"Enter your age\\\"\\n                         min=\\\"1\\\"\\n                         required\\n                         pattern=\\\"^[1-9][0-9]*\\\"\\n                         min=\\\"1\\\"\\n                         [ngClass]=\\\"{'is-valid': inputAge.valid && inputAge.touched,\\n                         'is-invalid': inputAge.invalid && inputAge.touched}\\\"\\n                         [(ngModel)]=\\\"fitnessProfileBindingModel.age\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Age should be a positive number.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputExperience\\\">Sports Experience</label>\\n                  <select class=\\\"custom-select form-control\\\" id=\\\"inputExperience\\\" #inputExperience=\\\"ngModel\\\"\\n                          name=\\\"inputExperience\\\" required\\n                          [ngClass]=\\\"{'is-valid': inputExperience.valid && inputExperience.touched,\\n                         'is-invalid': inputExperience.invalid && inputExperience.touched}\\\"\\n                          [(ngModel)]=\\\"fitnessProfileBindingModel.sportsExperience\\\">\\n                    <option selected value=\\\"\\\">Select your Sports Experience</option>\\n                    <option value=\\\"beginner\\\">Beginner</option>\\n                    <option value=\\\"intermediate\\\">Intermediate</option>\\n                    <option value=\\\"advanced\\\">Advanced</option>\\n                  </select>\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Sports Experience is required.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputActivity\\\">Level of Daily Activity</label>\\n                  <select class=\\\"custom-select form-control\\\" id=\\\"inputActivity\\\" #activityLevel=\\\"ngModel\\\"\\n                          name=\\\"inputActivity\\\" required\\n                          [ngClass]=\\\"{'is-valid': activityLevel.valid && activityLevel.touched,\\n                         'is-invalid': activityLevel.invalid && activityLevel.touched}\\\"\\n                          [(ngModel)]=\\\"fitnessProfileBindingModel.activityLevel\\\">\\n                    <option selected value=\\\"\\\">Select your Level of Daily Activity</option>\\n                    <option value=\\\"little\\\">Desk job, Little to no exercise</option>\\n                    <option value=\\\"light\\\">Light exercise (1–3 days per week)</option>\\n                    <option value=\\\"moderate\\\">Moderate exercise (3–5 days per week)</option>\\n                    <option value=\\\"heavy\\\">Heavy exercise (6–7 days per week)</option>\\n                    <option value=\\\"veryHeavy\\\">Very heavy exercise (physical job and heavy\\n                      workouts)\\n                    </option>\\n                  </select>\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Level of Daily Activity is required.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputWeightGoal\\\">Weight Goal</label>\\n                  <select class=\\\"custom-select form-control\\\" id=\\\"inputWeightGoal\\\" #weightGoal=\\\"ngModel\\\"\\n                          name=\\\"inputWeightGoal\\\" required\\n                          [ngClass]=\\\"{'is-valid': weightGoal.valid && weightGoal.touched,\\n                         'is-invalid': weightGoal.invalid && weightGoal.touched}\\\"\\n                          [(ngModel)]=\\\"fitnessProfileBindingModel.weightGoal\\\"\\n                          (change)=\\\"onWeightGoalChange($event.target)\\\">\\n                    <option selected value=\\\"\\\">Select your Weight Goal</option>\\n                    <option value=\\\"maintainWeight\\\">To maintain your weight</option>\\n                    <option value=\\\"loseWeight\\\">To lose weight</option>\\n                    <option value=\\\"gainWeight\\\">To gain weight</option>\\n                  </select>\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Weight Goal is required.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputLostGainedWeight\\\">Weight Change Rate</label>\\n                  <select class=\\\"custom-select form-control\\\" id=\\\"inputLostGainedWeight\\\" #weightChangeRate=\\\"ngModel\\\"\\n                          name=\\\"inputLostGainedWeight\\\"\\n                          [required]=\\\"fitnessProfileBindingModel.weightGoal !=='maintainWeight'\\\"\\n                          [disabled]=\\\"fitnessProfileBindingModel.weightGoal==='maintainWeight' || fitnessProfileBindingModel.weightGoal===''\\\"\\n                          [ngClass]=\\\"{'is-valid': weightChangeRate.valid && weightChangeRate.touched,\\n                         'is-invalid': weightChangeRate.invalid && weightChangeRate.touched}\\\"\\n                          [(ngModel)]=\\\"fitnessProfileBindingModel.weightChangeRate\\\">\\n                    <option selected value=\\\"\\\">Select your Weight Change Rate\\n                    </option>\\n                    <option value=\\\"slow\\\">Slow (0.250 KG per Week)</option>\\n                    <option value=\\\"moderate\\\">Moderate (0.500 KG per Week)</option>\\n                    <option value=\\\"rapid\\\">Rapid (1 KG per Week)</option>\\n                  </select>\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Weight Change Rate is required.\\n                  </div>\\n                </div>\\n\\n\\n                <hr>\\n\\n                <button class=\\\"btn btn-lg btn-secondary btn-block text-uppercase\\\"\\n                        type=\\\"submit\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"fitnessProfileForm.invalid && fitnessProfileForm.touched\\\">Submit\\n                </button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\n    <h1 class=\\\"display-4\\\">Edit Fitness Profile</h1>\\n\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-10 col-xl-9 mx-auto\\\">\\n          <div class=\\\"card card-signin flex-row my-5\\\"\\n               [ngClass]=\\\"{'female-fitness-profile': userGender === 'female', 'male-fitness-profile': userGender==='male'}\\\">\\n            <div class=\\\"card-img-left d-none d-md-flex\\\">\\n            </div>\\n            <div class=\\\"card-body text-center\\\">\\n              <h5 class=\\\"card-title text-center\\\">Fitness Profile</h5>\\n              <form class=\\\"form-signin\\\" (change)=\\\"onFormChange()\\\" #fitnessProfileForm=\\\"ngForm\\\">\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputWeight\\\">Weight in KG</label>\\n                  <input type=\\\"number\\\" id=\\\"inputWeight\\\" name=\\\"inputWeight\\\" #inputWeight=\\\"ngModel\\\"\\n                         class=\\\"form-control\\\" placeholder=\\\"Enter your weight in KG\\\"\\n                         required\\n                         pattern=\\\"^[1-9][0-9]*\\\"\\n                         min=\\\"1\\\"\\n                         [ngClass]=\\\"{'is-valid': inputWeight.valid && inputWeight.touched,\\n                         'is-invalid': inputWeight.invalid && inputWeight.touched}\\\"\\n                         [(ngModel)]=\\\"fitnessProfileBindingModel.weight\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Weight should be a positive number.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputHeight\\\">Height in CM</label>\\n                  <input type=\\\"number\\\" id=\\\"inputHeight\\\" name=\\\"inputHeight\\\" #inputHeight=\\\"ngModel\\\"\\n                         class=\\\"form-control\\\" placeholder=\\\"Enter your height in CM\\\"\\n                         min=\\\"1\\\"\\n                         required\\n                         pattern=\\\"^[1-9][0-9]*\\\"\\n                         min=\\\"1\\\"\\n                         [ngClass]=\\\"{'is-valid': inputHeight.valid && inputHeight.touched,\\n                         'is-invalid': inputHeight.invalid && inputHeight.touched}\\\"\\n                         [(ngModel)]=\\\"fitnessProfileBindingModel.height\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Height should be a positive number.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputAge\\\">Age</label>\\n                  <input type=\\\"number\\\" id=\\\"inputAge\\\" name=\\\"inputAge\\\" #inputAge=\\\"ngModel\\\"\\n                         class=\\\"form-control\\\" placeholder=\\\"Enter your age\\\"\\n                         min=\\\"1\\\"\\n                         required\\n                         pattern=\\\"^[1-9][0-9]*\\\"\\n                         min=\\\"1\\\"\\n                         [ngClass]=\\\"{'is-valid': inputAge.valid && inputAge.touched,\\n                         'is-invalid': inputAge.invalid && inputAge.touched}\\\"\\n                         [(ngModel)]=\\\"fitnessProfileBindingModel.age\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Age should be a positive number.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputExperience\\\">Sports Experience</label>\\n                  <select class=\\\"custom-select form-control\\\" id=\\\"inputExperience\\\" #inputExperience=\\\"ngModel\\\"\\n                          name=\\\"inputExperience\\\" required\\n                          [ngClass]=\\\"{'is-valid': inputExperience.valid && inputExperience.touched,\\n                         'is-invalid': inputExperience.invalid && inputExperience.touched}\\\"\\n                          [(ngModel)]=\\\"fitnessProfileBindingModel.sportsExperience\\\">\\n                    <option value=\\\"beginner\\\">Beginner</option>\\n                    <option value=\\\"intermediate\\\">Intermediate</option>\\n                    <option value=\\\"advanced\\\">Advanced</option>\\n                  </select>\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Sports Experience is required.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputActivity\\\">Level of Daily Activity</label>\\n                  <select class=\\\"custom-select form-control\\\" id=\\\"inputActivity\\\" #activityLevel=\\\"ngModel\\\"\\n                          name=\\\"inputActivity\\\" required\\n                          [ngClass]=\\\"{'is-valid': activityLevel.valid && activityLevel.touched,\\n                         'is-invalid': activityLevel.invalid && activityLevel.touched}\\\"\\n                          [(ngModel)]=\\\"fitnessProfileBindingModel.activityLevel\\\">\\n                    <option value=\\\"little\\\">Desk job, Little to no exercise</option>\\n                    <option value=\\\"light\\\">Light exercise (1–3 days per week)</option>\\n                    <option value=\\\"moderate\\\">Moderate exercise (3–5 days per week)</option>\\n                    <option value=\\\"heavy\\\">Heavy exercise (6–7 days per week)</option>\\n                    <option value=\\\"veryHeavy\\\">Very heavy exercise (physical job and heavy\\n                      workouts)\\n                    </option>\\n                  </select>\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Level of Daily Activity is required.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputWeightGoal\\\">Weight Goal</label>\\n                  <select class=\\\"custom-select form-control\\\" id=\\\"inputWeightGoal\\\" #weightGoal=\\\"ngModel\\\"\\n                          name=\\\"inputWeightGoal\\\" required\\n                          [ngClass]=\\\"{'is-valid': weightGoal.valid && weightGoal.touched,\\n                         'is-invalid': weightGoal.invalid && weightGoal.touched}\\\"\\n                          [(ngModel)]=\\\"fitnessProfileBindingModel.weightGoal\\\"\\n                          (change)=\\\"onWeightGoalChange($event.target)\\\">\\n                    <option value=\\\"maintainWeight\\\">To maintain your weight</option>\\n                    <option value=\\\"loseWeight\\\">To lose weight</option>\\n                    <option value=\\\"gainWeight\\\">To gain weight</option>\\n                  </select>\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Weight Goal is required.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputLostGainedWeight\\\">Weight Change Rate</label>\\n                  <select class=\\\"custom-select form-control\\\" id=\\\"inputLostGainedWeight\\\" #weightChangeRate=\\\"ngModel\\\"\\n                          name=\\\"inputLostGainedWeight\\\"\\n                          [required]=\\\"fitnessProfileBindingModel.weightGoal !=='maintainWeight'\\\"\\n                          [disabled]=\\\"fitnessProfileBindingModel.weightGoal==='maintainWeight'\\\"\\n                          [ngClass]=\\\"{'is-valid': weightChangeRate.valid && weightChangeRate.touched,\\n                         'is-invalid': weightChangeRate.invalid && weightChangeRate.touched}\\\"\\n                          [(ngModel)]=\\\"fitnessProfileBindingModel.weightChangeRate\\\">\\n                    <option *ngIf=\\\"fitnessProfileBindingModel.weightGoal === 'maintainWeight' \\\" value=\\\"none\\\">None\\n                    </option>\\n                    <option value=\\\"slow\\\">Slow (0.250 KG per Week)</option>\\n                    <option value=\\\"moderate\\\">Moderate (0.500 KG per Week)</option>\\n                    <option value=\\\"rapid\\\">Rapid (1 KG per Week)</option>\\n                  </select>\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Weight Change Rate is required.\\n                  </div>\\n                </div>\\n\\n\\n                <hr>\\n\\n                <button class=\\\"btn btn-lg btn-secondary btn-block text-uppercase\\\"\\n                        type=\\\"submit\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"fitnessProfileForm.invalid\\\">Save\\n                </button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","export default \"<app-create-fitness-profile *ngIf=\\\"!hasFitnessProfile\\\"></app-create-fitness-profile>\\r\\n<app-my-profile *ngIf=\\\"hasFitnessProfile\\\"></app-my-profile>\\r\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"jumbotron\\\">\\n        <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\n        <h1 class=\\\"display-4\\\">Welcome to FitBook, {{loggedUserFirstName}}!</h1>\\n        <h4 class=\\\"font-weight-light\\\">This is your Fitness Profile!</h4>\\n        <h4 class=\\\"font-weight-light\\\">You can use it to build your workout plans and diet plans for your personal\\n            needs.</h4>\\n        <h4 class=\\\"font-weight-light\\\">Don't wait to get in the best shape of your life!</h4>\\n\\n\\n        <div class=\\\"container mt-5\\\">\\n\\n            <div class=\\\"row fitness-profile-wrapper col-10 text-center mx-auto\\\">\\n                <div class=\\\"info col-lg-5 justify-content-center mx-auto\\\">\\n                    <div class=\\\"profile-photo col-12 my-3\\\">\\n                        <img class=\\\"img-thumbnail\\\" src=\\\"{{loggedUser.profilePictureURL}}\\\" alt=\\\"Profile picture\\\">\\n                    </div>\\n                    <div class=\\\"col-12 mt-lg-5\\\">\\n                        <h1 class=\\\"font-weight-light\\\">{{loggedUser.firstName}} {{loggedUser.lastName}}</h1>\\n                        <h2 class=\\\"font-weight-light\\\">Age: {{loggedUser.fitnessProfile.age}}</h2>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"card calories d-block col-lg-5 mt-5 mt-lg-0 mx-auto\\\">\\n\\n\\n                    <div class=\\\"card-body\\\">\\n                        <h3 class=\\\"card-title text-white font-weight-light\\\">Daily Calories Goal</h3>\\n                        <div class=\\\"d-block\\\">\\n                            <h2 class=\\\"text-white font-weight-light\\\">{{loggedUserFitnessProfile.nutritionGoal.calories}}</h2>\\n                        </div>\\n                        <span class=\\\"display-5 opacity-5 text-white\\\"><i class=\\\"fas fa-fire-alt fa-lg\\\"></i></span>\\n\\n                    </div>\\n                    <div class=\\\"chart-container row align-middle\\\">\\n\\n                        <ngx-charts-pie-chart\\n                                [results]=\\\"macroNutrientsData\\\"\\n                                [animations]=\\\"true\\\"\\n                                [trimLabels]=\\\"false\\\"\\n                                [doughnut]=\\\"true\\\"\\n                        >\\n\\n                        </ngx-charts-pie-chart>\\n\\n                      <div class=\\\"macros text-center mx-auto\\\">\\n                        <h5 class=\\\"font-weight-light text-white \\\">\\n                          Protein: {{loggedUserFitnessProfile.nutritionGoal.gramsOfProtein}}g.</h5>\\n                        <h5 class=\\\"font-weight-light text-white \\\">\\n                          Carbohydrates: {{loggedUserFitnessProfile.nutritionGoal.gramsOfCarbohydrates}}g.</h5>\\n                        <h5 class=\\\"font-weight-light text-white \\\">Fats: {{loggedUserFitnessProfile.nutritionGoal.gramsOfFats}}\\n                          g.</h5>\\n                        <span class=\\\"display-5 opacity-5 text-white\\\"><i\\n                                class=\\\"fas fa-utensils fa-lg\\\"></i></span>\\n                      </div>\\n\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"row justify-content-around fitness-profile-attributes mt-5\\\">\\n\\n\\n                    <div class=\\\"card height col-lg-3 mt-3 mx-2 \\\">\\n                        <div class=\\\"card-body\\\">\\n                            <span class=\\\"display-5 opacity-5 text-white\\\"><i\\n                                    class=\\\"fas fa-ruler-vertical fa-lg\\\"></i></span>\\n                            <h3 class=\\\"card-title text-white font-weight-light\\\">Height</h3>\\n                            <div class=\\\"d-block\\\">\\n                                <h2\\n                                        class=\\\"text-white font-weight-light\\\">{{loggedUserFitnessProfile.height}}cm.</h2>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"card weight col-lg-3 mt-3 mx-2 \\\">\\n                        <div class=\\\"card-body\\\">\\n                            <span class=\\\"display-5 opacity-5 text-white\\\"><i class=\\\"fas fa-weight fa-lg\\\"></i></span>\\n                            <h3 class=\\\"card-title text-white font-weight-light\\\">Weight</h3>\\n                            <div class=\\\"d-block\\\">\\n                                <h2\\n                                        class=\\\"text-white font-weight-light\\\">{{loggedUserFitnessProfile.weight}}kg.</h2>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"card activity col-lg-3 mt-3 mx-2 \\\">\\n                        <div class=\\\"card-body\\\">\\n                            <span class=\\\"display-5 opacity-5 text-white\\\"><i class=\\\"fas fa-running fa-lg\\\"></i></span>\\n                            <h3 class=\\\"card-title text-white font-weight-light\\\">Activity Level</h3>\\n                            <div class=\\\"d-block\\\">\\n                                <h2\\n                                        class=\\\"text-white font-weight-light\\\">{{loggedUserFitnessProfile.activityLevel | getConstantViewName}}</h2>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"card sports-experience col-lg-3 mt-3 mx-2 \\\">\\n\\n                        <div class=\\\"card-body\\\">\\n                            <span class=\\\"display-5 opacity-5 text-white\\\"><i class=\\\"fas fa-dumbbell fa-lg\\\"></i></span>\\n                            <h3 class=\\\"card-title text-white font-weight-light\\\">Sports Experience</h3>\\n                            <div class=\\\"d-block\\\">\\n                                <h2\\n                                        class=\\\"text-white font-weight-light\\\">{{loggedUserFitnessProfile.sportsExperience | getConstantViewName}}</h2>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"card weight-goal col-lg-3 mt-3 mx-2  \\\">\\n                        <div class=\\\"card-body\\\">\\n                            <span class=\\\"display-5 opacity-5 text-white\\\"><i\\n                                    class=\\\"fas fa-balance-scale-right fa-lg\\\"></i></span>\\n                            <h3 class=\\\"card-title text-white font-weight-light\\\">Weight Goal</h3>\\n                            <div class=\\\"d-block\\\">\\n                                <h2\\n                                        class=\\\"text-white font-weight-light\\\">{{loggedUserFitnessProfile.weightGoal | getConstantViewName}}</h2>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"card weight-change-rate col-lg-3 mt-3 mx-2 \\\">\\n                        <div class=\\\"card-body\\\">\\n                            <span class=\\\"display-5 opacity-5 text-white\\\"><i\\n                                    class=\\\"fas fa-tachometer-alt fa-lg\\\"></i></span>\\n                            <h3 class=\\\"card-title text-white font-weight-light\\\">Weight Change Rate</h3>\\n                            <div class=\\\"d-block\\\">\\n                                <h2\\n                                        class=\\\"text-white font-weight-light\\\">{{loggedUserFitnessProfile.weightChangeRate | getConstantViewName}}</h2>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <button type=\\\"button\\\" routerLink=\\\"/fitness-profile/edit\\\" class=\\\"btn btn-info btn-lg mt-5\\\">Edit Fitness Profile\\n        </button>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"align-center\\\" alt=\\\"\\\">\\n    <h1 class=\\\"display-4\\\">Welcome to FitBook!</h1>\\n    <p class=\\\"lead\\\">FitBook is a web-platform for creating and sharing fitness-related workout plans and\\n      diet\\n      plans. </p>\\n    <hr class=\\\"my-4\\\">\\n    <p>Create your plans and share them with your friends, receive feedback in form of likes and comments.\\n    </p>\\n    <p>Don't wait to get fit!</p>\\n\\n\\n    <a class=\\\"btn btn-secondary btn-lg m-2\\\" routerLink=\\\"/signin\\\" role=\\\"button\\\">Sign in</a>\\n    <a class=\\\"btn btn-secondary btn-lg m-2\\\" routerLink=\\\"/register\\\" role=\\\"button\\\">Register</a>\\n  </div>\\n\\n</div>\\n\"","export default \"<svg version=\\\"1.1\\\" id=\\\"Layer_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n     xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" height=\\\"800\\\"\\n     viewBox=\\\"0 0 612 792\\\" xml:space=\\\"preserve\\\">\\n\\n                                        <image style=\\\"overflow:visible;\\\" xlink:href=\\\"assets/static/images/muscles.png\\\"\\n                                               transform=\\\"matrix(0.7228 0 0 0.7228 -42.5334 69.2174)\\\"></image>\\n  <path (click)=\\\"onMuscleClick('abs')\\\" (mouseenter)=\\\"onMuscleMouseEnter('abs')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='abs',\\n        'major-muscle-group': majorMuscleGroupSelected === 'abs',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.abs}\\\"\\n        class=\\\"abs muscle\\\" d=\\\"M137.3,267.09c0,0-53.61,7.17-50.74,35.87c2.87,28.7,4.57,25.83,1.7,45.39c-2.87,19.57,4.83,28.7,4.83,28.7\\n\\tl38.09,50.74c0,0,18.26,21.78,32.87-14.48c14.61-36.26,27-42.39,27-42.39l7.3-6.78c0,0-1.43-7.3-1.3-10.3\\n\\tc0.13-3-2.87-16.04-2.87-16.04s-2.35-10.83,0.13-19.3c2.48-8.48,0-25.04-0.65-26.22s-1.96-16.43-20.74-18s-22.88-5.43-22.88-5.43\\n\\tL137.3,267.09z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('traps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('traps')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='traps',\\n        'major-muscle-group': majorMuscleGroupSelected === 'traps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.traps}\\\"\\n        class=\\\"traps muscle\\\" d=\\\"M83.7,184.85l10.76,6.46l8.22,3.91l10.17,2.93h6.65v-4.3v-10.57l-1.96-10.76\\n                    C117.54,172.52,107.17,185.43,83.7,184.85z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('traps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('traps')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='traps',\\n        'major-muscle-group': majorMuscleGroupSelected === 'traps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.traps}\\\"\\n        class=\\\"traps muscle\\\" d=\\\"M163.72,169.98l-1.96,15.36l-0.98,12.82l1.47,1.37l15.95-2.35l12.72-4.3l9-3.52l4.11-1.76\\n                    C204.02,187.59,193.46,190.13,163.72,169.98z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('chest')\\\" (mouseenter)=\\\"onMuscleMouseEnter('chest')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='chest',\\n        'major-muscle-group': majorMuscleGroupSelected === 'chest',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.chest}\\\"\\n        class=\\\"chest muscle\\\" d=\\\"M74.5,213.41l-1.37,11.93l0.68,2.15l2.64,2.74l1.96,11.74c0,0,3.91,20.93,11.15,25.43s5.48,4.11,5.48,4.11\\n                    l6.55,2.74l9.77-0.32c0,0,15.18-1.05,18.7-7.5c3.52-6.46,3.33-5.48,3.52-10.37s0-13.11,0-13.11l0.09-11.54l-3.22-9l-0.2-11.54\\n                    l-0.39-5.28l-10.37-3.52l-11.74-1.17C107.76,200.89,79.59,208.52,74.5,213.41z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('chest')\\\" (mouseenter)=\\\"onMuscleMouseEnter('chest')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='chest',\\n        'major-muscle-group': majorMuscleGroupSelected === 'chest',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.chest}\\\"\\n        class=\\\"chest muscle\\\" d=\\\"M168.41,200.89l-14.28,2.15l-5.67,2.15v2.93v6.85l-1.96,9.2l-4.89,10.37l-0.98,15.26c0,0,1.19,16.46,8.41,18.71\\n                    c7.23,2.25,10.37,4.18,17.22,4.77c6.85,0.59,13.3-1.17,13.3-1.17s8.41-1.57,13.89-10.37c5.48-8.8,7.24-14.48,7.24-14.48l2.35-10.11\\n                    l3.33-10.82l1.57-9l-5.28-5.09C202.65,212.24,180.15,199.12,168.41,200.89z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('biceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('biceps')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='biceps',\\n        'major-muscle-group': majorMuscleGroupSelected === 'biceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.biceps}\\\"\\n        class=\\\"biceps muscle\\\" d=\\\"M71.96,229.46c0,0-16.96,12.07-19.3,34.11c-2.35,22.04-2.22,25.7-2.22,25.7l1.17,12.91l1.3,6.78l2.35,5.35\\n                    l2.09,6.39l15.26-17.35l8.61-37.3l-3.92-30.78l-2.82-7.08L71.96,229.46z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('biceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('biceps')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='biceps',\\n        'major-muscle-group': majorMuscleGroupSelected === 'biceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.biceps}\\\"\\n        class=\\\"biceps muscle\\\" d=\\\"M208.91,228.87l17.22,21.91c0,0,12.33,19.57,11.35,38.93c-0.98,19.37-0.98,19.37-0.98,19.37l-3.52,12.33\\n                    l-9.75-5.87l-10.59-18.59l-3.72-14.09V228.87z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('quadriceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('quadriceps')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='quadriceps',\\n        'major-muscle-group': majorMuscleGroupSelected === 'quadriceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.quadriceps}\\\"\\n        class=\\\"quadriceps muscle\\\" d=\\\"M96,400.04l0.61,8.83L88,425.7l-7.24,17.41l-5.28,19.17c0,0,0,21.13,3.33,40.89\\n                    c3.33,19.76,5.87,34.83,5.87,34.83l5.28,19.57l2.54,10.17l2.93,2.54l2.15-2.54L99.93,556v-10.37c0,0,3.21-5.28,6.21-4.7\\n                    c2.99,0.59,7.49,0.39,7.88,6.85c0.39,6.46,1.96,15.26,1.96,15.26s-0.39,9.2,5.67,7.24c6.07-1.96,7.24-3.72,7.24-3.72l2.15-7.24\\n                    l2.09-25.76l-4.96-30l-6-22.96l-14.87-40.17l-6.14-34.06L96,400.04z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('quadriceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('quadriceps')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='quadriceps',\\n        'major-muscle-group': majorMuscleGroupSelected === 'quadriceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.quadriceps}\\\"\\n        class=\\\"quadriceps muscle\\\"\\n        d=\\\"M185.34,394.05l-7.86,36.56l-11.22,32.52l-4.7,11.74l-6.52,23.74l-2.61,18.52l-0.52,37.3l1.3,5.22l4.43,4.43\\n                    c0,0,7.04,4.17,8.09-11.22c1.04-15.39,4.17-14.87,4.17-14.87l6.78-0.52c0,0,4.7-1.3,3.65,12.78c-1.04,14.09,12.78,5.48,12.78,5.48\\n                    l3.65-12.78l6-23.48l4.96-20.87l4.17-27.39l-2.09-15.91c0,0-3.65-16.7-14.61-35.74S185.34,394.05,185.34,394.05z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': majorMuscleGroupSelected === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n        class=\\\"calves muscle\\\" d=\\\"M422.57,562.07l-4.11,16.24l-1.37,16.43l-1.76,29.15c0,0-0.39,23.67,3.62,28.37c4.01,4.7,7.92,7.43,7.92,7.43\\n                    s9.39-1.76,9-8.02s0.01-10.57,0.01-10.57l3.51,8.02l6.26,9l6.46,4.89l7.63,1.57l1.17-24.85l-2.48-24l-3.39-15.13l-0.52-5.54\\n                    l-11.35-18.59l-6.78-10.3l-2.09,6.39l-1.17,1.43l-5.22-10.3l-3.13-3.39h-1.7L422.57,562.07z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': majorMuscleGroupSelected === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n        class=\\\"calves muscle\\\" d=\\\"M499.52,572.7l-5.35,8.35l-4.43,9.91l-3.91,7.96l-0.78,4.17L483.09,637v13.3l2.74,12.39l0.91,7.7\\n                    c0,0,9.26-6.13,9.52-6.65s6.39-11.35,6.39-11.35l2.35-7.7l0.65-0.65l1.3,6.13v4.96l3.52,4.43l7.83,1.96c0,0,9-4.17,8.61-10.57\\n                    s1.57-21.65,1.57-21.65l-3.78-23.74l-2.61-12.39c0,0-0.78-9.13-2.61-13.57c-1.83-4.43-6.65-14.74-6.65-14.74l-8.35,9.13l-1.57,3.39\\n                    L499.52,572.7z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': majorMuscleGroupSelected === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n        class=\\\"calves muscle\\\" d=\\\"M96.09,585.74l-7.3,15.39l-3.91,30.52l1.83,29.48c0,0,7.04,32.35,7.04,33.13s3.91,26.09,3.91,26.09l17.48-3.65\\n                    l-6.26-42l-5.48-47.74l-1.3-16.43l-0.52-13.57L96.09,585.74z\\\"></path>\\n  <polygon (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n           (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n           [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': majorMuscleGroupSelected === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n           class=\\\"calves muscle\\\" points=\\\"128.11,605.5 127.49,606.57 119.7,619.98 115.98,630.35 115.13,648.35 117.35,675.54 119.5,700.59\\n                    120.67,713.5 123.8,684.93 128.11,661.07 130.07,649.91 130.07,636.8 130.07,625.85 \\\"></polygon>\\n  <path (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': majorMuscleGroupSelected === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n        class=\\\"calves muscle\\\" d=\\\"M157.13,603.74l4.7,13.04l1.57,7.57l-1.83,32.61l-3.13,22.43l-3.65,23.48l-2.74-53.93v-20.02\\n                    C152.04,628.91,157.78,604.33,157.13,603.74z\\\"></path>\\n  <polygon (click)=\\\"onMuscleClick('calves')\\\" (mouseenter)=\\\"onMuscleMouseEnter('calves')\\\"\\n           (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n           [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='calves',\\n        'major-muscle-group': majorMuscleGroupSelected === 'calves',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.calves}\\\"\\n           class=\\\"calves muscle\\\" points=\\\"161.57,711.74 177.22,717.61 181.65,698.96 189.35,670.52 195.35,648.74 198.22,632.83 197.17,612.48\\n                    194.83,595.52 190.13,595.52 187.13,587.04 182.7,586.26 179.89,599.96 175.39,623.96 167.96,664.13 \\\">\\n  </polygon>\\n  <path (click)=\\\"onMuscleClick('gluteus')\\\" (mouseenter)=\\\"onMuscleMouseEnter('gluteus')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='gluteus',\\n        'major-muscle-group': majorMuscleGroupSelected === 'gluteus',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.gluteus}\\\"\\n        class=\\\"gluteus muscle\\\"\\n        d=\\\"M417.22,365.57l-4.43,11.87l-1.96,10.43L409,403.65l-0.65,20.87c0,0,4.04,21.78,17.35,24.39\\n                    c13.3,2.61,18.78,2.35,18.78,2.35s13.96-1.57,15.91-8.35c1.96-6.78,4.3-4.3,4.3-4.3l5.09,9.52c0,0,7.43,11.35,18.91,10.17\\n                    s18.78-3.52,18.78-3.52s15.26-7.57,13.96-29.09c-1.3-21.52,0.08-37.43,0.08-37.43l-3.47-18.65c0,0-31.3,11.35-35.87,15.26\\n                    s-16.75,20.22-17.24,24.52s-2.97,2.59-2.97,2.59s-0.26-13.54-13.57-26.33c-13.3-12.78-19.7-14.87-19.7-14.87\\\"></path>\\n  <path (click)=\\\"onMuscleClick('anteriorDeltoid')\\\" (mouseenter)=\\\"onMuscleMouseEnter('anteriorDeltoid')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='anteriorDeltoid',\\n        'major-muscle-group': majorMuscleGroupSelected === 'anteriorDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.anteriorDeltoid}\\\"\\n        class=\\\"anteriorDeltoid muscle\\\" d=\\\"M109.39,200.89l-12.13-3.72l-6.65-3.65c0,0-17.61-0.65-21.13,2.22c-3.52,2.87-7.96,7.04-10.17,13.3\\n                    c-2.22,6.26-2.61,6.65-3,13.04c-0.39,6.39-0.91,9.26,0,13.83s2.24,9.29,2.24,9.29l6.37-10.46l7.7-6.56l0.52-1.01l1.15-11.81\\n                    l0.22-1.95C74.5,213.41,92.04,198.87,109.39,200.89z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('lateralDeltoid')\\\" (mouseenter)=\\\"onMuscleMouseEnter('lateralDeltoid')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='lateralDeltoid',\\n        'major-muscle-group': majorMuscleGroupSelected === 'lateralDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.lateralDeltoid}\\\"\\n        class=\\\"lateralDeltoid muscle\\\"\\n        d=\\\"M89.96,192.97l-11.84-4.99c0,0-14.77,0.59-20.93,10.86c-6.16,10.27-8.51,17.8-8.51,17.8L47.6,231.8l1.27,9.88\\n                    l0.39,10.47L52,264.97l4.4-16.73l1.99-3.6l-2.09-8.72c0,0-0.68-17.39,2.64-25.86C62.27,201.58,69.61,190.03,89.96,192.97z\\\">\\n  </path>\\n  <path (click)=\\\"onMuscleClick('anteriorDeltoid')\\\" (mouseenter)=\\\"onMuscleMouseEnter('anteriorDeltoid')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='anteriorDeltoid',\\n        'major-muscle-group': majorMuscleGroupSelected === 'anteriorDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.anteriorDeltoid}\\\"\\n        class=\\\"anteriorDeltoid muscle\\\" d=\\\"M173.43,199.52l20.83,8.35l9.76,4.57l5.8,8.48v9.78l15.76,19.4l3.23,5.55l3.05-12.29c0,0,1.7-9.91,0.65-18.65\\n                    c-1.04-8.74-2.48-12.39-5.74-16.3c-3.26-3.91-13.96-13.83-24.39-13.96c-10.43-0.13-12.65,1.43-12.65,1.43l-6.78,2.28L173.43,199.52z\\n                    \\\"></path>\\n  <path (click)=\\\"onMuscleClick('lateralDeltoid')\\\" (mouseenter)=\\\"onMuscleMouseEnter('lateralDeltoid')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='lateralDeltoid',\\n        'major-muscle-group': majorMuscleGroupSelected === 'lateralDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.lateralDeltoid}\\\"\\n        class=\\\"lateralDeltoid muscle\\\" d=\\\"M193.65,194.43l9.5-2.34c0,0,12.03-0.98,16.33,1.66c4.3,2.64,13.01,8.9,15.95,19.27\\n                    c2.93,10.37,4.21,17.02,4.21,17.61s-0.49,15.26-0.49,15.26l-3.52,20.74l-1.32,2.2l-4.95-12.13l2.63-14.06c0,0,3.89-26.66-6.66-35.87\\n                    s-15-10.58-15-10.58S200.7,193.05,193.65,194.43z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('traps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('traps')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='traps',\\n        'major-muscle-group': majorMuscleGroupSelected === 'traps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.traps}\\\"\\n        class=\\\"traps muscle\\\" d=\\\"M404.96,187.39L424,197.83l6.78,4.7l-4.17,2.09l4.17,25.3l2.87,28.43c0,0,27.65,43.04,28.43,54.52\\n                    c0.78,11.48,11.48,2.09,11.48,2.09l3.39-14.87l12.52-22.7l8.87-17.74l2.61-10.96l3.13-28.96l4.17-17.74l22.96-11.48l7.3-5.22\\n                    c0,0-44.09-1.83-56.09-29.48s-24.78,0-24.78,0S454.26,177.48,404.96,187.39z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('posteriorDeltoid')\\\" (mouseenter)=\\\"onMuscleMouseEnter('posteriorDeltoid')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='posteriorDeltoid',\\n        'major-muscle-group': majorMuscleGroupSelected === 'posteriorDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.posteriorDeltoid}\\\"\\n        class=\\\"posteriorDeltoid muscle\\\" d=\\\"M373.13,241.91l15.65-23.22l7.04-8.87c0,0,26.87-4.96,30.78-5.22c3.91-0.26,4.17-2.09,4.17-2.09l-15.4-9.42\\n                    l-10.42-5.71c0,0-22.7,6.52-26.61,21.39c-3.91,14.87-5.22,34.43-5.22,34.43V241.91z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('posteriorDeltoid')\\\" (mouseenter)=\\\"onMuscleMouseEnter('posteriorDeltoid')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='posteriorDeltoid',\\n        'major-muscle-group': majorMuscleGroupSelected === 'posteriorDeltoid',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.posteriorDeltoid}\\\"\\n        class=\\\"posteriorDeltoid muscle\\\" d=\\\"M538.52,185.3c0,0,15.78,4.83,20.35,14.87c4.57,10.04,6.39,19.3,6.39,19.3l1.3,14.09l-1.96,8.61l-7.17-11.87\\n                    l-7.3-11.22c0,0-6.65-14.22-13.17-13.17c-6.52,1.04-8.74,0.52-9.13,0.13c-0.39-0.39-8.87-1.7-8.87-1.7l-8.87-0.52l-2.06-0.82\\n                    c0,0,18.06-8.82,23.19-12.49C536.35,186.86,538.52,185.3,538.52,185.3z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('hamstrings')\\\" (mouseenter)=\\\"onMuscleMouseEnter('hamstrings')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='hamstrings',\\n        'major-muscle-group': majorMuscleGroupSelected === 'hamstrings',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.hamstrings}\\\"\\n        class=\\\"hamstrings muscle\\\"\\n        d=\\\"M414.09,459.74l-4.43,24.52l2.22,33.13l1.17,16.17l3.65,23.22l1.48,24.84l4.91-21.32l3-9.78l1.04-2.61\\n                    l10.1,19.53l17.29,27.62v-13.24l-6-61.04l-7.04-40.96l-4.17-21.44C437.3,458.39,425.83,446.17,414.09,459.74z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('hamstrings')\\\" (mouseenter)=\\\"onMuscleMouseEnter('hamstrings')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='hamstrings',\\n        'major-muscle-group': majorMuscleGroupSelected === 'hamstrings',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.hamstrings}\\\"\\n        class=\\\"hamstrings muscle\\\"\\n        d=\\\"M488.7,499.39l-4.17,24.81v34.93l-1.43,26.09l2.74,13.7l13.7-26.22l8.74-18l8.25,18.16l6.88-21.82v-49.3\\n                    c0,0-1.04-27.39-5.74-34.43c-2.46-3.69-15.28-13.81-22.17-4.43C489.2,471.41,488.7,499.39,488.7,499.39z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('latisimus')\\\" (mouseenter)=\\\"onMuscleMouseEnter('latisimus')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='latisimus',\\n        'major-muscle-group': majorMuscleGroupSelected === 'latisimus',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.latisimus}\\\"\\n        class=\\\"latisimus muscle\\\" d=\\\"M433.39,255.71l-15.65,1.85h-11.22v14.87l-1.57,10.7l6.78,17.22l6,14.87l3.65,17.74l6.26,19.83\\n                    c0,0,5.22,9.65,3.13,13.83c-2.09,4.17,6-8.61,6-8.61l2.61-13.3c0,0,4.99-17.52,13.57-26.12c8.58-8.6,8.96-6.99,8.96-6.99\\n                    l-12.54-27.12L433.39,255.71z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('latisimus')\\\" (mouseenter)=\\\"onMuscleMouseEnter('latisimus')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='latisimus',\\n        'major-muscle-group': majorMuscleGroupSelected === 'latisimus',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.latisimus}\\\"\\n        class=\\\"latisimus muscle\\\"\\n        d=\\\"M499.29,255.71l-12.95,27.38l-9.38,16.99l-2.62,11.49l16.71,15.38l8.24,15.65l1.15,24.84l3.65,4.12l6.26-17.48\\n                    l9.65-19.3l3.65-16.21l3.13-18.49l5.48-15.91l2.09-30l-7.04,4.17C527.3,258.35,508.83,260.12,499.29,255.71z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('triceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('triceps')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='triceps',\\n        'major-muscle-group': majorMuscleGroupSelected === 'triceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.triceps}\\\"\\n        class=\\\"triceps muscle\\\"\\n        d=\\\"M389.3,222.61l-4.56,2.08l-9.95,14.76L370,257.57l-1.83,25.83v19.57l3.39,7.04l14.35,12.52l10.43-13.3\\n                    l5.61-10.96l1.17-15.91l3.39-13.3L403.65,238c0,0-1.57-17.22-12.26-15.39C380.7,224.43,389.3,222.61,389.3,222.61z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('triceps')\\\" (mouseenter)=\\\"onMuscleMouseEnter('triceps')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='triceps',\\n        'major-muscle-group': majorMuscleGroupSelected === 'triceps',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.triceps}\\\"\\n        class=\\\"triceps muscle\\\" d=\\\"M534.35,224.43l1.04,21.65l-2.42,27.89l1.21,12.81l1.21,18.78l7.04,6.01l9.13,2.85l13.3-9.13l3.13-8.87v-22.17\\n                    l-2.87-21.65l-1.57-9.39l-6.13-12.91l-8.22-13C549.22,217.3,535.13,217.65,534.35,224.43z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('erectors')\\\" (mouseenter)=\\\"onMuscleMouseEnter('erectors')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='erectors',\\n        'major-muscle-group': majorMuscleGroupSelected === 'erectors',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.erectors}\\\"\\n        class=\\\"erectors muscle\\\" d=\\\"M469.12,317.83c0,0,26.61,7.3,27.4,23.48c0.78,16.17,0,33.13,0,33.13L478,385.39l-14.35,23.48l-13.57-25.83\\n                    l-14.61-11.48l5.3-26.7C440.78,344.87,443.81,317.83,469.12,317.83z\\\"></path>\\n  <path (click)=\\\"onMuscleClick('forearm')\\\" (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': majorMuscleGroupSelected === 'forearm',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.forearm}\\\"\\n        class=\\\"forearm muscle\\\"\\n        d=\\\"M45,298s-6.53,18.52-6.53,43.83S34.78,396,34.78,396L58,398.7s3.65-17.74,7.83-26.87S77,343.91,77.57,337.91s1-16.5,1-16.5l-9.83-9.06-3.66-.49-6.34,8.84Z\\\">\\n  </path>\\n  <path (click)=\\\"onMuscleClick('forearm')\\\" (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': majorMuscleGroupSelected === 'forearm',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.forearm}\\\"\\n        class=\\\"forearm muscle\\\"\\n        d=\\\"M215.3,325.91l7.92-10.37,9.76,5.87,6.65-14.28,5.67-13s8.61,25.82,9.92,35.74,5.21,44.6,5.21,44.6l4.7,24.27L243.74,400s-13.57-29-17.48-37.87S216.61,341,215.3,325.91Z\\\">\\n  </path>\\n  <path (click)=\\\"onMuscleClick('forearm')\\\" (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': majorMuscleGroupSelected === 'forearm',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.forearm}\\\"\\n        class=\\\"forearm muscle\\\"\\n        d=\\\"M346.78,400l20.09,2.31,2.87-6.35s16.69-31.74,20.09-41.13,9.79-31.62,9.65-40.44l-.14-8.81-13.06,18.43s-12.1,7.08-13.15-1.53l-1-8.61L371,309.52l-5.14-9.17s-7.57,21.65-10.18,42.78S346.78,400,346.78,400Z\\\">\\n  </path>\\n  <path (click)=\\\"onMuscleClick('forearm')\\\" (mouseenter)=\\\"onMuscleMouseEnter('forearm')\\\"\\n        (mouseout)=\\\"resetSelectedMuscleGroup()\\\"\\n        [ngClass]=\\\"{'is-focused': focusedMuscleGroup ==='forearm',\\n        'major-muscle-group': majorMuscleGroupSelected === 'forearm',\\n        'assisting-muscle-group': assistingMuscleGroupsSelected.forearm}\\\"\\n        class=\\\"forearm muscle\\\"\\n        d=\\\"M534.35,306.15l1.89,32.09L540,352.33l12.32,30.32,5.09,20,21.91-2.94-2.93-19.56L576,333.54s-.2-14.47-2.74-24.06A99.07,99.07,0,0,0,568,294.22l-2.7,9.87-7.15,12s2.47,7.63-7.66,11.15-8.19-3.91-8.19-3.91l1.37-2.94Z\\\">\\n  </path>\\n</svg>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light fixed-top\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\n    <img src=\\\"assets/static/images/logo_icon.png\\\" height=\\\"50\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\n    FitBook\\n  </a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\"\\n          aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/signin\\\" >Sign in</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light fixed-top\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\">\\n    <img src=\\\"assets/static/images/logo_icon.png\\\" height=\\\"50\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\n    FitBook\\n  </a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\"\\n          aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"dietsDropdown\\\" data-toggle=\\\"dropdown\\\">\\n          Diets\\n        </a>\\n        <div class=\\\"dropdown-menu\\\">\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/my-workouts\\\" routerLinkActive=\\\"active\\\">My meals</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My diet plans</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"workoutDropdown\\\" data-toggle=\\\"dropdown\\\">\\n          Workouts\\n        </a>\\n        <div class=\\\"dropdown-menu\\\">\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/my-workouts\\\" routerLinkActive=\\\"active\\\">My workouts</a>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/my-workout-plans\\\" routerLinkActive=\\\"active\\\">My workout plans</a>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"exploreDropdown\\\" data-toggle=\\\"dropdown\\\">\\n          Explore\\n        </a>\\n        <div class=\\\"dropdown-menu\\\">\\n          <h6 class=\\\"dropdown-header\\\">Diet related</h6>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/foods/all\\\">Foods</a>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/meals/all\\\">Meals</a>\\n          <h6 class=\\\"dropdown-header\\\">Workout related</h6>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/exercises/all\\\" routerLinkActive=\\\"active\\\"\\n             [routerLinkActiveOptions]=\\\"{exact: true}\\\">Exercises</a>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/workouts/all\\\" routerLinkActive=\\\"active\\\">Workouts</a>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"/workout-plans/all\\\" routerLinkActive=\\\"active\\\">Workout Plans</a>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"createDropdown\\\" data-toggle=\\\"dropdown\\\">\\n          Create\\n        </a>\\n        <div class=\\\"dropdown-menu\\\">\\n          <h6 class=\\\"dropdown-header\\\">Diet related</h6>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Food</a>\\n          <h6 class=\\\"dropdown-header\\\">Workout related</h6>\\n          <a class=\\\"dropdown-item\\\" routerLink=\\\"exercises/create\\\" routerLinkActive=\\\"active\\\">Exercise</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item d-lg-none\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Edit Profile</a>\\n      </li>\\n      <li class=\\\"nav-item d-lg-none\\\">\\n        <a class=\\\"nav-link\\\" style=\\\"cursor: pointer\\\" (click)=\\\"onLogout()\\\">Log Out</a>\\n      </li>\\n    </ul>\\n\\n    <div class=\\\"collapse navbar-collapse \\\" id=\\\"navbar-list-4\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item dropdown dropleft\\\" dropdown>\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdownMenuLink\\\" role=\\\"button\\\"\\n             data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            <img\\n              src=\\\"{{profilePictureUrl}}\\\"\\n              width=\\\"60\\\" height=\\\"60\\\" class=\\\"rounded-circle\\\">\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Dashboard</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Edit Profile</a>\\n            <a class=\\\"dropdown-item\\\" (click)=\\\"onLogout()\\\">Log Out</a>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\"","export default \"<app-logged-navbar *ngIf=\\\"isUserLoggedIn\\\"></app-logged-navbar>\\n<app-guest-navbar *ngIf=\\\"!isUserLoggedIn\\\"></app-guest-navbar>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-10 col-xl-9 mx-auto\\\">\\n          <div class=\\\"card card-signin flex-row my-5\\\">\\n            <div class=\\\"card-img-left d-none d-md-flex\\\">\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title text-center\\\">Register</h5>\\n              <form class=\\\"form-signin\\\" #resisterForm=\\\"ngForm\\\">\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputFirstName\\\">First name</label>\\n                  <input type=\\\"text\\\" id=\\\"inputFirstName\\\" class=\\\"form-control\\\"\\n                         placeholder=\\\"First name\\\" name=\\\"firstName\\\" #inputFirstName=\\\"ngModel\\\" required autofocus\\n                         pattern=\\\"([A-Z][A-Za-z0-9\\\\. -]+)\\\"\\n                         [ngClass]=\\\"{'is-valid': inputFirstName.valid && inputFirstName.touched,\\n                         'is-invalid': inputFirstName.invalid && inputFirstName.touched}\\\"\\n                         [(ngModel)]=\\\"registerBindingModel.firstName\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    First name is required and should start with capital letter.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputLastName\\\">Last name</label>\\n                  <input type=\\\"text\\\" id=\\\"inputLastName\\\" class=\\\"form-control\\\"\\n                         placeholder=\\\"Last name\\\" name=\\\"lastName\\\" #inputLastName=\\\"ngModel\\\"\\n                         required\\n                         pattern=\\\"([A-Z][A-Za-z0-9\\\\. -]+)\\\"\\n                         [ngClass]=\\\"{'is-valid': inputLastName.valid && inputLastName.touched,\\n                         'is-invalid': inputLastName.invalid && inputLastName.touched}\\\"\\n                         [(ngModel)]=\\\"registerBindingModel.lastName\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Last name is required and should start with capital letter.\\n                  </div>\\n                </div>\\n\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"genderInput\\\">Gender</label>\\n                  <select class=\\\"custom-select form-control\\\" id=\\\"genderInput\\\" name=\\\"gender\\\" #inputGender=\\\"ngModel\\\" required\\n                          [ngClass]=\\\"{'is-valid': inputGender.valid && inputGender.touched,\\n                         'is-invalid': inputGender.invalid && inputGender.touched}\\\"\\n                          [(ngModel)]=\\\"registerBindingModel.gender\\\">\\n                    <option selected value=\\\"\\\">Select gender</option>\\n                    <option value=\\\"male\\\">Male</option>\\n                    <option value=\\\"female\\\">Female</option>\\n                  </select>\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Gender is required.\\n                  </div>\\n                </div>\\n\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputEmail\\\">Username</label>\\n                  <input type=\\\"text\\\" id=\\\"inputUserame\\\" class=\\\"form-control\\\"\\n                         placeholder=\\\"Username\\\" name=\\\"username\\\" #inputUsername=\\\"ngModel\\\" required\\n                         [ngClass]=\\\"{'is-valid': inputUsername.valid && inputUsername.touched && !usernameTaken,\\n                         'is-invalid': inputUsername.invalid && inputUsername.touched || usernameTaken}\\\"\\n                         (focusout)=\\\"onUsernameFocusOut($event.target)\\\"\\n                         [(ngModel)]=\\\"registerBindingModel.username\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"usernameTaken\\\">\\n                    Username is already taken.\\n                  </div>\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"!usernameTaken\\\">\\n                    Username is required.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputEmail\\\">Email address</label>\\n                  <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\"\\n                         placeholder=\\\"Email address\\\" name=\\\"email\\\" #inputEmail=\\\"ngModel\\\"\\n                         required\\n                         pattern=\\\"{{regexPattern}}\\\"\\n                         [ngClass]=\\\"{'is-valid': inputEmail.valid && inputEmail.touched,\\n                         'is-invalid': inputEmail.invalid && inputEmail.touched}\\\"\\n                         [(ngModel)]=\\\"registerBindingModel.email\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Enter a valid email address.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"customFile\\\" id=\\\"exercisePictureLabel\\\">Profile picture</label>\\n                  <div class=\\\"custom-file\\\" id=\\\"customFileContainer\\\">\\n                    <input type=\\\"file\\\" class=\\\"custom-file-input form-control\\\"\\n                           id=\\\"customFile\\\" name=\\\"exercisePictureFile\\\"\\n                           (change)=\\\"handleFileInput($event.target.files)\\\">\\n                    <label class=\\\"custom-file-label\\\" for=\\\"customFile\\\"\\n                           id=\\\"çhooseFileLabel\\\" #chooseFileLabel>Choose\\n                      file</label>\\n                  </div>\\n                </div>\\n\\n                <hr>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputPassword\\\">Password</label>\\n                  <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\"\\n                         name=\\\"password\\\" placeholder=\\\"Password\\\" #inputPassword=\\\"ngModel\\\"\\n                         [minLength]=\\\"6\\\"\\n                         required\\n                         [ngClass]=\\\"{'is-valid': inputPassword.valid && inputPassword.touched,\\n                         'is-invalid': inputPassword.invalid && inputPassword.touched}\\\"\\n                         [(ngModel)]=\\\"registerBindingModel.password\\\"\\n                  (change)=\\\"onPasswordChange()\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Please enter a password with at least 6 symbols.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputConfirmPassword\\\">Confirm password</label>\\n                  <input type=\\\"password\\\" id=\\\"inputConfirmPassword\\\" class=\\\"form-control\\\"\\n                         name=\\\"confirmPassword\\\" placeholder=\\\"Confirm password\\\" #inputConfirmPassword=\\\"ngModel\\\"\\n                         required\\n                         [ngClass]=\\\"{'is-valid': inputConfirmPassword.valid &&\\n                         inputConfirmPassword.touched && passwordsMatch,\\n                         'is-invalid': (inputConfirmPassword.invalid || !passwordsMatch) && inputConfirmPassword.touched}\\\"\\n                         [(ngModel)]=\\\"registerBindingModel.confirmPassword\\\"\\n                  (change)=\\\"onPasswordChange()\\\">\\n                  <div class=\\\"valid-feedback\\\"></div>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Passwords must match.\\n                  </div>\\n                </div>\\n\\n                <button class=\\\"btn btn-lg btn-secondary btn-block text-uppercase\\\"\\n                        type=\\\"submit\\\" [disabled]=\\\"resisterForm.invalid\\\" (click)=\\\"onSubmit()\\\">Register\\n                </button>\\n\\n                <p>You already have a registration? Don't wait to get fit!</p>\\n\\n                <a routerLink=\\\"/signin\\\" role=\\\"button\\\">\\n                  <button\\n                    class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\"\\n                    type=\\\"button\\\">Sign\\n                    in\\n                  </button>\\n                </a>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-9 col-md-7 col-lg-5 mx-auto\\\">\\n          <div class=\\\"card card-signin my-5\\\">\\n            <div class=\\\"card-body\\\">\\n              <ngb-alert *ngIf=\\\"errorOccurred\\\" (close)=\\\"errorOccurred = false\\\" type=\\\"danger\\\">Wrong username or password!</ngb-alert>\\n              <h5 class=\\\"card-title text-center\\\">Sign In</h5>\\n              <form class=\\\"form-signin\\\" #signinForm=\\\"ngForm\\\">\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"username\\\">Username</label>\\n                  <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\"\\n                         placeholder=\\\"Username\\\" required autofocus name=\\\"username\\\" [(ngModel)]=\\\"signInBindingModel.username\\\">\\n                </div>\\n\\n                <div class=\\\"form-label-group\\\">\\n                  <label for=\\\"inputPassword\\\">Password</label>\\n                  <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\"\\n                         placeholder=\\\"Password\\\" required name=\\\"password\\\" [(ngModel)]=\\\"signInBindingModel.password\\\">\\n                </div>\\n\\n                <div class=\\\"custom-control custom-checkbox mb-3\\\">\\n                  <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"rememberMe\\\" name=\\\"rememberMe\\\" [(ngModel)]=\\\"rememberMe\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"rememberMe\\\">Remember\\n                    me</label>\\n                </div>\\n                <button class=\\\"btn btn-lg btn-secondary btn-block text-uppercase\\\"\\n                        type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Sign\\n                  in</button>\\n\\n                <p>You don't have a registration? Don't wait to get fit!</p>\\n                <a routerLink=\\\"/register\\\" role=\\\"button\\\"><button\\n                  class=\\\"btn btn-lg btn-primary btn-block text-uppercase\\\"\\n                  type=\\\"button\\\">Register</button></a>\\n<!--                <hr class=\\\"my-4\\\">-->\\n<!--                <button class=\\\"btn btn-lg btn-facebook btn-block text-uppercase\\\"-->\\n<!--                        type=\\\"submit\\\"><i class=\\\"fab fa-facebook-f mr-2\\\"></i> Sign in with-->\\n<!--                  Facebook</button>-->\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"jumbotron\\\">\\n    <div class=\\\"container\\\">\\n\\n        <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"align-center\\\" alt=\\\"\\\">\\n        <h1 class=\\\"display-4\\\">User Profile - {{user.username}}</h1>\\n    </div>\\n\\n    <hr/>\\n    <div class=\\\"container mt-5\\\">\\n        <div class=\\\"row fitness-profile-wrapper col-10 text-center mx-auto\\\">\\n            <div class=\\\"info col-lg-5 justify-content-center mx-auto\\\">\\n                <div class=\\\"profile-photo col-12 my-3\\\">\\n                    <img class=\\\"img-thumbnail\\\" src=\\\"{{user.profilePictureURL}}\\\" alt=\\\"Profile picture\\\">\\n                </div>\\n                <div class=\\\"col-12 mt-lg-5\\\">\\n                    <h1 class=\\\"font-weight-light\\\">{{user.firstName}} {{user.lastName}}</h1>\\n                    <h2 class=\\\"font-weight-light\\\">Age: {{user.fitnessProfile.age}}</h2>\\n                </div>\\n            </div>\\n            <div class=\\\"card calories d-block col-lg-5 mt-5 mt-lg-0 mx-auto\\\">\\n\\n\\n                <div class=\\\"card-body\\\">\\n                    <h3 class=\\\"card-title text-white font-weight-light\\\">Daily Calories Goal</h3>\\n                    <div class=\\\"d-block\\\">\\n                        <h2 class=\\\"text-white font-weight-light\\\">{{userFitnessProfile.nutritionGoal.calories}}</h2>\\n                    </div>\\n                    <span class=\\\"display-5 opacity-5 text-white\\\"><i class=\\\"fas fa-fire-alt fa-lg\\\"></i></span>\\n\\n                </div>\\n                <div class=\\\"chart-container row align-middle\\\">\\n\\n                    <ngx-charts-pie-chart\\n                            [results]=\\\"macroNutrientsData\\\"\\n                            [animations]=\\\"true\\\"\\n                            [trimLabels]=\\\"false\\\"\\n                            [doughnut]=\\\"true\\\"\\n                    >\\n\\n                    </ngx-charts-pie-chart>\\n\\n                    <div class=\\\"macros text-center mx-auto\\\">\\n                        <h5 class=\\\"font-weight-light text-white \\\">\\n                            Protein: {{userFitnessProfile.nutritionGoal.gramsOfProtein}}g.</h5>\\n                        <h5 class=\\\"font-weight-light text-white \\\">\\n                            Carbohydrates: {{userFitnessProfile.nutritionGoal.gramsOfCarbohydrates}}g.</h5>\\n                        <h5 class=\\\"font-weight-light text-white \\\">Fats: {{userFitnessProfile.nutritionGoal.gramsOfFats}}\\n                            g.</h5>\\n                        <span class=\\\"display-5 opacity-5 text-white\\\"><i\\n                                class=\\\"fas fa-utensils fa-lg\\\"></i></span>\\n                    </div>\\n\\n                </div>\\n            </div>\\n            <div class=\\\"row justify-content-around fitness-profile-attributes mt-5\\\">\\n\\n\\n                <div class=\\\"card height col-lg-3 mt-3 mx-2 \\\">\\n                    <div class=\\\"card-body\\\">\\n                        <span class=\\\"display-5 opacity-5 text-white\\\"><i class=\\\"fas fa-ruler-vertical fa-lg\\\"></i></span>\\n                        <h3 class=\\\"card-title text-white font-weight-light\\\">Height</h3>\\n                        <div class=\\\"d-block\\\">\\n                            <h2\\n                                    class=\\\"text-white font-weight-light\\\">{{userFitnessProfile.height}} cm.</h2>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"card weight col-lg-3 mt-3 mx-2 \\\">\\n                    <div class=\\\"card-body\\\">\\n                        <span class=\\\"display-5 opacity-5 text-white\\\"><i class=\\\"fas fa-weight fa-lg\\\"></i></span>\\n                        <h3 class=\\\"card-title text-white font-weight-light\\\">Weight</h3>\\n                        <div class=\\\"d-block\\\">\\n                            <h2\\n                                    class=\\\"text-white font-weight-light\\\">{{userFitnessProfile.weight}} kg.</h2>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"card activity col-lg-3 mt-3 mx-2 \\\">\\n                    <div class=\\\"card-body\\\">\\n                        <span class=\\\"display-5 opacity-5 text-white\\\"><i class=\\\"fas fa-running fa-lg\\\"></i></span>\\n                        <h3 class=\\\"card-title text-white font-weight-light\\\">Activity Level</h3>\\n                        <div class=\\\"d-block\\\">\\n                            <h2\\n                                    class=\\\"text-white font-weight-light\\\">{{userFitnessProfile.activityLevel | getConstantViewName}}</h2>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"card sports-experience col-lg-3 mt-3 mx-2 \\\">\\n\\n                    <div class=\\\"card-body\\\">\\n                        <span class=\\\"display-5 opacity-5 text-white\\\"><i class=\\\"fas fa-dumbbell fa-lg\\\"></i></span>\\n                        <h3 class=\\\"card-title text-white font-weight-light\\\">Sports Experience</h3>\\n                        <div class=\\\"d-block\\\">\\n                            <h2\\n                                    class=\\\"text-white font-weight-light\\\">{{userFitnessProfile.sportsExperience | getConstantViewName}}</h2>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"card weight-goal col-lg-3 mt-3 mx-2  \\\">\\n                    <div class=\\\"card-body\\\">\\n                        <span class=\\\"display-5 opacity-5 text-white\\\"><i\\n                                class=\\\"fas fa-balance-scale-right fa-lg\\\"></i></span>\\n                        <h3 class=\\\"card-title text-white font-weight-light\\\">Weight Goal</h3>\\n                        <div class=\\\"d-block\\\">\\n                            <h2\\n                                    class=\\\"text-white font-weight-light\\\">{{userFitnessProfile.weightGoal | getConstantViewName}}</h2>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"card weight-change-rate col-lg-3 mt-3 mx-2 \\\">\\n                    <div class=\\\"card-body\\\">\\n                        <span class=\\\"display-5 opacity-5 text-white\\\"><i class=\\\"fas fa-tachometer-alt fa-lg\\\"></i></span>\\n                        <h3 class=\\\"card-title text-white font-weight-light\\\">Weight Change Rate</h3>\\n                        <div class=\\\"d-block\\\">\\n                            <h2\\n                                    class=\\\"text-white font-weight-light\\\">{{userFitnessProfile.weightChangeRate | getConstantViewName}}</h2>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n\\n    <ng-template #copyWorkoutPlanToMyWorkoutPlansModal let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Copy Workout Plan To My Workout Plans</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <form #createWorkoutForm=\\\"ngForm\\\">\\n                <h5 class=\\\"text-center\\\">{{selectedWorkoutPlanForModal.name}}</h5>\\n                <table class=\\\"table table-striped table-hover mb-4 mx-auto\\\" *ngFor=\\\"let workout of selectedWorkoutPlanForModal.workouts\\\">\\n                    <thead>\\n                    <tr>\\n                        <th colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>{{workout.orderIndex}}. {{workout.workout.name}}</h5></th>\\n                    </tr>\\n                    <tr *ngIf=\\\"workout.workout.exercises && !workout.workout.exercises.length\\\">\\n                        <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n                    </tr>\\n                    <tr *ngIf=\\\"workout.workout.exercises && workout.workout.exercises.length\\\">\\n                        <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise name</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n\\n                    <tr *ngFor=\\\"let exercise of workout.workout.exercises\\\">\\n                        <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Copy to My Workout Plans</button>\\n        </div>\\n    </ng-template>\\n\\n    <div class=\\\"jumbotron\\\">\\n        <div class=\\\"container\\\">\\n\\n            <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"align-center\\\" alt=\\\"\\\">\\n            <h1 class=\\\"display-4\\\">All Workout Plans</h1>\\n        </div>\\n\\n\\n        <hr class=\\\"my-4\\\">\\n        <div class=\\\"container justify-content-center pb-0\\\">\\n            <ng-template [ngIf]=\\\"filteredWorkoutPlans.length > 0\\\" [ngIfElse]=\\\"noSuchWorkoutPlans\\\">\\n                <div class=\\\"row\\\">\\n                    <app-workout-plan-card\\n                            (modalOpen)=\\\"open(copyWorkoutPlanToMyWorkoutPlansModal, $event)\\\"\\n                            [workoutPlan]=\\\"workoutPlan\\\"\\n                            class=\\\"col-lg-4 col-sm-12 my-3 d-flex mx-auto align-items-stretch\\\"\\n                            *ngFor=\\\"let workoutPlan of filteredWorkoutPlans | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize\\\">\\n                        >\\n                    </app-workout-plan-card>\\n                </div>\\n                <ngb-pagination class=\\\"d-inline-block mt-5\\\" [(page)]=\\\"page\\\"\\n                                [pageSize]=\\\"pageSize\\\"\\n                                [collectionSize]=\\\"filteredWorkoutPlans.length\\\"></ngb-pagination>\\n            </ng-template>\\n\\n            <ng-template #noSuchWorkoutPlans>\\n                <h5>There are no workout plans.</h5>\\n            </ng-template>\\n\\n        </div>\\n\\n\\n    </div>\\n\\n\\n</div>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n\\n    <ng-template #createWorkoutExerciseModal let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Copy Workout To My Workouts</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <form #createWorkoutForm=\\\"ngForm\\\">\\n                <h5 class=\\\"text-center\\\">{{selectedWorkoutForModal.name}}</h5>\\n                <table class=\\\"table table-striped table-hover\\\">\\n                    <thead>\\n                    <tr *ngIf=\\\"selectedWorkoutForModal.exercises && !selectedWorkoutForModal.exercises.length\\\">\\n                        <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n                    </tr>\\n                    <tr *ngIf=\\\"selectedWorkoutForModal.exercises && selectedWorkoutForModal.exercises.length\\\">\\n                        <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n\\n                    <tr *ngFor=\\\"let exercise of selectedWorkoutForModal.exercises\\\">\\n                        <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Copy to My Workouts</button>\\n        </div>\\n    </ng-template>\\n\\n    <div class=\\\"jumbotron\\\">\\n        <div class=\\\"container\\\">\\n\\n            <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"align-center\\\" alt=\\\"\\\">\\n            <h1 class=\\\"display-4\\\">All Workouts</h1>\\n        </div>\\n\\n\\n    <hr class=\\\"my-4\\\">\\n    <div class=\\\"container justify-content-center pb-0\\\">\\n        <ng-template [ngIf]=\\\"filteredWorkouts.length > 0\\\" [ngIfElse]=\\\"noSuchWorkouts\\\">\\n            <div class=\\\"row\\\">\\n                <app-workout-card\\n                        (modalOpen)=\\\"open(createWorkoutExerciseModal, $event)\\\"\\n                        [workout]=\\\"workout\\\"\\n                        class=\\\"col-lg-4 col-sm-12 my-3 d-flex mx-auto align-items-stretch\\\"\\n                        *ngFor=\\\"let workout of filteredWorkouts | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize\\\">\\n                    >\\n                </app-workout-card>\\n            </div>\\n            <ngb-pagination class=\\\"d-inline-block mt-5\\\" [(page)]=\\\"page\\\"\\n                            [pageSize]=\\\"pageSize\\\"\\n                            [collectionSize]=\\\"filteredWorkouts.length\\\"></ngb-pagination>\\n        </ng-template>\\n\\n        <ng-template #noSuchWorkouts>\\n            <h5>There are no workouts.</h5>\\n        </ng-template>\\n\\n    </div>\\n\\n\\n</div>\\n\\n\\n</div>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n\\n    <ng-template #createWorkoutPlanModal let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create Workout Plan</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <form #createWorkoutPlanForm=\\\"ngForm\\\">\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label for=\\\"inputWorkoutName\\\">Workout Plan Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputWorkoutName\\\" name=\\\"name\\\" #inputWorkoutPlanName=\\\"ngModel\\\"\\n                               required\\n                               [ngClass]=\\\"{'is-valid': inputWorkoutPlanName.valid && inputWorkoutPlanName.touched,\\n                               'is-invalid': inputWorkoutPlanName.invalid && inputWorkoutPlanName.touched}\\\"\\n                               [(ngModel)]=\\\"workoutPlanBindingModel.name\\\">\\n                        <div class=\\\"valid-feedback\\\"></div>\\n                        <div class=\\\"invalid-feedback\\\">\\n                            Workout Plan Name is required.\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label for=\\\"inputStatus\\\">Status</label>\\n                        <select id=\\\"inputStatus\\\" name=\\\"status\\\" class=\\\"form-control\\\" #inputWorkoutStatus\\n                                [(ngModel)]=\\\"workoutPlanBindingModel.isPublic\\\">\\n                            <option [ngValue]=\\\"true\\\" selected>Public</option>\\n                            <option [ngValue]=\\\"false\\\">Private</option>\\n                        </select>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" [disabled]=\\\"createWorkoutPlanForm.invalid\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Save</button>\\n        </div>\\n    </ng-template>\\n\\n    <div class=\\\"jumbotron\\\">\\n        <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\n        <h1 class=\\\"display-4\\\">My Workout Plans</h1>\\n        <div class=\\\"container pt-4\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4 mx-auto\\\">\\n                    <h2>Workout Plans</h2>\\n                    <hr/>\\n                    <div class=\\\"list-group\\\" *ngIf=\\\"workoutPlans && workoutPlans.length\\\">\\n                        <button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\"\\n                                [ngClass]=\\\"{'active': selectedWorkoutPlanId === workoutPlan.id}\\\"\\n                                (click)=\\\"onWorkoutPlanButtonClick(workoutPlan.id)\\\"\\n                                *ngFor=\\\"let workoutPlan of workoutPlans\\\">\\n                            {{workoutPlan.name}}\\n                        </button>\\n                    </div>\\n\\n                    <h5 *ngIf=\\\"!workoutPlans || !workoutPlans.length\\\">You don't have any created workout plans.</h5>\\n\\n\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success mt-3\\\" (click)=\\\"open(createWorkoutPlanModal)\\\">Create Workout Plan</button>\\n                </div>\\n                <div class=\\\"col-lg-8 mx-auto\\\">\\n                    <h2>Selected Workout Plan</h2>\\n                    <hr/>\\n                    <router-outlet (deactivate)=\\\"onRouterOutletDeactivate()\\\" (activate)=\\\"onRouterOutletActivate()\\\"></router-outlet>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</div>\\n\"","export default \"<h4>No selected workout plan.</h4>\\n\"","export default \"<div class=\\\"selected-workout-plan\\\">\\n\\n    <ng-template #addWorkoutToWorkoutPlanModal let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title2\\\">Add Workout To Workout Plan</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <form *ngIf=\\\"selectedWorkoutForModal\\\" #addWorkoutToWorkoutPlanForm=\\\"ngForm\\\">\\n\\n                <div class=\\\"form-group col-6\\\">\\n                    <label for=\\\"inputStatus\\\">Workout</label>\\n                    <select id=\\\"inputWorkoutId\\\" name=\\\"workoutId\\\" class=\\\"form-control\\\" #inputWorkoutId\\n                            (change)=\\\"setSelectedWorkoutForModal()\\\"\\n                            [(ngModel)]=\\\"selectedWorkoutIdForModal\\\">\\n                        <option [ngValue]=\\\"workout.id\\\"\\n                                *ngFor=\\\"let workout of loggedUserWorkouts\\\">{{workout.name}}</option>\\n                    </select>\\n                </div>\\n\\n                <hr/>\\n\\n                <h5 class=\\\"text-center\\\">{{selectedWorkoutForModal.name}}</h5>\\n\\n                <table class=\\\"table table-striped table-hover\\\">\\n                    <thead>\\n                    <tr *ngIf=\\\"selectedWorkoutForModal.exercises && !selectedWorkoutForModal.exercises.length\\\">\\n                        <td colspan=\\\"5\\\" class=\\\"py-auto text-center\\\"><h5>No added exercises in this workout.</h5></td>\\n                    </tr>\\n                    <tr *ngIf=\\\"selectedWorkoutForModal.exercises && selectedWorkoutForModal.exercises.length\\\">\\n                        <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n\\n                    <tr *ngFor=\\\"let exercise of selectedWorkoutForModal.exercises\\\">\\n                        <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </form>\\n\\n            <h3 *ngIf=\\\"!selectedWorkoutForModal\\\" class=\\\"text-center\\\">You don't have any workouts.</h3>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" [disabled]=\\\"!selectedWorkoutForModal\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Add to Workout Plan</button>\\n        </div>\\n    </ng-template>\\n\\n    <ng-template #showWorkoutsSetsModal let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Sets per Muscle Group</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"row align-middle\\\">\\n                <ngx-charts-bar-horizontal\\n                        [view]=\\\"[800, muscleGroupSets.length < 8 ? 200 : 400]\\\"\\n                        [animations]=\\\"true\\\"\\n                        [xAxis]=\\\"true\\\"\\n                        [yAxis]=\\\"true\\\"\\n                        [results]=\\\"muscleGroupSets\\\"\\n                        legendTitle=\\\"Muscle Groups\\\"\\n                        [legend]=\\\"true\\\"\\n                        [showDataLabel]=\\\"false\\\"\\n                        [showXAxisLabel]=\\\"false\\\"\\n                        [showGridLines]=\\\"true\\\"\\n                        [showYAxisLabel]=\\\"false\\\"\\n                        [gradient]=\\\"true\\\"\\n                        [noBarWhenZero]=\\\"true\\\"\\n                        [roundDomains]=\\\"true\\\"\\n                        [roundEdges]=\\\"true\\\"\\n                        [tooltipDisabled]=\\\"false\\\"\\n                        [trimYAxisTicks]=\\\"false\\\"\\n                        [customColors]=\\\"customColors\\\"\\n                >\\n\\n                </ngx-charts-bar-horizontal>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Close</button>\\n        </div>\\n    </ng-template>\\n\\n\\n    <h2 *ngIf=\\\"!editMode\\\" class=\\\"pt-3 font-weight-light\\\">{{selectedWorkoutPlan.name}}</h2>\\n    <div class=\\\"py-3 mx-auto col-5\\\"  *ngIf=\\\"editMode\\\"><input type=\\\"text\\\" value=\\\"{{editWorkoutPlanBindingModel.name}}\\\" class=\\\"form-control form-control-lg text-center\\\"\\n                                                             id=\\\"inputName\\\"\\n                                                             name=\\\"inputName\\\" #inputName=\\\"ngModel\\\"\\n                                                             required\\n                                                             [ngClass]=\\\"{'is-valid': inputName.valid && inputName.touched,\\n                         'is-invalid': inputName.invalid && inputName.touched}\\\" [(ngModel)]=\\\"editWorkoutPlanBindingModel.name\\\"></div>\\n    <h4 class=\\\"pb-3 font-weight-light\\\" *ngIf=\\\"!editMode && !selectedWorkoutPlan.isCopied\\\">\\n        ({{selectedWorkoutPlan.isPublic ? 'Public' : 'Private'}})</h4>\\n    <h4 class=\\\"pb-3 font-weight-light\\\" *ngIf=\\\"selectedWorkoutPlan.isCopied\\\">(Copy)</h4>\\n    <div *ngIf=\\\"editMode && !selectedWorkoutPlan.isCopied\\\" class=\\\"pb-3 col-3 mx-auto\\\">\\n        <select id=\\\"inputStatus\\\" name=\\\"status\\\" class=\\\"form-control\\\" #inputWorkoutStatus\\n                [(ngModel)]=\\\"editWorkoutPlanBindingModel.isPublic\\\">\\n            <option [ngValue]=\\\"true\\\">Public</option>\\n            <option [ngValue]=\\\"false\\\">Private</option>\\n        </select>\\n    </div>\\n    <button *ngIf=\\\"!editMode\\\" type=\\\"button\\\" routerLink=\\\"/workout-plans/details/{{workoutPlanId}}\\\"\\n            class=\\\"btn btn-dark mb-2\\\"><i class=\\\"fas fa-share-alt\\\"></i></button>\\n\\n\\n    <h5 *ngIf=\\\"!selectedWorkoutPlan.workouts || !selectedWorkoutPlan.workouts.length\\\">No added workouts in this workout\\n        plan.</h5>\\n\\n\\n    <div class=\\\"workouts-container col-10 mx-auto\\\" *ngIf=\\\"!editMode\\\">\\n        <table class=\\\"table table-striped table-hover mb-4\\\" *ngFor=\\\"let workout of selectedWorkoutPlan.workouts\\\">\\n            <h4 class=\\\"order-index-workout font-weight-bold font-italic\\\">{{workout.orderIndex}}</h4>\\n            <thead>\\n            <tr>\\n                <th colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5><a\\n                        routerLink=\\\"/my-workouts/{{workout.workout.id}}\\\">{{workout.workout.name}}</a></h5></th>\\n            </tr>\\n            <tr *ngIf=\\\"workout.workout.exercises && !workout.workout.exercises.length\\\">\\n                <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n            </tr>\\n            <tr *ngIf=\\\"workout.workout.exercises && workout.workout.exercises.length\\\">\\n                <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise name</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%;\\\"></th>\\n\\n            </tr>\\n            </thead>\\n            <tbody *ngIf=\\\"!editMode && workout.workout.exercises && workout.workout.exercises.length\\\">\\n\\n            <tr *ngFor=\\\"let exercise of workout.workout.exercises\\\">\\n                <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                <td>\\n                    <button type=\\\"button\\\" routerLink=\\\"/exercises/details/{{exercise.exercise.id}}\\\"\\n                            class=\\\"btn btn-primary mr-2\\\"><i class=\\\"far fa-eye\\\"></i></button>\\n                </td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <div class=\\\"workouts-container col-10 mx-auto\\\" cdkDropList (cdkDropListDropped)=\\\"onDrop($event)\\\" *ngIf=\\\"editMode\\\">\\n        <table cdkDrag class=\\\"table table-striped table-hover mb-4\\\"\\n               *ngFor=\\\"let workout of editWorkoutPlanBindingModel.workouts\\\">\\n            <h4 class=\\\"order-index-workout font-weight-bold font-italic\\\">{{workout.orderIndex}}</h4>\\n            <thead>\\n            <tr>\\n                <th colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5 class=\\\"d-inline-block\\\">{{workout.workout.name}}</h5>\\n                    <button type=\\\"button\\\" (click)=\\\"onWorkoutDeleteHandler(workout.id, workout.orderIndex)\\\"\\n                            class=\\\"btn btn-danger delete-btn ml-3\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\n                </th>\\n\\n            </tr>\\n            <tr *ngIf=\\\"workout.workout.exercises && !workout.workout.exercises.length\\\">\\n                <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n            </tr>\\n            <tr *ngIf=\\\"workout.workout.exercises && workout.workout.exercises.length\\\">\\n                <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise name</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%;\\\"></th>\\n\\n            </tr>\\n            </thead>\\n            <tbody *ngIf=\\\"workout.workout.exercises && workout.workout.exercises.length\\\">\\n\\n            <tr *ngFor=\\\"let exercise of workout.workout.exercises\\\">\\n                <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                <td>\\n                    <button type=\\\"button\\\" routerLink=\\\"/exercises/details/{{exercise.exercise.id}}\\\"\\n                            class=\\\"btn btn-primary mr-2\\\"><i class=\\\"far fa-eye\\\"></i></button>\\n                </td>\\n            </tr>\\n            </tbody>\\n            <tr *cdkDragPreview class=\\\"text-center\\\">\\n            </tr>\\n        </table>\\n\\n    </div>\\n\\n\\n    <div class=\\\"workout-actions\\\" *ngIf=\\\"!editMode\\\">\\n\\n        <button *ngIf=\\\"selectedWorkoutPlan.workouts && selectedWorkoutPlan.workouts.length\\\" type=\\\"button\\\"\\n                class=\\\"btn btn-secondary my-3 mx-2\\\" (click)=\\\"open(showWorkoutsSetsModal)\\\">Show Sets per Muscle Group\\n        </button>\\n\\n        <button type=\\\"link\\\" class=\\\"btn btn-primary my-3 mx-2\\\"\\n                (click)=\\\"openAddWorkoutModal(addWorkoutToWorkoutPlanModal)\\\">Add Workout\\n        </button>\\n\\n        <button type=\\\"button\\\"\\n                class=\\\"btn btn-success my-3 mx-2\\\" routerLink=\\\"./\\\" [queryParams]=\\\"{'edit': 1}\\\">Edit\\n        </button>\\n\\n        <button type=\\\"button\\\" (click)=\\\"onWorkoutPlanDeleteHandler()\\\" class=\\\"btn btn-danger my-3 mx-2\\\">\\n            Delete\\n        </button>\\n    </div>\\n\\n\\n    <div class=\\\"workout-actions-edit\\\" *ngIf=\\\"editMode\\\">\\n        <button type=\\\"link\\\" [disabled]=\\\"editForm.invalid\\\" class=\\\"btn btn-success my-3 mx-2\\\" (click)=\\\"onSaveHandler()\\\">\\n            Save\\n        </button>\\n        <button type=\\\"link\\\" class=\\\"btn btn-danger my-3 mx-2\\\" routerLink=\\\"./\\\">Cancel</button>\\n    </div>\\n\\n\\n</div>\\n\\n\\n\\n\"","export default \"<div class=\\\"selected-workout\\\">\\n\\n    <h2 class=\\\"py-3 font-weight-light\\\">{{selectedWorkout.name}}</h2>\\n\\n    <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n        <tr *ngIf=\\\"selectedWorkout.exercises && !selectedWorkout.exercises.length\\\">\\n            <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n        </tr>\\n        <tr *ngIf=\\\"selectedWorkout.exercises && selectedWorkout.exercises.length\\\">\\n            <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n            <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise name</th>\\n            <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n            <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n            <th scope=\\\"col\\\" style=\\\"width: 20%;\\\"></th>\\n\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let exercise of selectedWorkout.exercises\\\">\\n            <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n            <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n            <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n            <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n            <td>\\n                <button type=\\\"button\\\" routerLink=\\\"/exercises/details/{{exercise.exercise.id}}\\\"\\n                        class=\\\"btn btn-primary mr-2\\\"><i class=\\\"far fa-eye\\\"></i></button>\\n                <button type=\\\"button\\\" (click)=\\\"onWorkoutExerciseDeleteHandler(selectedWorkout.id, exercise.id)\\\"\\n                        class=\\\"btn btn-danger\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\n            </td>\\n        </tr>\\n        </tbody>\\n    </table>\\n\\n    <button type=\\\"link\\\" class=\\\"btn btn-primary my-3 mx-2\\\" routerLink=\\\"/exercises/all\\\">Save</button>\\n    <button type=\\\"link\\\" class=\\\"btn btn-primary my-3 mx-2\\\" routerLink=\\\"../\\\">Cancel</button>\\n\\n</div>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n\\n  <ng-template #createWorkoutModal let-modal>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create Workout</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <form #createWorkoutForm=\\\"ngForm\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"inputWorkoutName\\\">Workout Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputWorkoutName\\\" name=\\\"name\\\" #inputWorkoutName=\\\"ngModel\\\"\\n                   required\\n                   [ngClass]=\\\"{'is-valid': inputWorkoutName.valid && inputWorkoutName.touched,\\n                               'is-invalid': inputWorkoutName.invalid && inputWorkoutName.touched}\\\"\\n                   [(ngModel)]=\\\"workoutBindingModel.name\\\">\\n\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label for=\\\"inputStatus\\\">Status</label>\\n            <select id=\\\"inputStatus\\\" name=\\\"status\\\" class=\\\"form-control\\\" #inputWorkoutStatus\\n                    [(ngModel)]=\\\"workoutBindingModel.isPublic\\\">\\n              <option [ngValue]=\\\"true\\\" selected>Public</option>\\n              <option [ngValue]=\\\"false\\\">Private</option>\\n            </select>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"createWorkoutForm.invalid\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Save</button>\\n    </div>\\n  </ng-template>\\n\\n  <div class=\\\"jumbotron\\\">\\n    <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\n    <h1 class=\\\"display-4\\\">My Workouts</h1>\\n    <div class=\\\"container pt-4\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4 mx-auto\\\">\\n          <h2>Workouts</h2>\\n          <hr/>\\n          <div class=\\\"list-group\\\" *ngIf=\\\"workouts && workouts.length\\\">\\n            <button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\"\\n                    [ngClass]=\\\"{'active': selectedWorkoutId === workout.id}\\\"\\n                    (click)=\\\"onWorkoutButtonClick(workout.id)\\\"\\n                    *ngFor=\\\"let workout of workouts\\\">\\n              {{workout.name}}\\n            </button>\\n          </div>\\n\\n          <h5 *ngIf=\\\"!workouts || !workouts.length\\\">You don't have any created workouts.</h5>\\n\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-success mt-3\\\" (click)=\\\"open(createWorkoutModal)\\\">Create Workout</button>\\n        </div>\\n        <div class=\\\"col-lg-8 mx-auto\\\">\\n          <h2>Selected Workout</h2>\\n          <hr/>\\n          <router-outlet (deactivate)=\\\"onRouterOutletDeactivate()\\\" (activate)=\\\"onRouterOutletActivate()\\\"></router-outlet>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n</div>\\n\"","export default \"<h4>No selected workout.</h4>\\n\"","export default \"<div class=\\\"selected-workout\\\">\\n\\n    <ng-template #showWorkoutsSetsModal let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Sets per Muscle Group</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"row align-middle\\\">\\n                <ngx-charts-bar-horizontal\\n                        [view]=\\\"[800, exercisesSets.length < 8 ? 200 : 400]\\\"\\n                        [animations]=\\\"true\\\"\\n                        [xAxis]=\\\"true\\\"\\n                        [yAxis]=\\\"true\\\"\\n                        [results]=\\\"exercisesSets\\\"\\n                        legendTitle=\\\"Muscle Groups\\\"\\n                        [legend]=\\\"true\\\"\\n                        [showDataLabel]=\\\"false\\\"\\n                        [showXAxisLabel]=\\\"false\\\"\\n                        [showGridLines]=\\\"true\\\"\\n                        [showYAxisLabel]=\\\"false\\\"\\n                        [gradient]=\\\"true\\\"\\n                        [noBarWhenZero]=\\\"true\\\"\\n                        [roundDomains]=\\\"true\\\"\\n                        [roundEdges]=\\\"true\\\"\\n                        [tooltipDisabled]=\\\"false\\\"\\n                        [trimYAxisTicks]=\\\"false\\\"\\n                        [customColors]=\\\"customColors\\\"\\n                >\\n\\n                </ngx-charts-bar-horizontal>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Close</button>\\n        </div>\\n    </ng-template>\\n\\n\\n    <h2 class=\\\"pt-3 font-weight-light\\\"  *ngIf=\\\"!editMode\\\">{{selectedWorkout.name}}</h2>\\n    <div class=\\\"py-3 mx-auto col-5\\\"  *ngIf=\\\"editMode\\\"><input type=\\\"text\\\" value=\\\"{{editWorkoutBindingModel.name}}\\\" class=\\\"form-control form-control-lg text-center\\\"\\n                                                                id=\\\"inputName\\\"\\n                                                                name=\\\"inputName\\\" #inputName=\\\"ngModel\\\"\\n                                                                required\\n                                                                [ngClass]=\\\"{'is-valid': inputName.valid && inputName.touched,\\n                         'is-invalid': inputName.invalid && inputName.touched}\\\" [(ngModel)]=\\\"editWorkoutBindingModel.name\\\"></div>\\n    <h4 class=\\\"pb-3 font-weight-light\\\" *ngIf=\\\"!editMode && !selectedWorkout.isCopied\\\">\\n        ({{selectedWorkout.isPublic ? 'Public' : 'Private'}})</h4>\\n    <h4 class=\\\"pb-3 font-weight-light\\\" *ngIf=\\\"selectedWorkout.isCopied\\\">(Copy)</h4>\\n    <div *ngIf=\\\"editMode && !selectedWorkout.isCopied\\\" class=\\\"pb-3 col-3 mx-auto\\\">\\n        <select id=\\\"inputStatus\\\" name=\\\"status\\\" class=\\\"form-control\\\" #inputWorkoutStatus\\n                [(ngModel)]=\\\"editWorkoutBindingModel.isPublic\\\">\\n            <option [ngValue]=\\\"true\\\">Public</option>\\n            <option [ngValue]=\\\"false\\\">Private</option>\\n        </select>\\n    </div>\\n    <button *ngIf=\\\"!editMode\\\" type=\\\"button\\\" routerLink=\\\"/workouts/details/{{workoutId}}\\\"\\n            class=\\\"btn btn-dark mb-2\\\"><i class=\\\"fas fa-share-alt\\\"></i></button>\\n\\n    <form #editForm=\\\"ngForm\\\">\\n        <table class=\\\"table table-striped table-hover\\\">\\n            <thead>\\n            <tr *ngIf=\\\"selectedWorkout.exercises && !selectedWorkout.exercises.length\\\">\\n                <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n            </tr>\\n            <tr *ngIf=\\\"selectedWorkout.exercises && selectedWorkout.exercises.length\\\">\\n                <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise name</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%;\\\"></th>\\n\\n            </tr>\\n            </thead>\\n            <tbody *ngIf=\\\"!editMode && selectedWorkout.exercises && selectedWorkout.exercises.length\\\">\\n\\n            <tr *ngFor=\\\"let exercise of selectedWorkout.exercises\\\">\\n                <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                <td>\\n                    <button type=\\\"button\\\" routerLink=\\\"/exercises/details/{{exercise.exercise.id}}\\\"\\n                            class=\\\"btn btn-primary mr-2\\\"><i class=\\\"far fa-eye\\\"></i></button>\\n                </td>\\n            </tr>\\n            </tbody>\\n            <tbody cdkDropList (cdkDropListDropped)=\\\"onDrop($event)\\\" *ngIf=\\\"editMode\\\">\\n\\n            <tr *ngFor=\\\"let exercise of editWorkoutBindingModel.exercises\\\" [id]=\\\"exercise.orderIndex\\\" cdkDrag>\\n                <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n\\n                <td class=\\\"align-middle\\\">\\n                    <input type=\\\"number\\\" value=\\\"{{exercise.reps}}\\\" class=\\\"form-control\\\" id=\\\"inputReps\\\" name=\\\"inputReps-{{exercise.orderIndex}}\\\"\\n                           #inputReps=\\\"ngModel\\\" [(ngModel)]=\\\"exercise.reps\\\"\\n                           required\\n                           pattern=\\\"^[1-9][0-9]*\\\"\\n                           min=\\\"1\\\"\\n                           [ngClass]=\\\"{'is-valid': inputReps.valid && inputReps.touched,\\n                         'is-invalid': inputReps.invalid && inputReps.touched}\\\"></td>\\n\\n                <td class=\\\"align-middle\\\"><input type=\\\"number\\\" value=\\\"{{exercise.sets}}\\\" class=\\\"form-control\\\"\\n                                                id=\\\"inputSets\\\"\\n                                                name=\\\"inputSets-{{exercise.orderIndex}}\\\" #inputSets=\\\"ngModel\\\"\\n                                                required\\n                                                pattern=\\\"^[1-9][0-9]*\\\"\\n                                                min=\\\"1\\\"\\n                                                [ngClass]=\\\"{'is-valid': inputSets.valid && inputSets.touched,\\n                         'is-invalid': inputSets.invalid && inputSets.touched}\\\" [(ngModel)]=\\\"exercise.sets\\\"></td>\\n                <td>\\n                    <button type=\\\"button\\\" routerLink=\\\"/exercises/details/{{exercise.exercise.id}}\\\"\\n                            class=\\\"btn btn-primary mr-2\\\"><i class=\\\"far fa-eye\\\"></i></button>\\n                    <button type=\\\"button\\\" (click)=\\\"onWorkoutExerciseDeleteHandler(selectedWorkout.id, exercise.id)\\\"\\n                            class=\\\"btn btn-danger\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\n                </td>\\n                <div *cdkDragPreview class=\\\"text-center\\\">\\n                </div>\\n\\n            </tr>\\n            </tbody>\\n        </table>\\n    </form>\\n\\n    <div class=\\\"workout-actions\\\" *ngIf=\\\"!editMode\\\">\\n\\n        <button *ngIf=\\\"selectedWorkout.exercises && selectedWorkout.exercises.length\\\" type=\\\"button\\\"\\n                class=\\\"btn btn-secondary my-3 mx-2\\\" (click)=\\\"open(showWorkoutsSetsModal)\\\">Show Sets per Muscle Group\\n        </button>\\n\\n        <button type=\\\"link\\\" class=\\\"btn btn-primary my-3 mx-2\\\" routerLink=\\\"/exercises/all\\\">Add Exercise</button>\\n\\n        <button type=\\\"button\\\"\\n                class=\\\"btn btn-success my-3 mx-2\\\" routerLink=\\\"./\\\" [queryParams]=\\\"{'edit': 1}\\\">Edit\\n        </button>\\n\\n        <button type=\\\"button\\\" (click)=\\\"onWorkoutDeleteHandler(selectedWorkout.id)\\\" class=\\\"btn btn-danger my-3 mx-2\\\">\\n            Delete\\n        </button>\\n    </div>\\n\\n\\n    <div class=\\\"workout-actions-edit\\\" *ngIf=\\\"editMode\\\">\\n        <button type=\\\"link\\\" [disabled]=\\\"editForm.invalid\\\" class=\\\"btn btn-success my-3 mx-2\\\" (click)=\\\"onSaveHandler()\\\">Save</button>\\n        <button type=\\\"link\\\" class=\\\"btn btn-danger my-3 mx-2\\\" routerLink=\\\"./\\\">Cancel</button>\\n    </div>\\n\\n\\n</div>\\n\\n\\n\"","export default \"<div class=\\\"card d-inline-flex\\\">\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"card-title\\\">{{workout.name}}</h3>\\n        <hr/>\\n        <h4 class=\\\"font-weight-light pb-2\\\">Creator: <a class=\\\"card-link\\\" routerLink=\\\"/profile/{{workout.creator.username}}\\\">{{workout.creator.username}}</a></h4>\\n        <hr/>\\n        <div class=\\\"table-wrapper pb-5 pr-3 pl-1\\\">\\n            <table class=\\\"table table-striped table-hover\\\">\\n                <thead>\\n                <tr *ngIf=\\\"workout.exercises && !workout.exercises.length\\\">\\n                    <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n                </tr>\\n                <tr *ngIf=\\\"workout.exercises && workout.exercises.length\\\">\\n                    <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                    <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n\\n                <tr *ngFor=\\\"let exercise of workout.exercises\\\">\\n                    <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                    <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                    <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                    <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n            <hr class=\\\"mb-5\\\"/>\\n            <div class=\\\"buttons-wrapper left\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"copyToMyWorkoutsHandler(workout.id)\\\">Copy to\\n                    My Workouts\\n                </button>\\n            </div>\\n            <div class=\\\"buttons-wrapper right\\\">\\n                <a routerLink=\\\"/workouts/details/{{workout.id}}\\\" class=\\\"btn btn-sm btn-info\\\">Details</a>\\n            </div>\\n\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n\\n    <ng-template #copyWorkoutModal let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Copy Workout To My Workouts</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <form #copyWorkoutForm=\\\"ngForm\\\">\\n                <h5 class=\\\"text-center\\\">{{workout.name}}</h5>\\n                <table class=\\\"table table-striped table-hover\\\">\\n                    <thead>\\n                    <tr *ngIf=\\\"workout.exercises && !workout.exercises.length\\\">\\n                        <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n                    </tr>\\n                    <tr *ngIf=\\\"workout.exercises && workout.exercises.length\\\">\\n                        <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n\\n                    <tr *ngFor=\\\"let exercise of workout.exercises\\\">\\n                        <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Copy to My Workouts</button>\\n        </div>\\n    </ng-template>\\n\\n\\n    <div class=\\\"jumbotron\\\">\\n        <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\n        <h1 class=\\\"display-4\\\">Workout Details</h1>\\n        <hr class=\\\"my-2\\\"/>\\n        <div class=\\\"container pt-4\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"workout-details col-lg-9 mx-auto\\\">\\n                    <div class=\\\"exercise-intro mt-4\\\">\\n                        <h2 class=\\\"display-4 d-block mx-auto font-weight-bolder\\\">{{workout.name}}</h2>\\n                    </div>\\n\\n                    <hr class=\\\"my-4\\\"/>\\n\\n                    <h3 class=\\\"font-weight-light pb-3\\\">Creator: <a class=\\\"card-link\\\" routerLink=\\\"/profile/{{workout.creator.username}}\\\">{{workout.creator.username}}</a></h3>\\n\\n                    <div *ngIf=\\\"workout.exercises && workout.exercises.length\\\">\\n                        <table class=\\\"table table-striped table-hover\\\">\\n                            <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                                <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise name</th>\\n                                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                                <th scope=\\\"col\\\" style=\\\"width: 20%;\\\"></th>\\n\\n                            </tr>\\n                            </thead>\\n                            <tbody *ngIf=\\\"workout.exercises && workout.exercises.length\\\">\\n\\n                            <tr *ngFor=\\\"let exercise of workout.exercises\\\">\\n                                <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                                <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                                <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                                <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                                <td>\\n                                    <button type=\\\"button\\\" routerLink=\\\"/exercises/details/{{exercise.exercise.id}}\\\"\\n                                            class=\\\"btn btn-primary mr-2\\\"><i class=\\\"far fa-eye\\\"></i></button>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n\\n                        <h3 class=\\\"mx-auto font-weight-light\\\">Sets per Muscle Group</h3>\\n\\n                        <div class=\\\"chart-container row align-middle my-4\\\">\\n                            <ngx-charts-bar-horizontal\\n                                    [view]=\\\"[800, exercisesSets.length < 8 ? 250 : 500]\\\"\\n                                    [animations]=\\\"true\\\"\\n                                    [xAxis]=\\\"true\\\"\\n                                    [yAxis]=\\\"true\\\"\\n                                    [results]=\\\"exercisesSets\\\"\\n                                    legendTitle=\\\"Muscle Groups\\\"\\n                                    [legend]=\\\"true\\\"\\n                                    [showDataLabel]=\\\"false\\\"\\n                                    [showXAxisLabel]=\\\"false\\\"\\n                                    [showGridLines]=\\\"true\\\"\\n                                    [showYAxisLabel]=\\\"false\\\"\\n                                    [gradient]=\\\"true\\\"\\n                                    [noBarWhenZero]=\\\"true\\\"\\n                                    [roundDomains]=\\\"true\\\"\\n                                    [roundEdges]=\\\"true\\\"\\n                                    [tooltipDisabled]=\\\"false\\\"\\n                                    [trimYAxisTicks]=\\\"false\\\"\\n                                    [customColors]=\\\"customColors\\\"\\n                            >\\n\\n                            </ngx-charts-bar-horizontal>\\n                        </div>\\n                    </div>\\n\\n                    <h3 *ngIf=\\\"workout.exercises && !workout.exercises.length\\\">No added exercises to this workout.</h3>\\n\\n                    <div class=\\\"buttons col-12 mx-auto p-3\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"open(copyWorkoutModal)\\\">\\n                            Copy to My Workouts\\n                        </button>\\n                    </div>\\n\\n\\n                </div>\\n\\n\\n            </div>\\n\\n        </div>\\n\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"card d-inline-flex col-12\\\">\\n    <div class=\\\"card-body\\\">\\n        <h3 class=\\\"card-title\\\">{{workoutPlan.name}}</h3>\\n        <hr/>\\n        <h4 class=\\\"font-weight-light pb-2\\\">Creator: <a class=\\\"card-link\\\" routerLink=\\\"/profile/{{workoutPlan.creator.username}}\\\">{{workoutPlan.creator.username}}</a></h4>\\n        <hr/>\\n<!--        <div class=\\\"table-wrapper pb-5 pr-3 pl-1\\\">-->\\n<!--            <table class=\\\"table table-striped table-hover mb-4\\\">-->\\n<!--                <thead>-->\\n<!--                <tr *ngFor=\\\"let workout of workoutPlan.workouts\\\">-->\\n<!--                    <th colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>{{workout.orderIndex}}. {{workout.workout.name}}</h5></th>-->\\n<!--                </tr>-->\\n<!--                </thead>-->\\n<!--            </table>-->\\n<!--        </div>-->\\n        <div class=\\\"accordion\\\" id=\\\"accordionExample\\\">\\n            <div class=\\\"\\\" *ngFor=\\\"let workout of workoutPlan.workouts; let i = index\\\">\\n                <div class=\\\"header\\\" [id]=\\\"workout.id\\\">\\n                    <h2 class=\\\"mb-0\\\">\\n                        <button class=\\\"btn btn-link collapse show\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#collapse' + workout.id + workoutPlan.id\\\" aria-expanded=\\\"true\\\" [attr.aria-controls]=\\\"'collapse' + workout.id + workoutPlan.id\\\">\\n                            {{workout.orderIndex}}. {{workout.workout.name}}\\n                        </button>\\n                    </h2>\\n                </div>\\n                <div [id]=\\\"'collapse' + workout.id + workoutPlan.id\\\" class=\\\"collapse\\\" [attr.aria-labelledby]=\\\"workout.id\\\" data-parent=\\\"#accordionExample\\\">\\n                    <div class=\\\"body\\\">\\n                        <table class=\\\"table table-striped table-hover\\\">\\n                            <thead>\\n                            <tr *ngIf=\\\"workout.workout.exercises && !workout.workout.exercises.length\\\">\\n                                <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n                            </tr>\\n                            <tr *ngIf=\\\"workout.workout.exercises && workout.workout.exercises.length\\\">\\n                                <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                                <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise</th>\\n                                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n\\n                            <tr *ngFor=\\\"let exercise of workout.workout.exercises\\\">\\n                                <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                                <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                                <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                                <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n        <hr class=\\\"mb-5\\\"/>\\n        <div class=\\\"buttons-wrapper left\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"copyToMyWorkoutPlansHandler(workoutPlan.id)\\\">Copy To My Plans\\n            </button>\\n        </div>\\n        <div class=\\\"buttons-wrapper right\\\">\\n            <a routerLink=\\\"/workout-plans/details/{{workoutPlan.id}}\\\" class=\\\"btn btn-sm btn-info\\\">Details</a>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n\\n    <ng-template #copyWorkoutModal let-modal>\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Copy Workout Plan To My Workout Plans</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <form #createWorkoutForm=\\\"ngForm\\\">\\n                <h5 class=\\\"text-center\\\">{{workoutPlan.name}}</h5>\\n                <table class=\\\"table table-striped table-hover mb-4 mx-auto\\\"\\n                       *ngFor=\\\"let workout of workoutPlan.workouts\\\">\\n                    <thead>\\n                    <tr>\\n                        <th colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>{{workout.orderIndex}}. {{workout.workout.name}}</h5></th>\\n                    </tr>\\n                    <tr *ngIf=\\\"workout.workout.exercises && !workout.workout.exercises.length\\\">\\n                        <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n                    </tr>\\n                    <tr *ngIf=\\\"workout.workout.exercises && workout.workout.exercises.length\\\">\\n                        <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise name</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                        <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n\\n                    <tr *ngFor=\\\"let exercise of workout.workout.exercises\\\">\\n                        <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                        <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Copy to My Workout Plans</button>\\n        </div>\\n    </ng-template>\\n\\n\\n    <div class=\\\"jumbotron\\\">\\n        <img src=\\\"assets/static/images/logo.png\\\" height=\\\"300px\\\" class=\\\"d-inline-block align-center\\\" alt=\\\"\\\">\\n        <h1 class=\\\"display-4\\\">Workout Details</h1>\\n        <hr class=\\\"my-2\\\"/>\\n        <div class=\\\"container pt-4\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"workout-plan-container col-lg-9 mx-auto\\\">\\n                    <div class=\\\"exercise-intro mt-4\\\">\\n                        <h2 class=\\\"display-4 d-block mx-auto font-weight-bolder\\\">{{workoutPlan.name}}</h2>\\n                    </div>\\n\\n                    <hr class=\\\"my-4\\\"/>\\n\\n                    <h3 class=\\\"font-weight-light pb-3\\\">Creator: <a class=\\\"card-link\\\"\\n                                                                   routerLink=\\\"/profile/{{workoutPlan.creator.username}}\\\">{{workoutPlan.creator.username}}</a>\\n                    </h3>\\n\\n                    <table class=\\\"table table-striped table-hover mb-4\\\"\\n                           *ngFor=\\\"let workout of workoutPlan.workouts\\\">\\n                        <h4 class=\\\"order-index-workout font-weight-bold font-italic\\\">{{workout.orderIndex}}</h4>\\n                        <thead>\\n                        <tr>\\n                            <th colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5><a\\n                                    routerLink=\\\"/workouts/details/{{workout.workout.id}}\\\">{{workout.workout.name}}</a>\\n                            </h5></th>\\n                        </tr>\\n                        <tr *ngIf=\\\"workout.workout.exercises && !workout.workout.exercises.length\\\">\\n                            <td colspan=\\\"5\\\" class=\\\"py-auto\\\"><h5>No added exercises in this workout.</h5></td>\\n                        </tr>\\n                        <tr *ngIf=\\\"workout.workout.exercises && workout.workout.exercises.length\\\">\\n                            <th scope=\\\"col\\\" style=\\\"width: 10%\\\">Order</th>\\n                            <th scope=\\\"col\\\" style=\\\"width: 30%\\\">Exercise name</th>\\n                            <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Reps</th>\\n                            <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sets</th>\\n                            <th scope=\\\"col\\\" style=\\\"width: 20%;\\\"></th>\\n                        </tr>\\n                        </thead>\\n                        <tbody *ngIf=\\\"workout.workout.exercises && workout.workout.exercises.length\\\">\\n\\n                        <tr *ngFor=\\\"let exercise of workout.workout.exercises\\\">\\n                            <td class=\\\"align-middle\\\">{{exercise.orderIndex}}</td>\\n                            <td class=\\\"align-middle\\\">{{exercise.exercise.name}}</td>\\n                            <td class=\\\"align-middle\\\">{{exercise.reps}}</td>\\n                            <td class=\\\"align-middle\\\">{{exercise.sets}}</td>\\n                            <td>\\n                                <button type=\\\"button\\\" routerLink=\\\"/exercises/details/{{exercise.exercise.id}}\\\"\\n                                        class=\\\"btn btn-primary mr-2\\\"><i class=\\\"far fa-eye\\\"></i></button>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n\\n                    <h3 class=\\\"mx-auto font-weight-light\\\">Sets per Muscle Group</h3>\\n\\n                    <div class=\\\"chart-container row align-middle my-4\\\">\\n                        <ngx-charts-bar-horizontal\\n                                [view]=\\\"[800, exercisesSets.length < 8 ? 250 : 500]\\\"\\n                                [animations]=\\\"true\\\"\\n                                [xAxis]=\\\"true\\\"\\n                                [yAxis]=\\\"true\\\"\\n                                [results]=\\\"exercisesSets\\\"\\n                                legendTitle=\\\"Muscle Groups\\\"\\n                                [legend]=\\\"true\\\"\\n                                [showDataLabel]=\\\"false\\\"\\n                                [showXAxisLabel]=\\\"false\\\"\\n                                [showGridLines]=\\\"true\\\"\\n                                [showYAxisLabel]=\\\"false\\\"\\n                                [gradient]=\\\"true\\\"\\n                                [noBarWhenZero]=\\\"true\\\"\\n                                [roundDomains]=\\\"true\\\"\\n                                [roundEdges]=\\\"true\\\"\\n                                [tooltipDisabled]=\\\"false\\\"\\n                                [trimYAxisTicks]=\\\"false\\\"\\n                                [customColors]=\\\"customColors\\\"\\n                        >\\n\\n                        </ngx-charts-bar-horizontal>\\n                    </div>\\n\\n                    <div class=\\\"buttons col-12 mx-auto p-3\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"open(copyWorkoutModal)\\\">\\n                            Copy to My Workout Plans\\n                        </button>\\n                    </div>\\n\\n                </div>\\n\\n\\n            </div>\\n\\n\\n        </div>\\n\\n    </div>\\n\\n</div>\\n\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {IndexComponent} from './index/index.component';\r\nimport {AllExercisesComponent} from './exercise/all-exercises/all-exercises.component';\r\nimport {CreateExerciseComponent} from './exercise/create-exercise/create-exercise.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {RegisterComponent} from './user/register/register.component';\r\nimport {SigninComponent} from './user/signin/signin.component';\r\nimport {EditFitnessProfileComponent} from \"./home/edit-fitness-profile/edit-fitness-profile.component\";\r\nimport {MyWorkoutsComponent} from \"./workout/my-workouts/my-workouts.component\";\r\nimport {NoSelectedWorkoutComponent} from \"./workout/my-workouts/no-selected-workout/no-selected-workout.component\";\r\nimport {SelectedWorkoutComponent} from \"./workout/my-workouts/selected-workout/selected-workout.component\";\r\nimport {ExerciseDetailsComponent} from \"./exercise/exercise-details/exercise-details.component\";\r\nimport {EditSelectedWorkoutComponent} from \"./workout/my-workouts/edit-selected-workout/edit-selected-workout.component\";\r\nimport {AllWorkoutsComponent} from \"./workout/all-workouts/all-workouts.component\";\r\nimport {UserProfileComponent} from \"./user/user-profile/user-profile.component\";\r\nimport {WorkoutDetailsComponent} from \"./workout/workout-details/workout-details.component\";\r\nimport {MyWorkoutPlansComponent} from \"./workout/my-workout-plans/my-workout-plans.component\";\r\nimport {NoSelectedWorkoutPlanComponent} from \"./workout/my-workout-plans/no-selected-workout-plan/no-selected-workout-plan.component\";\r\nimport {SelectedWorkoutPlanComponent} from \"./workout/my-workout-plans/selected-workout-plan/selected-workout-plan.component\";\r\nimport {AllWorkoutPlansComponent} from \"./workout/all-workout-plans/all-workout-plans.component\";\r\nimport {WorkoutPlanDetailsComponent} from \"./workout/workout-plan-details/workout-plan-details.component\";\r\nimport {SearchFoodComponent} from \"./food/search-food/search-food.component\";\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    {path: '', pathMatch: 'full', component: IndexComponent},\r\n    {path: 'exercises/all', component: AllExercisesComponent},\r\n    {path: 'exercises/create', component: CreateExerciseComponent},\r\n    {path: 'exercises/details/:id', component: ExerciseDetailsComponent},\r\n    {path: 'home', component: HomeComponent},\r\n    {path: 'register', component: RegisterComponent},\r\n    {path: 'signin', component: SigninComponent},\r\n    {path: 'fitness-profile/edit', component: EditFitnessProfileComponent},\r\n    {\r\n        path: 'my-workouts', component: MyWorkoutsComponent, children: [\r\n            {path: '', component: NoSelectedWorkoutComponent},\r\n            {path: ':id', component: SelectedWorkoutComponent},\r\n        ]\r\n    }, {\r\n        path: 'my-workout-plans', component: MyWorkoutPlansComponent, children: [\r\n            {path: '', component: NoSelectedWorkoutPlanComponent},\r\n            {path: ':id', component: SelectedWorkoutPlanComponent},\r\n        ]\r\n    },\r\n    {path: 'workouts/all', component: AllWorkoutsComponent},\r\n    {path: 'workouts/details/:id', component: WorkoutDetailsComponent},\r\n    {path: 'workout-plans/all', component: AllWorkoutPlansComponent},\r\n    {path: 'workout-plans/details/:id', component: WorkoutPlanDetailsComponent},\r\n    {path: 'foods/search', component: SearchFoodComponent},\r\n    {path: 'profile/:username', component: UserProfileComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n\n  constructor(private authService: AuthService) {\n\n  }\n\n\n  ngOnInit(): void {\n    this.authService.autoLogin();\n  }\n}\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {HomeComponent} from './home/home.component';\nimport {IndexComponent} from './index/index.component';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {FooterComponent} from './footer/footer.component';\nimport {CreateExerciseComponent} from './exercise/create-exercise/create-exercise.component';\nimport {MuscleSelectorComponent} from './muscle-selector/muscle-selector.component';\nimport {GuestNavbarComponent} from './navbar/guest-navbar/guest-navbar.component';\nimport {LoggedNavbarComponent} from './navbar/logged-navbar/logged-navbar.component';\nimport {FoodComponent} from './food/food.component';\nimport {AllExercisesComponent} from './exercise/all-exercises/all-exercises.component';\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from '@angular/common/http';\nimport {ExerciseCardComponent} from './exercise/exercise-card/exercise-card.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {GetConstantViewNamePipe} from './get-constant-view-name.pipe';\nimport {FormsModule} from '@angular/forms';\nimport {AppRoutingModule} from './app-routing.module';\nimport {RegisterComponent} from './user/register/register.component';\nimport {SigninComponent} from './user/signin/signin.component';\nimport {CreateFitnessProfileComponent} from './home/create-fitness-profile/create-fitness-profile.component';\nimport {AuthInterceptorService} from './auth/auth-interceptor.service';\nimport {MyProfileComponent} from './home/my-profile/my-profile.component';\nimport {EditFitnessProfileComponent} from './home/edit-fitness-profile/edit-fitness-profile.component';\nimport {MyWorkoutsComponent} from './workout/my-workouts/my-workouts.component';\nimport {NoSelectedWorkoutComponent} from './workout/my-workouts/no-selected-workout/no-selected-workout.component';\nimport {SelectedWorkoutComponent} from './workout/my-workouts/selected-workout/selected-workout.component';\nimport {ExerciseDetailsComponent} from './exercise/exercise-details/exercise-details.component';\nimport {SafePipe} from \"./safe.pipe\";\nimport {NgxYoutubePlayerModule} from \"ngx-youtube-player\";\nimport { EditSelectedWorkoutComponent } from './workout/my-workouts/edit-selected-workout/edit-selected-workout.component';\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport { AllWorkoutsComponent } from './workout/all-workouts/all-workouts.component';\nimport { WorkoutCardComponent } from './workout/workout-card/workout-card.component';\nimport { UserProfileComponent } from './user/user-profile/user-profile.component';\nimport {NgxChartsModule, PieChartModule} from \"@swimlane/ngx-charts\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { WorkoutDetailsComponent } from './workout/workout-details/workout-details.component';\nimport { MyWorkoutPlansComponent } from './workout/my-workout-plans/my-workout-plans.component';\nimport { NoSelectedWorkoutPlanComponent } from './workout/my-workout-plans/no-selected-workout-plan/no-selected-workout-plan.component';\nimport { SelectedWorkoutPlanComponent } from './workout/my-workout-plans/selected-workout-plan/selected-workout-plan.component';\nimport { AllWorkoutPlansComponent } from './workout/all-workout-plans/all-workout-plans.component';\nimport { WorkoutPlanDetailsComponent } from './workout/workout-plan-details/workout-plan-details.component';\nimport { WorkoutPlanCardComponent } from './workout/workout-plan-card/workout-plan-card.component';\nimport { SearchFoodComponent } from './food/search-food/search-food.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavbarComponent,\n        HomeComponent,\n        IndexComponent,\n        FooterComponent,\n        CreateExerciseComponent,\n        MuscleSelectorComponent,\n        GuestNavbarComponent,\n        LoggedNavbarComponent,\n        FoodComponent,\n        AllExercisesComponent,\n        ExerciseCardComponent,\n        GetConstantViewNamePipe,\n        RegisterComponent,\n        SigninComponent,\n        CreateFitnessProfileComponent,\n        MyProfileComponent,\n        EditFitnessProfileComponent,\n        MyWorkoutsComponent,\n        NoSelectedWorkoutComponent,\n        SelectedWorkoutComponent,\n        ExerciseDetailsComponent,\n        SafePipe,\n        EditSelectedWorkoutComponent,\n        AllWorkoutsComponent,\n        WorkoutCardComponent,\n        UserProfileComponent,\n        WorkoutDetailsComponent,\n        MyWorkoutPlansComponent,\n        NoSelectedWorkoutPlanComponent,\n        SelectedWorkoutPlanComponent,\n        AllWorkoutPlansComponent,\n        WorkoutPlanDetailsComponent,\n        WorkoutPlanCardComponent,\n        SearchFoodComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FontAwesomeModule,\n        NgbModule,\n        FormsModule,\n        AppRoutingModule,\n        NgxYoutubePlayerModule,\n        DragDropModule,\n        PieChartModule,\n        BrowserAnimationsModule,\n        NgxChartsModule\n    ],\n    providers: [SafePipe, GetConstantViewNamePipe, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptorService,\n        multi: true\n    }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpParams, HttpHeaders\n} from '@angular/common/http';\nimport { take, exhaustMap } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return this.authService.user.pipe(\n      take(1),\n      exhaustMap(user => {\n        if (!user) {\n          return next.handle(req);\n        }\n        const modifiedReq = req.clone({\n          headers: new HttpHeaders().append(\"Authorization\", user.token)\n        });\n        return next.handle(modifiedReq);\n      })\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {catchError, exhaustMap, take, tap} from 'rxjs/operators';\nimport {throwError, BehaviorSubject} from 'rxjs';\n\nimport {UserAuthModel} from './user-auth.model';\nimport {SigninBindingModel} from '../user/signin/signin-binding.model';\n\nexport interface AuthResponseData {\n  kind: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered?: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class AuthService {\n  user = new BehaviorSubject<UserAuthModel>(null);\n  private tokenExpirationTimer: any;\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  register(formData: FormData) {\n\n    return this.http.post(\"http://localhost:8000/users/register\", formData);\n  }\n\n  signin(signinBindingModel: SigninBindingModel) {\n\n    const headers = new HttpHeaders({\n      'Content-Type':  'application/json',\n    });\n\n    return this.http.post(\"http://localhost:8000/users/signin\", signinBindingModel, {headers: headers, observe: \"response\"});\n  }\n\n\n  autoLogin() {\n    const userData: {\n      userId: string,\n      role: string,\n      rememberMe: boolean,\n      _token: string;\n      _tokenExpirationDate: string;\n    } = JSON.parse(localStorage.getItem('userData'));\n    if (!userData) {\n      return;\n    }\n\n    if (!userData.rememberMe) {\n        this.logout();\n        return;\n    }\n\n    const loadedUser = new UserAuthModel(\n      userData.userId,\n      userData.role,\n      userData.rememberMe,\n      userData._token,\n      new Date(userData._tokenExpirationDate)\n    );\n\n    if (loadedUser.token) {\n      this.user.next(loadedUser);\n      const expirationDuration =\n        new Date(userData._tokenExpirationDate).getTime() -\n        new Date().getTime();\n\n      if (new Date(userData._tokenExpirationDate) < new Date()) {\n        this.logout();\n        return;\n      }\n\n      this.autoLogout(expirationDuration);\n    }\n  }\n\n  logout() {\n    this.user.next(null);\n    this.router.navigate(['/']);\n    localStorage.removeItem('userData');\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n    }\n    this.tokenExpirationTimer = null;\n  }\n\n  autoLogout(expirationDuration: number) {\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.logout();\n    }, expirationDuration);\n  }\n\n\n  public handleAuthentication(token: string, rememberMe: boolean) {\n\n\n    const payload = JSON.parse(atob((token.replace('Bearer: ', '').split('.')[1])));\n    const firstName = payload.firstName;\n    const userId = payload.userId;\n    const userRole = payload.role;\n    const tokenExpiresInMS = payload.exp;\n    const pictureUrl = payload.profilePictureUrl;\n\n    const expirationDate = new Date(new Date().getTime() + tokenExpiresInMS);\n\n\n    const user = new UserAuthModel(userId, userRole, rememberMe, token, expirationDate);\n    this.user.next(user);\n    this.autoLogout(tokenExpiresInMS);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n\n\n  // private handleError(errorRes: HttpErrorResponse) {\n  //   let errorMessage = 'An unknown error occurred!';\n  //   if (!errorRes.error || !errorRes.error.error) {\n  //     return throwError(errorMessage);\n  //   }\n  //   switch (errorRes.error.error.message) {\n  //     case 'EMAIL_EXISTS':\n  //       errorMessage = 'This email exists already';\n  //       break;\n  //     case 'EMAIL_NOT_FOUND':\n  //       errorMessage = 'This email does not exist.';\n  //       break;\n  //     case 'INVALID_PASSWORD':\n  //       errorMessage = 'This password is not correct.';\n  //       break;\n  //   }\n  //   return throwError(errorMessage);\n  // }\n}\n","export class UserAuthModel {\n  constructor(\n    public userId: string,\n    public role: string,\n    private rememberMe: boolean,\n    private _token: string,\n    private _tokenExpirationDate: Date\n  ) {}\n\n  get token() {\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\n      return null;\n    }\n    return this._token;\n  }\n}\n","export default \".filter-block {\\r\\n\\r\\n}\\r\\n\\r\\n.form-label-group{\\r\\n  background: rgba(255, 255, 255, 0.5);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvZXhlcmNpc2UvYWxsLWV4ZXJjaXNlcy9hbGwtZXhlcmNpc2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7RUFDRSxvQ0FBb0M7QUFDdEMiLCJmaWxlIjoic3JjL21haW4vd2ViYXBwL2FwcC9leGVyY2lzZS9hbGwtZXhlcmNpc2VzL2FsbC1leGVyY2lzZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWx0ZXItYmxvY2sge1xyXG5cclxufVxyXG5cclxuLmZvcm0tbGFiZWwtZ3JvdXB7XHJcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Exercise} from '../exercise.model';\nimport {ExerciseService} from '../exercise.service';\nimport {SelectedMuscleGroupsModel} from '../selected-muscle-groups.model';\nimport {WorkoutExerciseBindingModel} from \"./workout-exercise-binding.model\";\nimport {Workout} from \"../../workout/workout.model\";\nimport {WorkoutService} from \"../../workout/workout.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {WorkoutBindingModel} from \"../../workout/workout-binding-model\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-all-exercises',\n  templateUrl: './all-exercises.component.html',\n  styleUrls: ['./all-exercises.component.css']\n})\n\n\nexport class AllExercisesComponent implements OnInit {\n\n  filteredExercises: Exercise[] = [];\n  allExercises: Exercise[] = [];\n  page: number = 1;\n  pageSize: number = 6;\n\n  muscleGroupFilter: SelectedMuscleGroupsModel;\n  focusedMuscleGroup: string;\n\n  workoutExerciseBindingModel: WorkoutExerciseBindingModel;\n  userWorkouts: Workout[];\n  selectedWorkoutId: string;\n  selectedExerciseForModal: Exercise;\n\n\n  constructor(private exerciseService: ExerciseService, private workoutService: WorkoutService, private modalService: NgbModal, private router: Router) {\n  }\n\n  ngOnInit() {\n\n    this.muscleGroupFilter = new SelectedMuscleGroupsModel();\n    this.workoutExerciseBindingModel = new WorkoutExerciseBindingModel();\n    this.selectedExerciseForModal = new Exercise();\n\n\n    this.exerciseService.fetchAllExercises()\n      .subscribe((data: Exercise[]) => {\n        this.allExercises = data;\n        this.filteredExercises = this.allExercises.slice();\n      });\n\n    this.fetchUserWorkouts();\n\n  }\n\n  fetchUserWorkouts() {\n    this.workoutService.getLoggedInUserWorkouts().subscribe((workouts: Workout[]) => {\n      this.userWorkouts = workouts;\n      this.selectedWorkoutId = this.userWorkouts[0].id;\n    })\n  }\n\n  open(content, exerciseId) {\n\n    this.selectedExerciseForModal = this.allExercises.find(e => e.id === exerciseId);\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n\n\n      this.workoutExerciseBindingModel.exerciseId = exerciseId;\n      this.workoutService.addWorkoutExerciseToWorkout(this.workoutExerciseBindingModel, this.selectedWorkoutId).subscribe((workout: Workout) => {\n        this.router.navigate(['my-workouts', workout.id])\n      });\n      this.selectedWorkoutId = this.userWorkouts[0].id;\n      this.workoutExerciseBindingModel = new WorkoutExerciseBindingModel();\n    }, (reason) => {\n    });\n  }\n\n  onMuscleMouseEnter(muscleType: string) {\n    this.focusedMuscleGroup = muscleType;\n  }\n\n  resetSelectedMuscleGroup() {\n    this.focusedMuscleGroup = undefined;\n  }\n\n  onMuscleClick(muscleType: string) {\n    this.muscleGroupFilter[muscleType] = !this.muscleGroupFilter[muscleType];\n    this.handleFilter()\n  }\n\n  handleFilter() {\n    const filterModeOn = [...Object.values(this.muscleGroupFilter)].some(b => b === true);\n\n    if (filterModeOn) {\n\n      const involvingMuscles = Object.keys(this.muscleGroupFilter).filter(m => this.muscleGroupFilter[m] === true);\n\n\n      this.filteredExercises =\n        this.allExercises\n          .slice()\n          .filter(e => {\n            const exerciseInvolvingMuscles = [...e.assistingMuscleGroups];\n            exerciseInvolvingMuscles.push(e.majorMuscleGroup);\n\n            return involvingMuscles.every(m => exerciseInvolvingMuscles.includes(m));\n          });\n\n    } else {\n      this.filteredExercises = this.allExercises.slice();\n    }\n\n  }\n\n    onClearFilter() {\n      this.muscleGroupFilter = new SelectedMuscleGroupsModel();\n      this.handleFilter();\n    }\n}\n","export class WorkoutExerciseBindingModel {\r\n  reps: number;\r\n  sets: number;\r\n  exerciseId: string;\r\n\r\n  constructor() {\r\n    this.reps = 1;\r\n    this.sets = 1;\r\n    this.exerciseId = null;\r\n  }\r\n\r\n}\r\n","export default \".card-signin .card-img-left {\\r\\n  min-width: 60%;\\r\\n}\\r\\n\\r\\nsvg {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvZXhlcmNpc2UvY3JlYXRlLWV4ZXJjaXNlL2NyZWF0ZS1leGVyY2lzZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2QiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL2V4ZXJjaXNlL2NyZWF0ZS1leGVyY2lzZS9jcmVhdGUtZXhlcmNpc2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLXNpZ25pbiAuY2FyZC1pbWctbGVmdCB7XHJcbiAgbWluLXdpZHRoOiA2MCU7XHJcbn1cclxuXHJcbnN2ZyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG5cclxuXHJcbiJdfQ== */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {ExerciseBindingModel} from '../exercise-binding.model';\nimport {ExerciseService} from '../exercise.service';\nimport {Router} from '@angular/router';\nimport {SelectedMuscleGroupsModel} from '../selected-muscle-groups.model';\nimport {Title} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-create-exercise',\n  templateUrl: './create-exercise.component.html',\n  styleUrls: ['./create-exercise.component.css']\n})\nexport class CreateExerciseComponent implements OnInit {\n\n  exerciseBindingModel: ExerciseBindingModel;\n\n  assistingMuscleGroupsSelected: SelectedMuscleGroupsModel;\n  pictureFile: File;\n  focusedMuscleGroup: string;\n  @ViewChild('chooseFileLabel', {static: false}) chooseFileLabelRef: ElementRef;\n  loading = false;\n\n\n  constructor(private exerciseService: ExerciseService, private router: Router, private titleService: Title) {\n  }\n\n  ngOnInit() {\n    this.exerciseBindingModel = new ExerciseBindingModel();\n    this.assistingMuscleGroupsSelected = new SelectedMuscleGroupsModel();\n    this.titleService.setTitle( this.titleService.getTitle() + '- Create Exercise' );\n  }\n\n  onMuscleClick(muscleType: string): void {\n    if (!this.assistingMuscleGroupsSelected[muscleType] && this.exerciseBindingModel.majorMuscleGroup !== muscleType) {\n      this.assistingMuscleGroupsSelected[muscleType] = true;\n    } else if (this.exerciseBindingModel.majorMuscleGroup !== muscleType) {\n      this.assistingMuscleGroupsSelected[muscleType] = false;\n      this.exerciseBindingModel.majorMuscleGroup = muscleType;\n    } else {\n      this.exerciseBindingModel.majorMuscleGroup = undefined;\n    }\n  }\n\n  onMuscleMouseEnter(muscleType: string): void {\n    this.focusedMuscleGroup = muscleType;\n  }\n\n  resetSelectedMuscleGroup(): void {\n    this.focusedMuscleGroup = undefined;\n  }\n\n  setAssistingMuscleGroupsToBindingModel(): void {\n    this.exerciseBindingModel.assistingMuscleGroups = [];\n\n    for (const muscleType in this.assistingMuscleGroupsSelected) {\n      if (this.assistingMuscleGroupsSelected[muscleType]) {\n        this.exerciseBindingModel.assistingMuscleGroups.push(muscleType);\n      }\n    }\n  }\n\n  onSubmit() {\n\n    this.loading = true;\n\n    this.setAssistingMuscleGroupsToBindingModel();\n\n    const formData = new FormData();\n    const exerciseBlob = new Blob([JSON.stringify(this.exerciseBindingModel)], {type: 'application/json'});\n\n    formData.append('exerciseBindingModel', exerciseBlob);\n    formData.append('file', this.pictureFile);\n\n    this.exerciseService.createExercise(formData)\n      .subscribe(data => {\n        this.loading = false;\n        this.router.navigate(['/exercises/all'])});\n\n\n  }\n\n  handleFileInput(files: FileList) {\n\n    this.pictureFile = files[0];\n    this.chooseFileLabelRef.nativeElement.innerHTML = this.pictureFile.name;\n\n  }\n\n\n  handleAssistingMuscleGroupsChange(event: any) {\n    const muscleType = event.target.value;\n    this.assistingMuscleGroupsSelected[muscleType] = !this.assistingMuscleGroupsSelected[muscleType];\n  }\n\n  handleMajorMuscleGroupChange(event: any) {\n    const muscleType = event.target.value;\n    this.assistingMuscleGroupsSelected[muscleType] = false;\n  }\n}\n","export class ExerciseBindingModel {\r\n  name: string;\r\n  instructions: string;\r\n  youtubeURL: string;\r\n  majorMuscleGroup: string;\r\n  assistingMuscleGroups: string[];\r\n}\r\n","export default \".card {\\r\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n  border-radius: 30px;\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.thumbnail {\\r\\n  position: relative;\\r\\n  width: 350px;\\r\\n  height: 250px;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.thumbnail img {\\r\\n  min-height: 250px;\\r\\n  margin: auto\\r\\n}\\r\\n\\r\\n.btn {\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n.buttons-wrapper {\\r\\n  position: absolute;\\r\\n  bottom: 1em;\\r\\n}\\r\\n\\r\\n.buttons-wrapper.right {\\r\\n  right: 1em;\\r\\n}\\r\\n\\r\\n.buttons-wrapper.left {\\r\\n  left: 1em;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvZXhlcmNpc2UvZXhlcmNpc2UtY2FyZC9leGVyY2lzZS1jYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1Q0FBdUM7RUFDdkMsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakI7QUFDRjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxTQUFTO0FBQ1giLCJmaWxlIjoic3JjL21haW4vd2ViYXBwL2FwcC9leGVyY2lzZS9leGVyY2lzZS1jYXJkL2V4ZXJjaXNlLWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcclxuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLnRodW1ibmFpbCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAzNTBweDtcclxuICBoZWlnaHQ6IDI1MHB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi50aHVtYm5haWwgaW1nIHtcclxuICBtaW4taGVpZ2h0OiAyNTBweDtcclxuICBtYXJnaW46IGF1dG9cclxufVxyXG5cclxuLmJ0biB7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuLmJ1dHRvbnMtd3JhcHBlciB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJvdHRvbTogMWVtO1xyXG59XHJcblxyXG4uYnV0dG9ucy13cmFwcGVyLnJpZ2h0IHtcclxuICByaWdodDogMWVtO1xyXG59XHJcblxyXG4uYnV0dG9ucy13cmFwcGVyLmxlZnQge1xyXG4gIGxlZnQ6IDFlbTtcclxufVxyXG4iXX0= */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Exercise} from '../exercise.model';\nimport {GetConstantViewNamePipe} from '../../get-constant-view-name.pipe';\n\n@Component({\n  selector: 'app-exercise-card',\n  templateUrl: './exercise-card.component.html',\n  styleUrls: ['./exercise-card.component.css']\n})\nexport class ExerciseCardComponent implements OnInit {\n\n  @Input() exercise: Exercise;\n  @Output() modalOpen: EventEmitter<any> = new EventEmitter();\n\n  assistingMuscleGroups: string[];\n\n  constructor(private musclePipe: GetConstantViewNamePipe) { }\n\n\n\n  ngOnInit() {\n    this.assistingMuscleGroups = this.exercise.assistingMuscleGroups.map(a => this.musclePipe.transform(a))\n  }\n\n\n  addToWorkoutHandler(id: string) {\n    this.modalOpen.emit(id);\n  }\n}\n","export default \".exercise-container {\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n}\\r\\n\\r\\n.exercise-container .exercise-intro img {\\r\\n    border-radius: 40px;\\r\\n}\\r\\n\\r\\n.exercise-intro img {\\r\\n    max-height: 300px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvZXhlcmNpc2UvZXhlcmNpc2UtZGV0YWlscy9leGVyY2lzZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx1Q0FBdUM7SUFDdkMsb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9tYWluL3dlYmFwcC9hcHAvZXhlcmNpc2UvZXhlcmNpc2UtZGV0YWlscy9leGVyY2lzZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhlcmNpc2UtY29udGFpbmVyIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTtcclxufVxyXG5cclxuLmV4ZXJjaXNlLWNvbnRhaW5lciAuZXhlcmNpc2UtaW50cm8gaW1nIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDQwcHg7XHJcbn1cclxuXHJcbi5leGVyY2lzZS1pbnRybyBpbWcge1xyXG4gICAgbWF4LWhlaWdodDogMzAwcHg7XHJcbn1cclxuXHJcblxyXG5cclxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {ExerciseService} from \"../exercise.service\";\nimport {Exercise} from \"../exercise.model\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\nimport {WorkoutExerciseBindingModel} from \"../all-exercises/workout-exercise-binding.model\";\nimport {Workout} from \"../../workout/workout.model\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {WorkoutService} from \"../../workout/workout.service\";\n\n@Component({\n    selector: 'app-exercise-details',\n    templateUrl: './exercise-details.component.html',\n    styleUrls: ['./exercise-details.component.css']\n})\nexport class ExerciseDetailsComponent implements OnInit {\n\n    selectedExercise: Exercise;\n    youtubeVideoId: string;\n\n    workoutExerciseBindingModel: WorkoutExerciseBindingModel;\n    userWorkouts: Workout[];\n    selectedWorkoutId: string;\n\n    constructor(private exerciseService: ExerciseService,\n                private route: ActivatedRoute,\n                private modalService: NgbModal,\n                private workoutService: WorkoutService,\n                private router: Router) {\n    }\n\n    ngOnInit() {\n\n        this.selectedExercise = new Exercise();\n        this.workoutExerciseBindingModel = new WorkoutExerciseBindingModel();\n\n        this.route.params.subscribe((params: Params) => {\n            if (params['id']) {\n                this.exerciseService.getExerciseById(params['id']).subscribe((exercise: Exercise) => {\n                    this.selectedExercise = exercise;\n                    this.youtubeVideoId = this.getYoutubeIdFromUrl(exercise.youtubeURL);\n                    this.workoutExerciseBindingModel.exerciseId = exercise.id;\n                });\n            }\n        });\n\n\n        this.fetchUserWorkouts();\n    }\n\n    fetchUserWorkouts() {\n        this.workoutService.getLoggedInUserWorkouts().subscribe((workouts: Workout[]) => {\n            this.userWorkouts = workouts;\n            this.selectedWorkoutId = this.userWorkouts[0].id;\n        })\n    }\n\n    getYoutubeIdFromUrl(url: string) {\n        const regexp = /http(?:s?):\\/\\/(?:www\\.)?youtu(?:be\\.com\\/watch\\?v=|\\.be\\/)([\\w\\-\\_]*)(&(amp;)?[\\w\\?‌​=]*)?/g;\n        return regexp.exec(url)[1];\n    }\n\n    open(content) {\n\n\n        this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n\n\n            this.workoutService.addWorkoutExerciseToWorkout(this.workoutExerciseBindingModel, this.selectedWorkoutId).subscribe((workout: Workout) => {\n                this.router.navigate(['my-workouts', workout.id])\n            });\n            this.selectedWorkoutId = this.userWorkouts[0].id;\n            this.workoutExerciseBindingModel = new WorkoutExerciseBindingModel();\n        }, (reason) => {\n        });\n    }\n\n    onPlayerInit(player: YT.Player) {\n        player.getIframe().classList.add('embed-responsive-item');\n    }\n}\n","export class Exercise {\r\n  id: string;\r\n  name: string;\r\n  instructions: string;\r\n  pictureURL: string;\r\n  youtubeURL: string;\r\n  majorMuscleGroup: string;\r\n  assistingMuscleGroups: string[];\r\n\r\n  constructor() {\r\n    this.name = '';\r\n    this.instructions = '';\r\n    this.pictureURL = '';\r\n    this.youtubeURL = '';\r\n    this.majorMuscleGroup = '';\r\n    this.assistingMuscleGroups = [];\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\n\r\nimport {Exercise} from './exercise.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExerciseService {\r\n\r\n  private _exercises: Exercise[] = [];\r\n  private HttpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type':  'application/json',\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  createExercise(formData: FormData) {\r\n\r\n    return this.http.post(\"http://localhost:8000/exercises/create\", formData);\r\n  }\r\n\r\n\r\n  fetchAllExercises() {\r\n    return this.http.get(\"http://localhost:8000/exercises/all\");\r\n  }\r\n\r\n  getExerciseById(exerciseId: string) {\r\n    return this.http.get(\"http://localhost:8000/exercises/details/\" + exerciseId);\r\n  }\r\n\r\n  getExercises() {\r\n    return this._exercises;\r\n  }\r\n\r\n}\r\n","export class SelectedMuscleGroupsModel {\r\n\r\n  biceps: false;\r\n  triceps: false;\r\n  forearm: false;\r\n  latisimus: false;\r\n  erectors: false;\r\n  traps: false;\r\n  chest: false;\r\n  anteriorDeltoid: false;\r\n  lateralDeltoid: false;\r\n  posteriorDeltoid: false;\r\n  hamstrings: false;\r\n  gluteus: false;\r\n  calves: false;\r\n  quadriceps: false;\r\n  abs: false;\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL2Zvb2QvZm9vZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-food',\n  templateUrl: './food.component.html',\n  styleUrls: ['./food.component.css']\n})\nexport class FoodComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Food {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  pictureURL: string;\r\n  proteinPerHundred: number;\r\n  carbohydratesPerHundred: number;\r\n  fatsPerHundred: number;\r\n  calories: number;\r\n\r\n  constructor() {\r\n    this.name = '';\r\n    this.description = '';\r\n    this.pictureURL = '';\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FoodService {\r\n\r\n  applicationTypeHeader: HttpHeaders = new HttpHeaders().append('Content-Type', 'text/plain');\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  fetchFoodsFromDataCentralByFoodName(foodName: string) {\r\n\r\n    return this.http.post('https://api.nal.usda.gov/fdc/v1/search?api_key=BkVA7N1vC11VKz7U8dRSEY2srId3cL4T986gpxbo',\r\n        {\"generalSearchInput\": foodName});\r\n\r\n  }\r\n\r\n  fetchFoodDetailsByFoodId(foodId: string) {\r\n\r\n    console.log(foodId);\r\n\r\n    return this.http.get(`https://api.nal.usda.gov/fdc/v1/${foodId}?api_key=BkVA7N1vC11VKz7U8dRSEY2srId3cL4T986gpxbo`, {headers: this.applicationTypeHeader});\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \".card {\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n    border-radius: 30px;\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n}\\r\\n\\r\\n.results-container {\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.calories {\\r\\n    background: linear-gradient(348deg, rgba(255, 255, 255, 0.5) 0%, rgba(37, 206, 209, 1) 66%);\\r\\n    border-radius: 30px;\\r\\n}\\r\\n\\r\\n.chart-container {\\r\\n    height: 350px;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.macros {\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvZm9vZC9zZWFyY2gtZm9vZC9zZWFyY2gtZm9vZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUNBQXVDO0lBQ3ZDLG1CQUFtQjtJQUNuQixvQ0FBb0M7QUFDeEM7O0FBRUE7SUFDSSxvQ0FBb0M7SUFDcEMsdUNBQXVDO0FBQzNDOztBQUVBO0lBQ0ksMkZBQTJGO0lBQzNGLG1CQUFtQjtBQUN2Qjs7QUFDQTtJQUNJLGFBQWE7SUFDYixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQ0FBZ0M7QUFDcEMiLCJmaWxlIjoic3JjL21haW4vd2ViYXBwL2FwcC9mb29kL3NlYXJjaC1mb29kL3NlYXJjaC1mb29kLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xyXG59XHJcblxyXG4ucmVzdWx0cy1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG59XHJcblxyXG4uY2Fsb3JpZXMge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDM0OGRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpIDAlLCByZ2JhKDM3LCAyMDYsIDIwOSwgMSkgNjYlKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbn1cclxuLmNoYXJ0LWNvbnRhaW5lciB7XHJcbiAgICBoZWlnaHQ6IDM1MHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4ubWFjcm9zIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbn1cclxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {FoodService} from \"../food.service\";\nimport {Food} from \"../food.model\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n    selector: 'app-search-food',\n    templateUrl: './search-food.component.html',\n    styleUrls: ['./search-food.component.css']\n})\nexport class SearchFoodComponent implements OnInit {\n\n    foodSearchResults: Food[];\n    searchFoodName: string;\n\n    selectedFoodForModal: Food;\n\n    page: number = 1;\n    pageSize: number = 6;\n    macroNutrientsData: any[];\n\n\n    constructor(private foodService: FoodService, private modalService: NgbModal) {\n    }\n\n    ngOnInit() {\n    }\n\n    onSearchHandler() {\n        this.foodService.fetchFoodsFromDataCentralByFoodName(this.searchFoodName).subscribe((resp: any) => {\n\n            console.log(resp);\n\n            this.foodSearchResults = [];\n            this.page = 1;\n            resp.foods.forEach(food => {\n                const foodInfo = new Food();\n\n                foodInfo.description = food.description;\n                foodInfo.id = food.fdcId;\n\n                this.foodSearchResults.push(foodInfo);\n\n            })\n\n        })\n    }\n\n    open(content, foodId) {\n\n        this.foodService.fetchFoodDetailsByFoodId(foodId).subscribe((resp: any) => {\n            this.selectedFoodForModal = new Food();\n\n            this.selectedFoodForModal.description = resp.description;\n\n            const foodNutrients = resp.foodNutrients;\n\n            for (const foodNutrient of foodNutrients) {\n\n                switch (foodNutrient.nutrient.id) {\n                    case 1003: this.selectedFoodForModal.proteinPerHundred = foodNutrient.amount; break;\n                    case 1005: this.selectedFoodForModal.carbohydratesPerHundred = foodNutrient.amount; break;\n                    case 1004: this.selectedFoodForModal.fatsPerHundred = foodNutrient.amount; break;\n                }\n\n            }\n\n            this.makeChartDataForMacroNutrients();\n\n            this.selectedFoodForModal.calories = Math.round((4 * this.selectedFoodForModal.proteinPerHundred +\n                4 * this.selectedFoodForModal.carbohydratesPerHundred + 9 * this.selectedFoodForModal.fatsPerHundred) * 100) / 100\n\n        });\n\n        this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {\n        }, (reason) => {\n        });\n    }\n\n    makeChartDataForMacroNutrients() {\n        this.macroNutrientsData = [\n            {\n                \"name\": \"Protein\",\n                \"value\": this.selectedFoodForModal.proteinPerHundred,\n            },\n            {\n                \"name\": \"Carbohydrates\",\n                \"value\": this.selectedFoodForModal.carbohydratesPerHundred,\n            },\n            {\n                \"name\": \"Fats\",\n                \"value\": this.selectedFoodForModal.fatsPerHundred,\n            },\n        ]\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'getConstantViewName'\n})\nexport class GetConstantViewNamePipe implements PipeTransform {\n\n  transform(camelCaseString: string, ...args: any[]): any {\n\n    return camelCaseString\n      .replace(/([A-Z])/g, ' $1')\n      .replace(/^./, function(str) {\n        return str.toUpperCase();\n      });\n  }\n\n}\n","export default \".card-signin.male-fitness-profile .card-img-left {\\r\\n  width: 80%;\\r\\n  background: scroll center url('male-fitness-profile.gif');\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n.card-signin.female-fitness-profile .card-img-left {\\r\\n  width: 80%;\\r\\n  background: scroll center url('female-fitness-profile.gif');\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvaG9tZS9jcmVhdGUtZml0bmVzcy1wcm9maWxlL2NyZWF0ZS1maXRuZXNzLXByb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7RUFDVix5REFBOEY7RUFDOUYsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsVUFBVTtFQUNWLDJEQUFnRztFQUNoRyxzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL21haW4vd2ViYXBwL2FwcC9ob21lL2NyZWF0ZS1maXRuZXNzLXByb2ZpbGUvY3JlYXRlLWZpdG5lc3MtcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtc2lnbmluLm1hbGUtZml0bmVzcy1wcm9maWxlIC5jYXJkLWltZy1sZWZ0IHtcclxuICB3aWR0aDogODAlO1xyXG4gIGJhY2tncm91bmQ6IHNjcm9sbCBjZW50ZXIgdXJsKCdzcmMvbWFpbi93ZWJhcHAvYXNzZXRzL3N0YXRpYy9pbWFnZXMvbWFsZS1maXRuZXNzLXByb2ZpbGUuZ2lmJyk7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxufVxyXG5cclxuLmNhcmQtc2lnbmluLmZlbWFsZS1maXRuZXNzLXByb2ZpbGUgLmNhcmQtaW1nLWxlZnQge1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgYmFja2dyb3VuZDogc2Nyb2xsIGNlbnRlciB1cmwoJ3NyYy9tYWluL3dlYmFwcC9hc3NldHMvc3RhdGljL2ltYWdlcy9mZW1hbGUtZml0bmVzcy1wcm9maWxlLmdpZicpO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbn1cclxuIl19 */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {UserModel} from '../../user/user.model';\nimport {UserService} from '../../user/user.service';\nimport {FitnessProfileModel} from '../../user/fitness-profile.model';\nimport {FitnessProfileBindingModel} from './fitness-profile-binding.model';\nimport {HttpHeaders} from '@angular/common/http';\n\n@Component({\n  selector: 'app-create-fitness-profile',\n  templateUrl: './create-fitness-profile.component.html',\n  styleUrls: ['./create-fitness-profile.component.css']\n})\nexport class CreateFitnessProfileComponent implements OnInit {\n\n  userGender: string;\n  userFirstName: string;\n  fitnessProfileBindingModel: FitnessProfileBindingModel;\n\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit() {\n\n    this.fitnessProfileBindingModel = new FitnessProfileBindingModel();\n\n    this.userService.getLoggedInUserObservable().subscribe(user => {\n      if (user) {\n        this.userGender = user.gender;\n        this.userFirstName = user.firstName;\n      }\n    });\n  }\n\n  onWeightGoalChange(eventTarget: any) {\n\n    if (eventTarget.value === 'maintainWeight' || eventTarget.value === '') {\n      this.fitnessProfileBindingModel.weightChangeRate = '';\n    }\n  }\n\n  onSubmit() {\n\n    this.userService.setFitnessProfileToLoggedInUser(this.fitnessProfileBindingModel).subscribe(data => {\n      if (data) {\n        this.userService.loadLoggedUser();\n      }\n    });\n  }\n}\n","export class FitnessProfileBindingModel {\r\n  weight: number;\r\n  height: number;\r\n  age: number;\r\n  sportsExperience: string;\r\n  activityLevel: string;\r\n  weightGoal: string;\r\n  weightChangeRate: string;\r\n\r\n  constructor() {\r\n    this.sportsExperience = '';\r\n    this.activityLevel = '';\r\n    this.weightGoal = '';\r\n    this.weightChangeRate = '';\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \".card-signin.male-fitness-profile .card-img-left {\\r\\n  width: 80%;\\r\\n  background: scroll center url('male-fitness-profile.gif');\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n.card-signin.female-fitness-profile .card-img-left {\\r\\n  width: 80%;\\r\\n  background: scroll center url('female-fitness-profile.gif');\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvaG9tZS9lZGl0LWZpdG5lc3MtcHJvZmlsZS9lZGl0LWZpdG5lc3MtcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtFQUNWLHlEQUE4RjtFQUM5RixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsMkRBQWdHO0VBQ2hHLHNCQUFzQjtBQUN4QiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL2hvbWUvZWRpdC1maXRuZXNzLXByb2ZpbGUvZWRpdC1maXRuZXNzLXByb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLXNpZ25pbi5tYWxlLWZpdG5lc3MtcHJvZmlsZSAuY2FyZC1pbWctbGVmdCB7XHJcbiAgd2lkdGg6IDgwJTtcclxuICBiYWNrZ3JvdW5kOiBzY3JvbGwgY2VudGVyIHVybCgnc3JjL21haW4vd2ViYXBwL2Fzc2V0cy9zdGF0aWMvaW1hZ2VzL21hbGUtZml0bmVzcy1wcm9maWxlLmdpZicpO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbn1cclxuXHJcbi5jYXJkLXNpZ25pbi5mZW1hbGUtZml0bmVzcy1wcm9maWxlIC5jYXJkLWltZy1sZWZ0IHtcclxuICB3aWR0aDogODAlO1xyXG4gIGJhY2tncm91bmQ6IHNjcm9sbCBjZW50ZXIgdXJsKCdzcmMvbWFpbi93ZWJhcHAvYXNzZXRzL3N0YXRpYy9pbWFnZXMvZmVtYWxlLWZpdG5lc3MtcHJvZmlsZS5naWYnKTtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {FitnessProfileBindingModel} from \"../create-fitness-profile/fitness-profile-binding.model\";\nimport {UserService} from \"../../user/user.service\";\nimport {FitnessProfileModel} from \"../../user/fitness-profile.model\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-edit-fitness-profile',\n  templateUrl: './edit-fitness-profile.component.html',\n  styleUrls: ['./edit-fitness-profile.component.css']\n})\nexport class EditFitnessProfileComponent implements OnInit {\n\n  userGender: string;\n  fitnessProfileBindingModel: FitnessProfileBindingModel;\n  currentFitnessProfile: FitnessProfileModel;\n  private formChanged = false;\n\n  constructor(private userService: UserService, private router: Router) {\n  }\n\n  ngOnInit() {\n\n    this.fitnessProfileBindingModel = new FitnessProfileBindingModel();\n\n    this.userService.getLoggedInUserObservable().subscribe(user => {\n      if (user) {\n        this.userGender = user.gender;\n        this.fitnessProfileBindingModel.weight = user.fitnessProfile.weight;\n        this.fitnessProfileBindingModel.height = user.fitnessProfile.height;\n        this.fitnessProfileBindingModel.age = user.fitnessProfile.age;\n        this.fitnessProfileBindingModel.activityLevel = user.fitnessProfile.activityLevel;\n        this.fitnessProfileBindingModel.weightGoal = user.fitnessProfile.weightGoal;\n        this.fitnessProfileBindingModel.weightChangeRate = user.fitnessProfile.weightChangeRate;\n        this.fitnessProfileBindingModel.sportsExperience = user.fitnessProfile.sportsExperience;\n      }\n    });\n  }\n\n  onWeightGoalChange(eventTarget: any) {\n\n    if (eventTarget.value === 'maintainWeight' || eventTarget.value === '') {\n      this.fitnessProfileBindingModel.weightChangeRate = 'none';\n    } else {\n      this.fitnessProfileBindingModel.weightChangeRate = 'slow'\n    }\n  }\n\n  onSubmit() {\n\n    if (!this.formChanged) {\n      this.router.navigate(['/home']);\n    }\n\n    this.userService.updateFitnessProfileOnLoggedInUser(this.fitnessProfileBindingModel).subscribe(data => {\n      if (data) {\n        this.userService.loadLoggedUser();\n        this.router.navigate(['/home']);\n      }\n    });\n  }\n\n  onFormChange() {\n    this.formChanged = true;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {UserModel} from '../user/user.model';\nimport {UserService} from '../user/user.service';\nimport has = Reflect.has;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  hasFitnessProfile: boolean;\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit() {\n    this.userService.getLoggedInUserObservable().subscribe(user => {\n\n      console.log(\"laina\");\n\n      if (user) {\n        this.hasFitnessProfile = !!user.fitnessProfile;\n      }\n    });\n\n  }\n\n}\n","export default \".fitness-profile-wrapper {\\r\\n\\r\\n}\\r\\n\\r\\n.center-cropped {\\r\\n  -o-object-fit: none;\\r\\n     object-fit: none; /* Do not scale the image */\\r\\n  -o-object-position: center;\\r\\n     object-position: center; /* Center the image within the element */\\r\\n}\\r\\n\\r\\n.fitness-profile-wrapper img {\\r\\n  border-radius: 50%;\\r\\n  width: 300px;\\r\\n  height: 300px;\\r\\n}\\r\\n\\r\\n.fitness-profile-wrapper .info {\\r\\n  background: rgba(255, 255, 255, 0.5);\\r\\n  border-radius: 30px;\\r\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.card {\\r\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.calories {\\r\\n  background: linear-gradient(348deg, rgba(255, 255, 255, 0.5) 0%, rgba(37, 206, 209, 1) 66%);\\r\\n  border-radius: 30px;\\r\\n}\\r\\n\\r\\n.sports-experience {\\r\\n  background: linear-gradient(348deg, rgba(20, 72, 0, 1) 0%, rgba(84, 209, 37, 1) 70%);\\r\\n}\\r\\n\\r\\n.height {\\r\\n  background: linear-gradient(349deg, rgba(0, 34, 72, 1) 0%, rgba(37, 93, 209, 1) 70%);\\r\\n}\\r\\n\\r\\n.weight {\\r\\n  background: linear-gradient(349deg, rgba(184, 161, 0, 1) 0%, rgba(255, 222, 0, 1) 70%);\\r\\n}\\r\\n\\r\\n.activity {\\r\\n  background: linear-gradient(349deg, rgba(129, 20, 20, 1) 0%, rgba(255, 0, 0, 1) 70%);\\r\\n}\\r\\n\\r\\n.weight-goal {\\r\\n  background: linear-gradient(349deg, rgba(124,20,129,1) 0%, rgba(216,7,226,1) 70%);\\r\\n}\\r\\n\\r\\n.weight-change-rate {\\r\\n  background: linear-gradient(349deg, rgba(100,143,113,1) 0%, rgba(136,181,150,1) 70%);\\r\\n}\\r\\n\\r\\n.chart-container {\\r\\n  height: 350px;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.macros {\\r\\n  position: absolute;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, -50%);\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvaG9tZS9teS1wcm9maWxlL215LXByb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtFQUNFLG1CQUFnQjtLQUFoQixnQkFBZ0IsRUFBRSwyQkFBMkI7RUFDN0MsMEJBQXVCO0tBQXZCLHVCQUF1QixFQUFFLHdDQUF3QztBQUNuRTs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBO0VBQ0Usb0NBQW9DO0VBQ3BDLG1CQUFtQjtFQUNuQix1Q0FBdUM7QUFDekM7O0FBR0E7RUFDRSx1Q0FBdUM7QUFDekM7O0FBRUE7RUFDRSwyRkFBMkY7RUFDM0YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usb0ZBQW9GO0FBQ3RGOztBQUVBO0VBQ0Usb0ZBQW9GO0FBQ3RGOztBQUVBO0VBQ0Usc0ZBQXNGO0FBQ3hGOztBQUVBO0VBQ0Usb0ZBQW9GO0FBQ3RGOztBQUVBO0VBQ0UsaUZBQWlGO0FBQ25GOztBQUVBO0VBQ0Usb0ZBQW9GO0FBQ3RGOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULGdDQUFnQztBQUNsQyIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL2hvbWUvbXktcHJvZmlsZS9teS1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZml0bmVzcy1wcm9maWxlLXdyYXBwZXIge1xyXG5cclxufVxyXG5cclxuLmNlbnRlci1jcm9wcGVkIHtcclxuICBvYmplY3QtZml0OiBub25lOyAvKiBEbyBub3Qgc2NhbGUgdGhlIGltYWdlICovXHJcbiAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7IC8qIENlbnRlciB0aGUgaW1hZ2Ugd2l0aGluIHRoZSBlbGVtZW50ICovXHJcbn1cclxuXHJcbi5maXRuZXNzLXByb2ZpbGUtd3JhcHBlciBpbWcge1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICB3aWR0aDogMzAwcHg7XHJcbiAgaGVpZ2h0OiAzMDBweDtcclxufVxyXG5cclxuLmZpdG5lc3MtcHJvZmlsZS13cmFwcGVyIC5pbmZvIHtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcclxuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbn1cclxuXHJcblxyXG4uY2FyZCB7XHJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG59XHJcblxyXG4uY2Fsb3JpZXMge1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgzNDhkZWcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KSAwJSwgcmdiYSgzNywgMjA2LCAyMDksIDEpIDY2JSk7XHJcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcclxufVxyXG5cclxuLnNwb3J0cy1leHBlcmllbmNlIHtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMzQ4ZGVnLCByZ2JhKDIwLCA3MiwgMCwgMSkgMCUsIHJnYmEoODQsIDIwOSwgMzcsIDEpIDcwJSk7XHJcbn1cclxuXHJcbi5oZWlnaHQge1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgzNDlkZWcsIHJnYmEoMCwgMzQsIDcyLCAxKSAwJSwgcmdiYSgzNywgOTMsIDIwOSwgMSkgNzAlKTtcclxufVxyXG5cclxuLndlaWdodCB7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDM0OWRlZywgcmdiYSgxODQsIDE2MSwgMCwgMSkgMCUsIHJnYmEoMjU1LCAyMjIsIDAsIDEpIDcwJSk7XHJcbn1cclxuXHJcbi5hY3Rpdml0eSB7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDM0OWRlZywgcmdiYSgxMjksIDIwLCAyMCwgMSkgMCUsIHJnYmEoMjU1LCAwLCAwLCAxKSA3MCUpO1xyXG59XHJcblxyXG4ud2VpZ2h0LWdvYWwge1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgzNDlkZWcsIHJnYmEoMTI0LDIwLDEyOSwxKSAwJSwgcmdiYSgyMTYsNywyMjYsMSkgNzAlKTtcclxufVxyXG5cclxuLndlaWdodC1jaGFuZ2UtcmF0ZSB7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDM0OWRlZywgcmdiYSgxMDAsMTQzLDExMywxKSAwJSwgcmdiYSgxMzYsMTgxLDE1MCwxKSA3MCUpO1xyXG59XHJcblxyXG4uY2hhcnQtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDM1MHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLm1hY3JvcyB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxufVxyXG5cclxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../user/user.service';\nimport {UserModel} from '../../user/user.model';\nimport {FitnessProfileModel} from '../../user/fitness-profile.model';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  loggedUser: UserModel;\n  loggedUserFitnessProfile: FitnessProfileModel;\n  loggedUserFirstName: string;\n  macroNutrientsData: any[];\n  activeEntries: any[];\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit() {\n\n    this.loggedUser = new UserModel();\n    this.loggedUserFitnessProfile = new FitnessProfileModel();\n\n    this.userService.getLoggedInUserObservable().subscribe(user => {\n      console.log(user);\n      if (user) {\n        this.loggedUser = user;\n        this.loggedUserFirstName = user.firstName;\n        this.loggedUserFitnessProfile = user.fitnessProfile;\n        this.makeChartDataForMacroNutrients();\n      }\n    });\n  }\n\n  makeChartDataForMacroNutrients() {\n    this.macroNutrientsData = [\n      {\n        \"name\": \"Protein\",\n        \"value\": this.loggedUserFitnessProfile.nutritionGoal.gramsOfProtein\n      },\n      {\n        \"name\": \"Carbohydrates\",\n        \"value\": this.loggedUserFitnessProfile.nutritionGoal.gramsOfCarbohydrates\n      },\n      {\n        \"name\": \"Fats\",\n        \"value\": this.loggedUserFitnessProfile.nutritionGoal.gramsOfFats\n      },\n    ]\n  }\n\n  onSelectHandler(event: any) {\n    this.activeEntries.push(event);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL2luZGV4L2luZGV4LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"svg {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\nsvg * {\\r\\n  fill: none;\\r\\n  stroke: red;\\r\\n  stroke-opacity: 0.5;\\r\\n  pointer-events: all;\\r\\n}\\r\\n\\r\\nsvg .is-focused {\\r\\n  fill: greenyellow;\\r\\n  fill-opacity: 0.4;\\r\\n}\\r\\n\\r\\nsvg .major-muscle-group {\\r\\n  fill: red;\\r\\n  fill-opacity: 0.4;\\r\\n}\\r\\n\\r\\nsvg .assisting-muscle-group {\\r\\n  fill: yellow;\\r\\n  fill-opacity: 0.4;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvbXVzY2xlLXNlbGVjdG9yL211c2NsZS1zZWxlY3Rvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFdBQVc7RUFDWCxtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFNBQVM7RUFDVCxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNyYy9tYWluL3dlYmFwcC9hcHAvbXVzY2xlLXNlbGVjdG9yL211c2NsZS1zZWxlY3Rvci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsic3ZnIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbnN2ZyAqIHtcclxuICBmaWxsOiBub25lO1xyXG4gIHN0cm9rZTogcmVkO1xyXG4gIHN0cm9rZS1vcGFjaXR5OiAwLjU7XHJcbiAgcG9pbnRlci1ldmVudHM6IGFsbDtcclxufVxyXG5cclxuc3ZnIC5pcy1mb2N1c2VkIHtcclxuICBmaWxsOiBncmVlbnllbGxvdztcclxuICBmaWxsLW9wYWNpdHk6IDAuNDtcclxufVxyXG5cclxuc3ZnIC5tYWpvci1tdXNjbGUtZ3JvdXAge1xyXG4gIGZpbGw6IHJlZDtcclxuICBmaWxsLW9wYWNpdHk6IDAuNDtcclxufVxyXG5cclxuc3ZnIC5hc3Npc3RpbmctbXVzY2xlLWdyb3VwIHtcclxuICBmaWxsOiB5ZWxsb3c7XHJcbiAgZmlsbC1vcGFjaXR5OiAwLjQ7XHJcbn1cclxuIl19 */\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-muscle-selector',\n  templateUrl: './muscle-selector.component.html',\n  styleUrls: ['./muscle-selector.component.css']\n})\nexport class MuscleSelectorComponent implements OnInit {\n\n  majorMuscleGroupSelected: string;\n  assistingMuscleGroupsSelected = {\n    biceps: false,\n    triceps: false,\n    forearm: false,\n    latisimus: false,\n    erectors: false,\n    traps: false,\n    chest: false,\n    anteriorDeltoid: false,\n    lateralDeltoid: false,\n    posteriorDeltoid: false,\n    hamstrings: false,\n    gluteus: false,\n    calves: false,\n    quadriceps: false,\n    abs: false,\n  };\n  focusedMuscleGroup: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onMuscleClick(muscleType: string): void {\n    if (!this.assistingMuscleGroupsSelected[muscleType] && this.majorMuscleGroupSelected !== muscleType) {\n      this.assistingMuscleGroupsSelected[muscleType] = true;\n    } else if (this.majorMuscleGroupSelected !== muscleType) {\n      this.assistingMuscleGroupsSelected[muscleType] = false;\n      this.majorMuscleGroupSelected = muscleType;\n    } else {\n      this.majorMuscleGroupSelected = undefined;\n    }\n  }\n\n  onMuscleMouseEnter(muscleType: string): void {\n    this.focusedMuscleGroup = muscleType;\n  }\n\n  resetSelectedMuscleGroup(): void {\n    this.focusedMuscleGroup = undefined;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL25hdmJhci9ndWVzdC1uYXZiYXIvZ3Vlc3QtbmF2YmFyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guest-navbar',\n  templateUrl: './guest-navbar.component.html',\n  styleUrls: ['./guest-navbar.component.css', '../navbar.component.css']\n})\nexport class GuestNavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"#navbarDropdownMenuLink {\\r\\n  padding: 0.5em 1em;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvbmF2YmFyL2xvZ2dlZC1uYXZiYXIvbG9nZ2VkLW5hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9tYWluL3dlYmFwcC9hcHAvbmF2YmFyL2xvZ2dlZC1uYXZiYXIvbG9nZ2VkLW5hdmJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI25hdmJhckRyb3Bkb3duTWVudUxpbmsge1xyXG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcclxufVxyXG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../auth/auth.service';\nimport {UserService} from '../../user/user.service';\n\n@Component({\n  selector: 'app-logged-navbar',\n  templateUrl: './logged-navbar.component.html',\n  styleUrls: ['./logged-navbar.component.css', '../navbar.component.css']\n})\nexport class LoggedNavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService, private userService: UserService) {\n  }\n\n  profilePictureUrl = '';\n\n  ngOnInit() {\n\n    this.userService.getLoggedInUserObservable().subscribe(user => {\n      if (user) {\n        this.profilePictureUrl = user.profilePictureURL;\n      } else {\n        this.profilePictureUrl = '';\n      }\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n}\n","export default \".navbar .nav-item {\\r\\n  margin-left: 0.5em;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n.navbar .nav-item .nav-link {\\r\\n  padding: 1.5em;\\r\\n}\\r\\n\\r\\n.navbar a {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.navbar .navbar-brand {\\r\\n  padding: 0.5em;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n.navbar .navbar-brand:hover,\\r\\n.navbar .nav-item:hover,\\r\\n.navbar .nav-item.active {\\r\\n  transition: 0.5s ease;\\r\\n  background-color: #6c757d;\\r\\n}\\r\\n\\r\\n.navbar .navbar-brand:hover,\\r\\n.navbar .nav-item.active .nav-link,\\r\\n.navbar .nav-item:hover .nav-link {\\r\\n  transition: 0.5s ease;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztFQUNkLG1CQUFtQjtBQUNyQjs7QUFFQTs7O0VBR0UscUJBQXFCO0VBQ3JCLHlCQUF5QjtBQUMzQjs7QUFJQTs7O0VBR0UscUJBQXFCO0VBQ3JCLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXIgLm5hdi1pdGVtIHtcclxuICBtYXJnaW4tbGVmdDogMC41ZW07XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuLm5hdmJhciAubmF2LWl0ZW0gLm5hdi1saW5rIHtcclxuICBwYWRkaW5nOiAxLjVlbTtcclxufVxyXG5cclxuLm5hdmJhciBhIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5uYXZiYXIgLm5hdmJhci1icmFuZCB7XHJcbiAgcGFkZGluZzogMC41ZW07XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuLm5hdmJhciAubmF2YmFyLWJyYW5kOmhvdmVyLFxyXG4ubmF2YmFyIC5uYXYtaXRlbTpob3ZlcixcclxuLm5hdmJhciAubmF2LWl0ZW0uYWN0aXZlIHtcclxuICB0cmFuc2l0aW9uOiAwLjVzIGVhc2U7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzZjNzU3ZDtcclxufVxyXG5cclxuXHJcblxyXG4ubmF2YmFyIC5uYXZiYXItYnJhbmQ6aG92ZXIsXHJcbi5uYXZiYXIgLm5hdi1pdGVtLmFjdGl2ZSAubmF2LWxpbmssXHJcbi5uYXZiYXIgLm5hdi1pdGVtOmhvdmVyIC5uYXYtbGluayB7XHJcbiAgdHJhbnNpdGlvbjogMC41cyBlYXNlO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../auth/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  isUserLoggedIn = false;\n  userRole: string;\n\n  constructor(private authService: AuthService) {\n  }\n\n  ngOnInit() {\n    this.authService.user.subscribe(user => {\n      this.isUserLoggedIn = !!user;\n      this.userRole = user ? user.role : undefined;\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({name: 'safe'})\r\nexport class SafePipe implements PipeTransform {\r\n    constructor(private sanitizer: DomSanitizer) {\r\n    }\r\n\r\n    public transform(url) {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n}\r\n","import {NutritionGoal} from \"./nutrition-goal.model\";\n\nexport class FitnessProfileModel {\n    weight: number;\n    height: number;\n    age: number;\n    sportsExperience: string;\n    activityLevel: string;\n    weightGoal: string;\n    weightChangeRate: string;\n    nutritionGoal: NutritionGoal;\n\n    constructor() {\n      this.nutritionGoal = new NutritionGoal();\n    }\n\n}\n","export class NutritionGoal {\n\n    calories: number;\n    gramsOfProtein: number;\n    gramsOfCarbohydrates: number;\n    gramsOfFats: number;\n\n    constructor() {\n    }\n\n}\n","export class RegisterBindingModel {\r\n  firstName: string;\r\n  lastName: string;\r\n  gender: string;\r\n  username: string;\r\n  email: string;\r\n  profilePictureURL: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n","export default \".card-signin .card-img-left {\\r\\n  width: 60%;\\r\\n  background: scroll center url('register-animation.gif');\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvdXNlci9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtFQUNWLHVEQUE0RjtFQUM1RixzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL21haW4vd2ViYXBwL2FwcC91c2VyL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1zaWduaW4gLmNhcmQtaW1nLWxlZnQge1xyXG4gIHdpZHRoOiA2MCU7XHJcbiAgYmFja2dyb3VuZDogc2Nyb2xsIGNlbnRlciB1cmwoJ3NyYy9tYWluL3dlYmFwcC9hc3NldHMvc3RhdGljL2ltYWdlcy9yZWdpc3Rlci1hbmltYXRpb24uZ2lmJyk7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxufVxyXG4iXX0= */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {UserService} from '../user.service';\nimport {Router} from '@angular/router';\nimport {RegisterBindingModel} from './register-binding.model';\nimport {AuthService} from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerBindingModel: RegisterBindingModel;\n  userProfilePictureFile: File;\n  usernameTaken = false;\n  emailTaken = false;\n  passwordsMatch = false;\n  regexPattern = \"(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\\\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\\\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\\\])\";\n  @ViewChild('chooseFileLabel', {static: false}) chooseFileLabelRef: ElementRef;\n\n  constructor(private authService: AuthService, private router: Router, private userService: UserService) {\n  }\n\n  ngOnInit() {\n\n    this.registerBindingModel = new RegisterBindingModel();\n    this.registerBindingModel.gender = \"\";\n  }\n\n  onSubmit() {\n\n    const formData = new FormData();\n    const userBlob = new Blob([JSON.stringify(this.registerBindingModel)], {type: 'application/json'});\n    formData.append(\"user\", userBlob);\n    formData.append(\"pictureFile\", this.userProfilePictureFile);\n\n\n    this.authService.register(formData).subscribe(data => {\n      if (data) {\n        this.router.navigate(['/signin']);\n      }\n    })\n  }\n\n  handleFileInput(files: FileList) {\n\n    this.userProfilePictureFile = files[0];\n    this.chooseFileLabelRef.nativeElement.innerHTML = this.userProfilePictureFile.name;\n\n  }\n\n  onUsernameFocusOut(eventTarget: any) {\n\n    if (eventTarget.value) {\n      this.userService.getUserByUsername(eventTarget.value)\n        .subscribe(user => this.usernameTaken = true, error => this.usernameTaken = false)\n    }\n  }\n\n  onPasswordChange(): void {\n    this.passwordsMatch = this.registerBindingModel.password === this.registerBindingModel.confirmPassword;\n  }\n}\n","export class SigninBindingModel {\r\n  username: string;\r\n  password: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL3VzZXIvc2lnbmluL3NpZ25pbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../user.service';\nimport {SigninBindingModel} from './signin-binding.model';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {AuthService} from '../../auth/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  signInBindingModel: SigninBindingModel;\n  rememberMe = false;\n  errorOccurred = false;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.signInBindingModel = new SigninBindingModel();\n  }\n\n  onSubmit() {\n\n    this.authService.signin(this.signInBindingModel).subscribe(data => {\n      this.authService.handleAuthentication(data.headers.get('Authorization'), this.rememberMe);\n      this.router.navigate(['/home']);\n    }, (error: HttpErrorResponse) => {\n      this.errorOccurred = true;\n    });\n  }\n\n}\n","export default \".fitness-profile-wrapper {\\r\\n\\r\\n}\\r\\n\\r\\n.center-cropped {\\r\\n    -o-object-fit: none;\\r\\n       object-fit: none; /* Do not scale the image */\\r\\n    -o-object-position: center;\\r\\n       object-position: center; /* Center the image within the element */\\r\\n}\\r\\n\\r\\n.fitness-profile-wrapper img {\\r\\n    border-radius: 50%;\\r\\n    width: 300px;\\r\\n    height: 300px;\\r\\n}\\r\\n\\r\\n.fitness-profile-wrapper .info {\\r\\n    background: rgba(255, 255, 255, 0.5);\\r\\n    border-radius: 30px;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.card {\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.calories {\\r\\n    background: linear-gradient(348deg, rgba(255, 255, 255, 0.5) 0%, rgba(37, 206, 209, 1) 66%);\\r\\n    border-radius: 30px;\\r\\n}\\r\\n\\r\\n.chart-container {\\r\\n    height: 350px;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.macros {\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n}\\r\\n\\r\\n.sports-experience {\\r\\n    background: linear-gradient(348deg, rgba(20, 72, 0, 1) 0%, rgba(84, 209, 37, 1) 70%);\\r\\n}\\r\\n\\r\\n.height {\\r\\n    background: linear-gradient(349deg, rgba(0, 34, 72, 1) 0%, rgba(37, 93, 209, 1) 70%);\\r\\n}\\r\\n\\r\\n.weight {\\r\\n    background: linear-gradient(349deg, rgba(184, 161, 0, 1) 0%, rgba(255, 222, 0, 1) 70%);\\r\\n}\\r\\n\\r\\n.activity {\\r\\n    background: linear-gradient(349deg, rgba(129, 20, 20, 1) 0%, rgba(255, 0, 0, 1) 70%);\\r\\n}\\r\\n\\r\\n.weight-goal {\\r\\n    background: linear-gradient(349deg, rgba(124,20,129,1) 0%, rgba(216,7,226,1) 70%);\\r\\n}\\r\\n\\r\\n.weight-change-rate {\\r\\n    background: linear-gradient(349deg, rgba(100,143,113,1) 0%, rgba(136,181,150,1) 70%);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvdXNlci91c2VyLXByb2ZpbGUvdXNlci1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7SUFDSSxtQkFBZ0I7T0FBaEIsZ0JBQWdCLEVBQUUsMkJBQTJCO0lBQzdDLDBCQUF1QjtPQUF2Qix1QkFBdUIsRUFBRSx3Q0FBd0M7QUFDckU7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxvQ0FBb0M7SUFDcEMsbUJBQW1CO0lBQ25CLHVDQUF1QztBQUMzQzs7QUFHQTtJQUNJLHVDQUF1QztBQUMzQzs7QUFFQTtJQUNJLDJGQUEyRjtJQUMzRixtQkFBbUI7QUFDdkI7O0FBQ0E7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTO0lBQ1QsZ0NBQWdDO0FBQ3BDOztBQUVBO0lBQ0ksb0ZBQW9GO0FBQ3hGOztBQUVBO0lBQ0ksb0ZBQW9GO0FBQ3hGOztBQUVBO0lBQ0ksc0ZBQXNGO0FBQzFGOztBQUVBO0lBQ0ksb0ZBQW9GO0FBQ3hGOztBQUVBO0lBQ0ksaUZBQWlGO0FBQ3JGOztBQUVBO0lBQ0ksb0ZBQW9GO0FBQ3hGIiwiZmlsZSI6InNyYy9tYWluL3dlYmFwcC9hcHAvdXNlci91c2VyLXByb2ZpbGUvdXNlci1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZml0bmVzcy1wcm9maWxlLXdyYXBwZXIge1xyXG5cclxufVxyXG5cclxuLmNlbnRlci1jcm9wcGVkIHtcclxuICAgIG9iamVjdC1maXQ6IG5vbmU7IC8qIERvIG5vdCBzY2FsZSB0aGUgaW1hZ2UgKi9cclxuICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyOyAvKiBDZW50ZXIgdGhlIGltYWdlIHdpdGhpbiB0aGUgZWxlbWVudCAqL1xyXG59XHJcblxyXG4uZml0bmVzcy1wcm9maWxlLXdyYXBwZXIgaW1nIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICAgIGhlaWdodDogMzAwcHg7XHJcbn1cclxuXHJcbi5maXRuZXNzLXByb2ZpbGUtd3JhcHBlciAuaW5mbyB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG59XHJcblxyXG5cclxuLmNhcmQge1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG59XHJcblxyXG4uY2Fsb3JpZXMge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDM0OGRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpIDAlLCByZ2JhKDM3LCAyMDYsIDIwOSwgMSkgNjYlKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbn1cclxuLmNoYXJ0LWNvbnRhaW5lciB7XHJcbiAgICBoZWlnaHQ6IDM1MHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4ubWFjcm9zIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbn1cclxuXHJcbi5zcG9ydHMtZXhwZXJpZW5jZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMzQ4ZGVnLCByZ2JhKDIwLCA3MiwgMCwgMSkgMCUsIHJnYmEoODQsIDIwOSwgMzcsIDEpIDcwJSk7XHJcbn1cclxuXHJcbi5oZWlnaHQge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDM0OWRlZywgcmdiYSgwLCAzNCwgNzIsIDEpIDAlLCByZ2JhKDM3LCA5MywgMjA5LCAxKSA3MCUpO1xyXG59XHJcblxyXG4ud2VpZ2h0IHtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgzNDlkZWcsIHJnYmEoMTg0LCAxNjEsIDAsIDEpIDAlLCByZ2JhKDI1NSwgMjIyLCAwLCAxKSA3MCUpO1xyXG59XHJcblxyXG4uYWN0aXZpdHkge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDM0OWRlZywgcmdiYSgxMjksIDIwLCAyMCwgMSkgMCUsIHJnYmEoMjU1LCAwLCAwLCAxKSA3MCUpO1xyXG59XHJcblxyXG4ud2VpZ2h0LWdvYWwge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDM0OWRlZywgcmdiYSgxMjQsMjAsMTI5LDEpIDAlLCByZ2JhKDIxNiw3LDIyNiwxKSA3MCUpO1xyXG59XHJcblxyXG4ud2VpZ2h0LWNoYW5nZS1yYXRlIHtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgzNDlkZWcsIHJnYmEoMTAwLDE0MywxMTMsMSkgMCUsIHJnYmEoMTM2LDE4MSwxNTAsMSkgNzAlKTtcclxufVxyXG5cclxuXHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params} from \"@angular/router\";\nimport {UserService} from \"../user.service\";\nimport {UserModel} from \"../user.model\";\nimport {FitnessProfileModel} from \"../fitness-profile.model\";\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './user-profile.component.html',\n    styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n    username: string;\n    user: UserModel;\n    userFitnessProfile: FitnessProfileModel;\n    macroNutrientsData: ({ name: string; value: any } | { name: string; value: any } | { name: string; value: any })[];\n\n    constructor(private route: ActivatedRoute, private userService: UserService) {\n    }\n\n    ngOnInit() {\n\n        this.route.params.subscribe((params: Params) => {\n            if (params['username']) {\n                this.username = params['username'];\n                this.userService.getUserByUsername(this.username).subscribe((user: UserModel) => {\n                  this.user = user;\n                  this.userFitnessProfile = user.fitnessProfile;\n                  console.log(user.fitnessProfile);\n\n                  this.makeChartDataForMacroNutrients();\n                })\n            }\n        })\n    }\n\n    makeChartDataForMacroNutrients() {\n        this.macroNutrientsData = [\n            {\n                \"name\": \"Protein\",\n                \"value\": this.userFitnessProfile.nutritionGoal.gramsOfProtein\n            },\n            {\n                \"name\": \"Carbohydrates\",\n                \"value\": this.userFitnessProfile.nutritionGoal.gramsOfCarbohydrates\n            },\n            {\n                \"name\": \"Fats\",\n                \"value\": this.userFitnessProfile.nutritionGoal.gramsOfFats\n            },\n        ]\n    }\n\n}\n","import {FitnessProfileModel} from './fitness-profile.model';\n\nexport class UserModel {\n    firstName: string;\n    lastName: string;\n    gender: string;\n    username: string;\n    email: string;\n    profilePictureURL: string;\n    fitnessProfile: FitnessProfileModel;\n\n    constructor() {\n      this.fitnessProfile = new FitnessProfileModel();\n    }\n\n\n}\n","import {Injectable, OnInit} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {AuthService} from '../auth/auth.service';\r\nimport {UserModel} from './user.model';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {FitnessProfileBindingModel} from '../home/create-fitness-profile/fitness-profile-binding.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService implements OnInit {\r\n\r\n  loggedUser = new BehaviorSubject<UserModel>(null);\r\n  loggedUserId: string;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) {\r\n    this.loadLoggedUser();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  clearUser(): void {\r\n  }\r\n\r\n  getLoggedInUserObservable(): Observable<UserModel> {\r\n    return this.loggedUser;\r\n  }\r\n\r\n  getUserById(id: string): Observable<UserModel> {\r\n    return this.http.get<UserModel>('http://localhost:8000/users/id/' + id);\r\n  }\r\n\r\n  getUserByUsername(username: string): Observable<UserModel> {\r\n    return this.http.get<UserModel>('http://localhost:8000/users/username/' + username);\r\n  }\r\n\r\n  setFitnessProfileToLoggedInUser(fitnessProfileBindingModel: FitnessProfileBindingModel) {\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n\r\n    return this.http.post('http://localhost:8000/users/fitness-profile/set/' + this.loggedUserId,\r\n      fitnessProfileBindingModel, {headers: headers, observe: 'response'});\r\n\r\n  }\r\n\r\n  updateFitnessProfileOnLoggedInUser(fitnessProfileBindingModel: FitnessProfileBindingModel) {\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n\r\n    return this.http.put('http://localhost:8000/users/fitness-profile/edit/' + this.loggedUserId,\r\n      fitnessProfileBindingModel, {headers: headers, observe: 'response'});\r\n  }\r\n\r\n  loadLoggedUser() {\r\n    this.authService.user.subscribe(user => {\r\n      if (user) {\r\n        this.loggedUserId = user.userId;\r\n        this.getUserById(user.userId).subscribe(data => {\r\n          console.log(data);\r\n          this.loggedUser.next(data);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"table {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.order-index-workout {\\r\\n    position: absolute;\\r\\n    top: 7px;\\r\\n    left: 0;\\r\\n\\r\\n    border-radius: 50%;\\r\\n    width: 36px;\\r\\n    line-height: 36px;\\r\\n    padding: 4px;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.modal-body {\\r\\n    max-height: 300px;\\r\\n    overflow-y: auto;\\r\\n    -webkit-overflow-scrolling: touch;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC9hbGwtd29ya291dC1wbGFucy9hbGwtd29ya291dC1wbGFucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixPQUFPOztJQUVQLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWix1Q0FBdUM7SUFDdkMsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixpQ0FBaUM7QUFDckMiLCJmaWxlIjoic3JjL21haW4vd2ViYXBwL2FwcC93b3Jrb3V0L2FsbC13b3Jrb3V0LXBsYW5zL2FsbC13b3Jrb3V0LXBsYW5zLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5vcmRlci1pbmRleC13b3Jrb3V0IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogN3B4O1xyXG4gICAgbGVmdDogMDtcclxuXHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB3aWR0aDogMzZweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xyXG4gICAgcGFkZGluZzogNHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ubW9kYWwtYm9keSB7XHJcbiAgICBtYXgtaGVpZ2h0OiAzMDBweDtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport {Workout} from \"../workout.model\";\nimport {WorkoutService} from \"../workout.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Router} from \"@angular/router\";\nimport {WorkoutPlan} from \"../workout-plan.model\";\nimport {WorkoutPlanService} from \"../workout-plan.service\";\n\n@Component({\n  selector: 'app-all-workout-plans',\n  templateUrl: './all-workout-plans.component.html',\n  styleUrls: ['./all-workout-plans.component.css']\n})\nexport class AllWorkoutPlansComponent implements OnInit {\n\n  workoutPlans: WorkoutPlan[];\n  filteredWorkoutPlans: WorkoutPlan[];\n  page: number = 1;\n  pageSize: number = 6;\n\n  selectedWorkoutPlanId: string;\n  selectedWorkoutPlanForModal: WorkoutPlan;\n\n  constructor(private workoutPlanService: WorkoutPlanService, private modalService: NgbModal, private router: Router) {\n  }\n\n  ngOnInit() {\n\n    this.workoutPlanService.getAllPublicWorkoutPlans().subscribe((workoutPlans: WorkoutPlan[]) => {\n      if (workoutPlans) {\n        this.workoutPlans = workoutPlans;\n        this.filteredWorkoutPlans = [...workoutPlans];\n      }\n    });\n\n\n  }\n\n  open(content, workoutPlanId) {\n\n    this.selectedWorkoutPlanForModal = this.workoutPlans.find(e => e.id === workoutPlanId);\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n\n      this.workoutPlanService.copyWorkoutPlanToMyWorkoutPlans(workoutPlanId).subscribe((workoutPlan : WorkoutPlan) => {\n        this.router.navigate(['my-workout-plans', workoutPlan.id])\n      });\n    }, (reason) => {\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL3dvcmtvdXQvYWxsLXdvcmtvdXRzL2FsbC13b3Jrb3V0cy5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {WorkoutService} from \"../workout.service\";\nimport {Workout} from \"../workout.model\";\nimport {Exercise} from \"../../exercise/exercise.model\";\nimport {WorkoutExerciseBindingModel} from \"../../exercise/all-exercises/workout-exercise-binding.model\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-all-workouts',\n    templateUrl: './all-workouts.component.html',\n    styleUrls: ['./all-workouts.component.css']\n})\nexport class AllWorkoutsComponent implements OnInit {\n\n    workouts: Workout[];\n    filteredWorkouts: Workout[];\n    page: number = 1;\n    pageSize: number = 6;\n\n    selectedWorkoutId: string;\n    selectedWorkoutForModal: Workout;\n\n    constructor(private workoutService: WorkoutService, private modalService: NgbModal, private router: Router) {\n    }\n\n    ngOnInit() {\n\n        this.workoutService.fetchAllPublicWorkouts().subscribe((workouts: Workout[]) => {\n            if (workouts) {\n                this.workouts = workouts;\n                this.filteredWorkouts = [...workouts];\n            }\n        });\n\n\n    }\n\n    open(content, workoutId) {\n\n        this.selectedWorkoutForModal = this.workouts.find(e => e.id === workoutId);\n\n        this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n\n            this.workoutService.copyWorkoutToLoggedUserWorkouts(workoutId).subscribe((workout: Workout) => {\n                this.router.navigate(['my-workouts', workout.id])\n            });\n        }, (reason) => {\n        });\n    }\n\n}\n","export default \".list-group{\\r\\n    max-height: 300px;\\r\\n    overflow-y: auto;\\r\\n    -webkit-overflow-scrolling: touch;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC9teS13b3Jrb3V0LXBsYW5zL215LXdvcmtvdXQtcGxhbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsaUNBQWlDO0FBQ3JDIiwiZmlsZSI6InNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC9teS13b3Jrb3V0LXBsYW5zL215LXdvcmtvdXQtcGxhbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0LWdyb3Vwe1xyXG4gICAgbWF4LWhlaWdodDogMzAwcHg7XHJcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Workout} from \"../workout.model\";\nimport {WorkoutBindingModel} from \"../workout-binding-model\";\nimport {WorkoutPlanBindingModel} from \"../workout-plan-binding-model\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {WorkoutService} from \"../workout.service\";\nimport {AuthService} from \"../../auth/auth.service\";\nimport {ActivatedRoute, NavigationEnd, Params, Router, RouterEvent} from \"@angular/router\";\nimport {WorkoutPlanService} from \"../workout-plan.service\";\nimport {WorkoutPlan} from \"../workout-plan.model\";\nimport {filter} from \"rxjs/operators\";\n\n@Component({\n    selector: 'app-my-workout-plans',\n    templateUrl: './my-workout-plans.component.html',\n    styleUrls: ['./my-workout-plans.component.css']\n})\nexport class MyWorkoutPlansComponent implements OnInit {\n\n    workoutPlans: WorkoutPlan[];\n    selectedWorkoutPlanId: string;\n    workoutPlanBindingModel: WorkoutPlanBindingModel;\n    loggedUserId: string;\n\n    constructor(private modalService: NgbModal,\n                private authService: AuthService,\n                private router: Router,\n                private route: ActivatedRoute,\n                private workoutPlanService: WorkoutPlanService) {\n    }\n\n    ngOnInit() {\n\n        this.router.events.pipe(\n            filter((event: RouterEvent) => event instanceof NavigationEnd)\n        ).subscribe(() => {\n            this.fetchWorkoutsPlans();\n        });\n\n        this.setSelectedWorkoutPlanIdFromParams();\n        this.fetchWorkoutsPlans();\n        this.workoutPlanBindingModel = new WorkoutPlanBindingModel();\n    }\n\n    setSelectedWorkoutPlanIdFromParams() {\n        this.route.firstChild.params.subscribe((params: Params) => {\n            this.selectedWorkoutPlanId = params['id'] ? params['id'] : undefined;\n        });\n    }\n\n    fetchWorkoutsPlans() {\n        this.workoutPlanService.getLoggedInUserWorkoutPlans().subscribe((workoutPlans: WorkoutPlan[]) => {\n            console.log(workoutPlans);\n            workoutPlans.sort((w1, w2) => w1.name.localeCompare(w2.name));\n            this.workoutPlans = workoutPlans;\n        })\n    }\n\n    onWorkoutPlanButtonClick(id: string) {\n\n        this.selectedWorkoutPlanId = id;\n        this.router.navigate([id], {relativeTo: this.route});\n    }\n\n    open(content) {\n        this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n            this.workoutPlanService.createWorkoutPlan(this.workoutPlanBindingModel)\n                .subscribe((workoutPlan: WorkoutPlan) => {\n                    if (workoutPlan) {\n                        this.fetchWorkoutsPlans();\n                        this.router.navigate(['my-workout-plans/' + workoutPlan.id])\n                    }\n                });\n            this.workoutPlanBindingModel = new WorkoutPlanBindingModel();\n        }, (reason) => {\n        });\n    }\n\n    onRouterOutletDeactivate() {\n        this.fetchWorkoutsPlans();\n    }\n\n    onRouterOutletActivate() {\n        this.setSelectedWorkoutPlanIdFromParams();\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL3dvcmtvdXQvbXktd29ya291dC1wbGFucy9uby1zZWxlY3RlZC13b3Jrb3V0LXBsYW4vbm8tc2VsZWN0ZWQtd29ya291dC1wbGFuLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-selected-workout-plan',\n  templateUrl: './no-selected-workout-plan.component.html',\n  styleUrls: ['./no-selected-workout-plan.component.css']\n})\nexport class NoSelectedWorkoutPlanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".selected-workout-plan {\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.cdk-drop-list-dragging .cdk-drag {\\r\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\\r\\n.cdk-drag-animating {\\r\\n    transition: transform 300ms cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\\r\\n.cdk-drag:hover {\\r\\n    cursor: -webkit-grab;\\r\\n    cursor: grab;\\r\\n}\\r\\n\\r\\n.cdk-drop-list-dragging:hover .cdk-drag:hover {\\r\\n    cursor: -webkit-grabbing;\\r\\n    cursor: grabbing;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.order-index-workout {\\r\\n    position: absolute;\\r\\n    top: 7px;\\r\\n    left: 0;\\r\\n\\r\\n    border-radius: 50%;\\r\\n    width: 36px;\\r\\n    line-height: 36px;\\r\\n    padding: 4px;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC9teS13b3Jrb3V0LXBsYW5zL3NlbGVjdGVkLXdvcmtvdXQtcGxhbi9zZWxlY3RlZC13b3Jrb3V0LXBsYW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9DQUFvQztJQUNwQyx1Q0FBdUM7QUFDM0M7O0FBRUE7SUFDSSxzREFBc0Q7QUFDMUQ7O0FBRUE7SUFDSSxzREFBc0Q7QUFDMUQ7O0FBRUE7SUFDSSxvQkFBWTtJQUFaLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSx3QkFBZ0I7SUFBaEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixPQUFPOztJQUVQLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWix1Q0FBdUM7SUFDdkMsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC9teS13b3Jrb3V0LXBsYW5zL3NlbGVjdGVkLXdvcmtvdXQtcGxhbi9zZWxlY3RlZC13b3Jrb3V0LXBsYW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWxlY3RlZC13b3Jrb3V0LXBsYW4ge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG59XHJcblxyXG4uY2RrLWRyb3AtbGlzdC1kcmFnZ2luZyAuY2RrLWRyYWcge1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpO1xyXG59XHJcblxyXG4uY2RrLWRyYWctYW5pbWF0aW5nIHtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yLCAxKTtcclxufVxyXG5cclxuLmNkay1kcmFnOmhvdmVyIHtcclxuICAgIGN1cnNvcjogZ3JhYjtcclxufVxyXG5cclxuLmNkay1kcm9wLWxpc3QtZHJhZ2dpbmc6aG92ZXIgLmNkay1kcmFnOmhvdmVyIHtcclxuICAgIGN1cnNvcjogZ3JhYmJpbmc7XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLm9yZGVyLWluZGV4LXdvcmtvdXQge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA3cHg7XHJcbiAgICBsZWZ0OiAwO1xyXG5cclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAzNnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDM2cHg7XHJcbiAgICBwYWRkaW5nOiA0cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbiJdfQ== */\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Workout} from \"../../workout.model\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\nimport {WorkoutService} from \"../../workout.service\";\nimport {GetConstantViewNamePipe} from \"../../../get-constant-view-name.pipe\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {moveItemInArray} from \"@angular/cdk/drag-drop\";\nimport {WorkoutPlan} from \"../../workout-plan.model\";\nimport {WorkoutPlanService} from \"../../workout-plan.service\";\n\n@Component({\n    selector: 'app-selected-workout-plan',\n    templateUrl: './selected-workout-plan.component.html',\n    styleUrls: ['./selected-workout-plan.component.css']\n})\nexport class SelectedWorkoutPlanComponent implements OnInit {\n\n    @Output() workoutDelete: EventEmitter<any> = new EventEmitter();\n\n    selectedWorkoutPlan: WorkoutPlan;\n    editWorkoutPlanBindingModel: WorkoutPlan;\n    deletedWorkoutsStack: string[];\n    workoutPlanId: string;\n    loggedUserWorkouts: Workout[];\n\n    editMode = false;\n    muscleGroupSets: any[];\n    customColors: any[];\n    selectedWorkoutForModal: Workout;\n    selectedWorkoutIdForModal: string;\n\n\n    constructor(private route: ActivatedRoute,\n                private workoutPlanService: WorkoutPlanService,\n                private workoutService: WorkoutService,\n                private router: Router,\n                private constantViewPipe: GetConstantViewNamePipe,\n                private modalService: NgbModal) {\n    }\n\n    ngOnInit() {\n\n        this.selectedWorkoutPlan = new WorkoutPlan();\n        this.selectedWorkoutForModal = new Workout();\n\n        this.route.params.subscribe((params: Params) => {\n                this.workoutPlanId = params['id'];\n                this.fetchWorkoutPlanDetails();\n            }\n        );\n\n        this.workoutService.getLoggedInUserWorkouts().subscribe((workouts: Workout[]) => {\n\n            if (workouts) {\n                this.loggedUserWorkouts = workouts;\n                this.selectedWorkoutForModal = workouts[0];\n                this.selectedWorkoutIdForModal = workouts[0].id;\n            }\n\n        });\n\n        this.route.queryParams.subscribe((queryParams: Params) => {\n\n            if (queryParams['edit']) {\n                this.editMode = queryParams['edit'] === '1';\n                if (this.editMode) {\n                    this.editWorkoutPlanBindingModel = JSON.parse(JSON.stringify(this.selectedWorkoutPlan));\n                    this.editWorkoutPlanBindingModel.isPublic = this.selectedWorkoutPlan.isPublic;\n                    this.deletedWorkoutsStack = [];\n                }\n            } else {\n                this.editMode = false;\n            }\n        });\n    }\n\n    open(content) {\n        this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {\n        }, (reason) => {\n        });\n    }\n\n    openAddWorkoutModal(content) {\n        this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {\n\n            this.workoutPlanService.addWorkoutFromMyWorkoutsToMyWorkoutPlan(this.workoutPlanId, this.selectedWorkoutIdForModal)\n                .subscribe((workoutPlan: WorkoutPlan) => {\n                    if (workoutPlan) {\n                        this.selectedWorkoutPlan = workoutPlan;\n                        this.calculateExercisesSets();\n                    }\n                });\n\n        }, (reason) => {\n        });\n    }\n\n    fetchWorkoutPlanDetails(): void {\n        this.workoutPlanService.getLoggedInUserWorkoutPlans().subscribe((workoutPlans: WorkoutPlan[]) => {\n            if (workoutPlans) {\n                this.selectedWorkoutPlan = workoutPlans.find(w => w.id === this.workoutPlanId);\n\n                this.calculateExercisesSets();\n\n            }\n        });\n    }\n\n    calculateExercisesSets() {\n\n        const exerciseSetsArray = [];\n        const muscleGroupColorsArray = [];\n\n        const colors = ['#f68d5c',\n            '#0dc8f3',\n            '#6f2ac2',\n            '#84e26b',\n            '#86974b',\n            '#fa1483',\n            '#c2118b',\n            '#d79aaf',\n            '#f2f0c1',\n            '#0ccbb7',\n            '#e88ef8',\n            '#ccf3f1',\n            '#d1fc9e',\n            '#dbb005',\n            '#2b352b',\n            '#781037',\n            '#636e8d'];\n\n        const exercisesSets = {};\n\n        for (const workout of this.selectedWorkoutPlan.workouts) {\n            const workoutExercises = workout.workout.exercises;\n\n\n            workoutExercises.forEach(e => {\n\n                if (!exercisesSets.hasOwnProperty(e.exercise.majorMuscleGroup)) {\n                    exercisesSets[e.exercise.majorMuscleGroup] = 0;\n                }\n\n                exercisesSets[e.exercise.majorMuscleGroup] += e.sets;\n\n                e.exercise.assistingMuscleGroups.forEach(a => {\n                    if (!exercisesSets.hasOwnProperty(a)) {\n                        exercisesSets[a] = 0;\n                    }\n\n                    exercisesSets[a] += e.sets * 0.5;\n                });\n            });\n        }\n\n        for (const exercisesSetsKey in exercisesSets) {\n            const exercise = {\n                name: this.constantViewPipe.transform(exercisesSetsKey).toUpperCase(),\n                value: exercisesSets[exercisesSetsKey]\n            };\n\n            const muscleGroupColor = {\n                name: this.constantViewPipe.transform(exercisesSetsKey).toUpperCase(),\n                value: colors.pop()\n            };\n\n            exerciseSetsArray.push(exercise);\n            muscleGroupColorsArray.push(muscleGroupColor);\n\n            exerciseSetsArray.push(exercise);\n        }\n\n\n        this.muscleGroupSets = exerciseSetsArray;\n        this.customColors = muscleGroupColorsArray;\n\n    }\n\n    onWorkoutDeleteHandler(workoutId: string, orderIndex: number) {\n        this.editWorkoutPlanBindingModel.workouts =\n            this.editWorkoutPlanBindingModel.workouts.filter(w => w.orderIndex !== orderIndex || w.id !== workoutId);\n        this.rearrangeOrderIndexes();\n    }\n\n    deleteWorkoutExercise(workoutPlanId: string, workoutId: string) {\n        // this.workoutPlanService.deleteWorkoutFromMyWorkoutPlan(workoutPlanId, workoutId).subscribe((workoutPlan: WorkoutPlan) => {\n        //   this.selectedWorkoutPlan = workoutPlan;\n        // })\n    }\n\n    onSaveHandler() {\n\n        this.workoutPlanService.editMyWorkoutPlan(this.workoutPlanId, this.editWorkoutPlanBindingModel).subscribe((workoutPlan: WorkoutPlan) => {\n            this.selectedWorkoutPlan = workoutPlan;\n            this.calculateExercisesSets();\n        });\n\n        this.router.navigate(['./'], {relativeTo: this.route})\n    }\n\n    onWorkoutPlanDeleteHandler() {\n\n        this.workoutPlanService.deleteMyWorkoutPlan(this.workoutPlanId).subscribe(result => {\n            if (result) {\n                this.router.navigate(['/my-workout-plans']);\n            }\n        });\n\n    }\n\n    onDrop(event: any) {\n        moveItemInArray(this.editWorkoutPlanBindingModel.workouts, event.previousIndex, event.currentIndex);\n        this.rearrangeOrderIndexes();\n    }\n\n    rearrangeOrderIndexes() {\n        const workouts = this.editWorkoutPlanBindingModel.workouts;\n\n        for (let i = 0; i < workouts.length; i++) {\n            workouts[i].orderIndex = i + 1;\n        }\n    }\n\n    onAddWorkoutHandler() {\n\n    }\n\n    setSelectedWorkoutForModal() {\n        this.selectedWorkoutForModal = this.loggedUserWorkouts.filter(w => w.id === this.selectedWorkoutIdForModal)[0];\n    }\n}\n","export default \".selected-workout {\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC9teS13b3Jrb3V0cy9lZGl0LXNlbGVjdGVkLXdvcmtvdXQvZWRpdC1zZWxlY3RlZC13b3Jrb3V0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQ0FBb0M7SUFDcEMsdUNBQXVDO0FBQzNDIiwiZmlsZSI6InNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC9teS13b3Jrb3V0cy9lZGl0LXNlbGVjdGVkLXdvcmtvdXQvZWRpdC1zZWxlY3RlZC13b3Jrb3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0ZWQtd29ya291dCB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport {Workout} from \"../../workout.model\";\nimport {WorkoutService} from \"../../workout.service\";\nimport {ActivatedRoute, Params} from \"@angular/router\";\n\n@Component({\n  selector: 'app-edit-selected-workout',\n  templateUrl: './edit-selected-workout.component.html',\n  styleUrls: ['./edit-selected-workout.component.css']\n})\nexport class EditSelectedWorkoutComponent implements OnInit {\n\n  selectedWorkout: Workout;\n  workoutId: string;\n\n  constructor(private workoutService: WorkoutService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.selectedWorkout = new Workout();\n\n    this.route.params.subscribe((params: Params) => {\n\n          this.workoutId = params['id'];\n          this.fetchWorkoutDetails();\n        }\n    )\n  }\n\n  fetchWorkoutDetails(): void {\n    this.workoutService.getLoggedInUserWorkouts().subscribe((workouts: Workout[]) => {\n      if (workouts) {\n        this.selectedWorkout = workouts.find(w => w.id === this.workoutId);\n\n        this.selectedWorkout\n            .exercises\n            .sort((e1, e2) => e1.orderIndex - e2.orderIndex);\n\n      }\n    });\n  }\n\n  onWorkoutExerciseDeleteHandler(workoutId: string, exerciseId: string) {\n    this.workoutService.deleteWorkoutExerciseFromWorkout(workoutId, exerciseId).subscribe((workout: Workout) => {\n      this.selectedWorkout = workout;\n    })\n  }\n\n}\n","export default \".list-group{\\r\\n  max-height: 300px;\\r\\n  overflow-y: auto;\\r\\n  -webkit-overflow-scrolling: touch;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC9teS13b3Jrb3V0cy9teS13b3Jrb3V0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixpQ0FBaUM7QUFDbkMiLCJmaWxlIjoic3JjL21haW4vd2ViYXBwL2FwcC93b3Jrb3V0L215LXdvcmtvdXRzL215LXdvcmtvdXRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGlzdC1ncm91cHtcclxuICBtYXgtaGVpZ2h0OiAzMDBweDtcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcclxufVxyXG5cclxuXHJcblxyXG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {Workout} from \"../workout.model\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {WorkoutBindingModel} from \"../workout-binding-model\";\nimport {WorkoutService} from \"../workout.service\";\nimport {UserService} from \"../../user/user.service\";\nimport {AuthService} from \"../../auth/auth.service\";\nimport {ActivatedRoute, NavigationEnd, Params, Router, RouterEvent} from \"@angular/router\";\nimport {filter} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-my-workouts',\n  templateUrl: './my-workouts.component.html',\n  styleUrls: ['./my-workouts.component.css']\n})\nexport class MyWorkoutsComponent implements OnInit {\n\n  workouts: Workout[];\n  selectedWorkoutId: string;\n  workoutBindingModel: WorkoutBindingModel;\n  loggedUserId: string;\n\n  constructor(private modalService: NgbModal, private workoutService: WorkoutService, private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n\n    this.router.events.pipe(\n        filter((event: RouterEvent) => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      this.fetchWorkouts();\n    });\n\n    this.setSelectedWorkoutIdFromParams();\n    this.fetchWorkouts();\n    this.workoutBindingModel = new WorkoutBindingModel();\n  }\n\n  fetchWorkouts() {\n    this.workoutService.getLoggedInUserWorkouts().subscribe((workouts: Workout[]) => {\n      workouts.sort((w1, w2) => w1.name.localeCompare(w2.name));\n      this.workouts = workouts;\n    })\n  }\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.workoutService.createExercise(this.workoutBindingModel)\n        .subscribe((workout: Workout) => {\n          this.fetchWorkouts();\n          this.router.navigate(['my-workouts/' + workout.id])\n        });\n      this.workoutBindingModel = new WorkoutBindingModel();\n    }, (reason) => {\n    });\n  }\n\n  setSelectedWorkoutIdFromParams() {\n    this.route.firstChild.params.subscribe((params: Params) => {\n      this.selectedWorkoutId = params['id'] ? params['id'] : undefined;\n    });\n  }\n\n  onWorkoutButtonClick(workoutId: string) {\n    this.selectedWorkoutId = workoutId;\n    this.router.navigate([workoutId], {relativeTo: this.route})\n  }\n\n  onRouterOutletDeactivate() {\n    this.fetchWorkouts();\n  }\n\n  onRouterOutletActivate() {\n    this.setSelectedWorkoutIdFromParams();\n    this.fetchWorkouts();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL3dvcmtvdXQvbXktd29ya291dHMvbm8tc2VsZWN0ZWQtd29ya291dC9uby1zZWxlY3RlZC13b3Jrb3V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-selected-workout',\n  templateUrl: './no-selected-workout.component.html',\n  styleUrls: ['./no-selected-workout.component.css']\n})\nexport class NoSelectedWorkoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".selected-workout {\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n.cdk-drop-list-dragging .cdk-drag {\\r\\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\\r\\n.cdk-drag-animating {\\r\\n    transition: transform 300ms cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n\\r\\n.cdk-drag:hover {\\r\\n    cursor: -webkit-grab;\\r\\n    cursor: grab;\\r\\n}\\r\\n\\r\\n.cdk-drop-list-dragging:hover .cdk-drag:hover {\\r\\n    cursor: -webkit-grabbing;\\r\\n    cursor: grabbing;\\r\\n}\\r\\n\\r\\n.chart {\\r\\n    background: white;\\r\\n    border: 2px solid black;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC9teS13b3Jrb3V0cy9zZWxlY3RlZC13b3Jrb3V0L3NlbGVjdGVkLXdvcmtvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9DQUFvQztJQUNwQyx1Q0FBdUM7QUFDM0M7O0FBRUE7SUFDSSxzREFBc0Q7QUFDMUQ7O0FBRUE7SUFDSSxzREFBc0Q7QUFDMUQ7O0FBRUE7SUFDSSxvQkFBWTtJQUFaLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSx3QkFBZ0I7SUFBaEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLHVCQUF1QjtBQUMzQiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL3dvcmtvdXQvbXktd29ya291dHMvc2VsZWN0ZWQtd29ya291dC9zZWxlY3RlZC13b3Jrb3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0ZWQtd29ya291dCB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbn1cclxuXHJcbi5jZGstZHJvcC1saXN0LWRyYWdnaW5nIC5jZGstZHJhZyB7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XHJcbn1cclxuXHJcbi5jZGstZHJhZy1hbmltYXRpbmcge1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zIGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpO1xyXG59XHJcblxyXG4uY2RrLWRyYWc6aG92ZXIge1xyXG4gICAgY3Vyc29yOiBncmFiO1xyXG59XHJcblxyXG4uY2RrLWRyb3AtbGlzdC1kcmFnZ2luZzpob3ZlciAuY2RrLWRyYWc6aG92ZXIge1xyXG4gICAgY3Vyc29yOiBncmFiYmluZztcclxufVxyXG5cclxuLmNoYXJ0IHtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XHJcbn1cclxuIl19 */\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Workout} from \"../../workout.model\";\nimport {ActivatedRoute, Params, Router, UrlSegment} from \"@angular/router\";\nimport {DragDropModule, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {WorkoutService} from \"../../workout.service\";\nimport {GetConstantViewNamePipe} from \"../../../get-constant-view-name.pipe\";\nimport {WorkoutBindingModel} from \"../../workout-binding-model\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n    selector: 'app-selected-workout',\n    templateUrl: './selected-workout.component.html',\n    styleUrls: ['./selected-workout.component.css']\n})\nexport class SelectedWorkoutComponent implements OnInit {\n\n    @Output() workoutDelete: EventEmitter<any> = new EventEmitter();\n\n    selectedWorkout: Workout;\n    editWorkoutBindingModel: Workout;\n    deletedWorkoutExercisesStack: string[];\n    workoutId: string;\n\n    editMode = false;\n    exercisesSets: any[];\n    customColors: any[];\n\n\n    constructor(private route: ActivatedRoute,\n                private workoutService: WorkoutService,\n                private router: Router,\n                private constantViewPipe: GetConstantViewNamePipe,\n                private modalService: NgbModal) {\n    }\n\n    ngOnInit() {\n\n        this.selectedWorkout = new Workout();\n\n        this.route.params.subscribe((params: Params) => {\n                this.workoutId = params['id'];\n                this.fetchWorkoutDetails();\n            }\n        );\n\n        this.route.queryParams.subscribe((queryParams: Params) => {\n\n            if (queryParams['edit']) {\n                this.editMode = queryParams['edit'] === '1';\n                if (this.editMode) {\n                    this.editWorkoutBindingModel = Object.assign({}, this.selectedWorkout);\n                    this.editWorkoutBindingModel.isPublic = this.selectedWorkout.isPublic;\n                    this.deletedWorkoutExercisesStack = [];\n                }\n            } else {\n                this.editMode = false;\n            }\n        });\n    }\n\n    open(content) {\n        this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {\n        }, (reason) => {\n        });\n    }\n\n    fetchWorkoutDetails(): void {\n        this.workoutService.getLoggedInUserWorkouts().subscribe((workouts: Workout[]) => {\n            if (workouts) {\n                this.selectedWorkout = workouts.find(w => w.id === this.workoutId);\n\n                this.selectedWorkout\n                    .exercises\n                    .sort((e1, e2) => e1.orderIndex - e2.orderIndex);\n\n                this.calculateExercisesSets();\n\n            }\n        });\n    }\n\n    calculateExercisesSets() {\n        const workoutExercises = this.selectedWorkout.exercises;\n\n        const exercisesSets = {};\n\n\n\n        workoutExercises.forEach(e => {\n\n            if (!exercisesSets.hasOwnProperty(e.exercise.majorMuscleGroup)) {\n                exercisesSets[e.exercise.majorMuscleGroup] = 0;\n            }\n\n            exercisesSets[e.exercise.majorMuscleGroup] += e.sets;\n\n            e.exercise.assistingMuscleGroups.forEach(a => {\n                if (!exercisesSets.hasOwnProperty(a)) {\n                    exercisesSets[a] = 0;\n                }\n\n                exercisesSets[a] += e.sets * 0.5;\n            });\n        });\n\n        const colors = ['#f68d5c',\n            '#0dc8f3',\n            '#6f2ac2',\n            '#84e26b',\n            '#86974b',\n            '#fa1483',\n            '#c2118b',\n            '#d79aaf',\n            '#f2f0c1',\n            '#0ccbb7',\n            '#e88ef8',\n            '#ccf3f1',\n            '#d1fc9e',\n            '#dbb005',\n            '#2b352b',\n            '#781037',\n            '#636e8d'];\n\n        const exerciseSetsArray = [];\n        const muscleGroupColorsArray = [];\n\n        for (const exercisesSetsKey in exercisesSets) {\n            const exercise = {\n                name: this.constantViewPipe.transform(exercisesSetsKey).toUpperCase(),\n                value: exercisesSets[exercisesSetsKey]\n            };\n\n            const muscleGroupColor = {\n                name: this.constantViewPipe.transform(exercisesSetsKey).toUpperCase(),\n                value: colors.pop()\n            };\n\n            exerciseSetsArray.push(exercise);\n            muscleGroupColorsArray.push(muscleGroupColor);\n\n            exerciseSetsArray.push(exercise);\n\n\n        }\n\n        this.exercisesSets = exerciseSetsArray;\n        this.customColors = muscleGroupColorsArray;\n    }\n\n    onWorkoutExerciseDeleteHandler(workoutId: string, exerciseId: string) {\n        this.deletedWorkoutExercisesStack.push(exerciseId);\n        this.editWorkoutBindingModel.exercises = this.editWorkoutBindingModel.exercises.filter(e => e.id !== exerciseId);\n        this.rearrangeOrderIndexes();\n    }\n\n    deleteWorkoutExercise(workoutId: string, exerciseId: string) {\n        this.workoutService.deleteWorkoutExerciseFromWorkout(workoutId, exerciseId).subscribe((workout: Workout) => {\n            this.selectedWorkout = workout;\n        })\n    }\n\n    onSaveHandler() {\n\n        this.workoutService.editWorkoutById(this.workoutId, this.editWorkoutBindingModel).subscribe((workout: Workout) => {\n            console.log(workout.isPublic, 1);\n            this.selectedWorkout = workout;\n            this.calculateExercisesSets();\n        });\n\n        this.router.navigate(['./'], {relativeTo: this.route});\n    }\n\n    onWorkoutDeleteHandler(workoutId: string) {\n\n        this.workoutService.deleteWorkoutById(workoutId).subscribe(result => {\n            if (result) {\n                this.workoutDelete.emit();\n                this.router.navigate(['/my-workouts']);\n            }\n        })\n\n    }\n\n    onDrop(event: any) {\n        moveItemInArray(this.editWorkoutBindingModel.exercises, event.previousIndex, event.currentIndex);\n        this.rearrangeOrderIndexes();\n    }\n\n    rearrangeOrderIndexes() {\n        const exercises = this.editWorkoutBindingModel.exercises;\n\n        for (let i = 0; i < exercises.length; i++) {\n            exercises[i].orderIndex = i + 1;\n        }\n    }\n}\n","export class WorkoutBindingModel {\r\n  name: string;\r\n  isPublic: boolean;\r\n\r\n  constructor() {\r\n    this.isPublic = true;\r\n  }\r\n}\r\n","export default \".card {\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n    border-radius: 30px;\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    border-radius: 10px;\\r\\n}\\r\\n\\r\\n.buttons-wrapper {\\r\\n    position: absolute;\\r\\n    bottom: 1em;\\r\\n}\\r\\n\\r\\n.buttons-wrapper.right {\\r\\n    right: 1em;\\r\\n}\\r\\n\\r\\n.buttons-wrapper.left {\\r\\n    left: 1em;\\r\\n}\\r\\n\\r\\n.table-wrapper{\\r\\n    max-height: 300px;\\r\\n    overflow-y: auto;\\r\\n    -webkit-overflow-scrolling: touch;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC93b3Jrb3V0LWNhcmQvd29ya291dC1jYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx1Q0FBdUM7SUFDdkMsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsb0NBQW9DOztBQUV4Qzs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxTQUFTO0FBQ2I7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGlDQUFpQztBQUNyQyIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL3dvcmtvdXQvd29ya291dC1jYXJkL3dvcmtvdXQtY2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XHJcblxyXG59XHJcblxyXG4uYnRuIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuXHJcbi5idXR0b25zLXdyYXBwZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAxZW07XHJcbn1cclxuXHJcbi5idXR0b25zLXdyYXBwZXIucmlnaHQge1xyXG4gICAgcmlnaHQ6IDFlbTtcclxufVxyXG5cclxuLmJ1dHRvbnMtd3JhcHBlci5sZWZ0IHtcclxuICAgIGxlZnQ6IDFlbTtcclxufVxyXG5cclxuLnRhYmxlLXdyYXBwZXJ7XHJcbiAgICBtYXgtaGVpZ2h0OiAzMDBweDtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XHJcbn1cclxuXHJcbiJdfQ== */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Exercise} from \"../../exercise/exercise.model\";\nimport {Workout} from \"../workout.model\";\n\n@Component({\n  selector: 'app-workout-card',\n  templateUrl: './workout-card.component.html',\n  styleUrls: ['./workout-card.component.css']\n})\nexport class WorkoutCardComponent implements OnInit {\n\n  @Input() workout: Workout;\n  @Output() modalOpen: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  copyToMyWorkoutsHandler(id: string) {\n    this.modalOpen.emit(id);\n  }\n\n}\n","export default \".workout-details {\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC93b3Jrb3V0LWRldGFpbHMvd29ya291dC1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQ0FBb0M7SUFDcEMsdUNBQXVDO0FBQzNDIiwiZmlsZSI6InNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC93b3Jrb3V0LWRldGFpbHMvd29ya291dC1kZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud29ya291dC1kZXRhaWxzIHtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcclxufVxyXG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {Workout} from \"../workout.model\";\nimport {WorkoutService} from \"../workout.service\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {GetConstantViewNamePipe} from \"../../get-constant-view-name.pipe\";\n\n@Component({\n    selector: 'app-workout-details',\n    templateUrl: './workout-details.component.html',\n    styleUrls: ['./workout-details.component.css']\n})\nexport class WorkoutDetailsComponent implements OnInit {\n\n    workout: Workout;\n    workoutId: string;\n    exercisesSets: any[];\n    customColors: any[];\n\n\n    constructor(private workoutService: WorkoutService,\n                private route: ActivatedRoute,\n                private modalService: NgbModal,\n                private router: Router,\n                private constantViewPipe: GetConstantViewNamePipe) {\n    }\n\n    ngOnInit() {\n\n        this.workout = new Workout();\n\n        this.route.params.subscribe((params: Params) => {\n                this.workoutId = params['id'];\n                this.fetchWorkoutDetails();\n            }\n        );\n\n    }\n\n    fetchWorkoutDetails(): void {\n        this.workoutService.fetchPublicWorkoutById(this.workoutId).subscribe((workout: Workout) => {\n            if (workout) {\n                this.workout = workout;\n                console.log(workout);\n                this.workout\n                    .exercises\n                    .sort((e1, e2) => e1.orderIndex - e2.orderIndex);\n\n                this.calculateExercisesSets();\n            }\n        });\n    }\n\n    calculateExercisesSets() {\n        const workoutExercises = this.workout.exercises;\n\n        const exercisesSets = {};\n\n        workoutExercises.forEach(e => {\n\n            if (!exercisesSets.hasOwnProperty(e.exercise.majorMuscleGroup)) {\n                exercisesSets[e.exercise.majorMuscleGroup] = 0;\n            }\n\n            exercisesSets[e.exercise.majorMuscleGroup] += e.sets;\n\n            e.exercise.assistingMuscleGroups.forEach(a => {\n                if (!exercisesSets.hasOwnProperty(a)) {\n                    exercisesSets[a] = 0;\n                }\n\n                exercisesSets[a] += e.sets * 0.5;\n            });\n        });\n\n        const colors = ['#f68d5c',\n            '#0dc8f3',\n            '#6f2ac2',\n            '#84e26b',\n            '#86974b',\n            '#fa1483',\n            '#c2118b',\n            '#d79aaf',\n            '#f2f0c1',\n            '#0ccbb7',\n            '#e88ef8',\n            '#ccf3f1',\n            '#d1fc9e',\n            '#dbb005',\n            '#2b352b',\n            '#781037',\n            '#636e8d'];\n\n        const exerciseSetsArray = [];\n        const muscleGroupColorsArray = [];\n\n        for (const exercisesSetsKey in exercisesSets) {\n            const exercise = {\n                name: this.constantViewPipe.transform(exercisesSetsKey).toUpperCase(),\n                value: exercisesSets[exercisesSetsKey]\n            };\n\n            const muscleGroupColor = {\n                name: this.constantViewPipe.transform(exercisesSetsKey).toUpperCase(),\n                value: colors.pop()\n            };\n\n            exerciseSetsArray.push(exercise);\n            muscleGroupColorsArray.push(muscleGroupColor);\n\n        }\n\n        this.exercisesSets = exerciseSetsArray;\n        this.customColors = muscleGroupColorsArray;\n\n    }\n\n    open(content) {\n\n\n        this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n\n            this.workoutService.copyWorkoutToLoggedUserWorkouts(this.workoutId).subscribe((workout: Workout) => {\n                this.router.navigate(['my-workouts', workout.id])\n            });\n        }, (reason) => {\n        });\n    }\n}\n","export class WorkoutPlanBindingModel {\r\n  name: string;\r\n  isPublic: boolean;\r\n\r\n  constructor() {\r\n    this.isPublic = true;\r\n  }\r\n}\r\n","export default \"table {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.order-index-workout {\\r\\n    position: absolute;\\r\\n    top: 7px;\\r\\n    left: 0;\\r\\n\\r\\n    border-radius: 50%;\\r\\n    width: 36px;\\r\\n    line-height: 36px;\\r\\n    padding: 4px;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n    border-radius: 30px;\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    border-radius: 10px;\\r\\n}\\r\\n\\r\\n.buttons-wrapper {\\r\\n    position: absolute;\\r\\n    bottom: 1em;\\r\\n}\\r\\n\\r\\n.buttons-wrapper.right {\\r\\n    right: 1em;\\r\\n}\\r\\n\\r\\n.buttons-wrapper.left {\\r\\n    left: 1em;\\r\\n}\\r\\n\\r\\n.accordion{\\r\\n    max-height: 300px;\\r\\n    overflow-y: auto;\\r\\n    -webkit-overflow-scrolling: touch;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC93b3Jrb3V0LXBsYW4tY2FyZC93b3Jrb3V0LXBsYW4tY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixPQUFPOztJQUVQLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWix1Q0FBdUM7SUFDdkMsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksdUNBQXVDO0lBQ3ZDLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxTQUFTO0FBQ2I7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGlDQUFpQztBQUNyQyIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL3dvcmtvdXQvd29ya291dC1wbGFuLWNhcmQvd29ya291dC1wbGFuLWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLm9yZGVyLWluZGV4LXdvcmtvdXQge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA3cHg7XHJcbiAgICBsZWZ0OiAwO1xyXG5cclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHdpZHRoOiAzNnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDM2cHg7XHJcbiAgICBwYWRkaW5nOiA0cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xyXG59XHJcblxyXG4uYnRuIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuXHJcbi5idXR0b25zLXdyYXBwZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAxZW07XHJcbn1cclxuXHJcbi5idXR0b25zLXdyYXBwZXIucmlnaHQge1xyXG4gICAgcmlnaHQ6IDFlbTtcclxufVxyXG5cclxuLmJ1dHRvbnMtd3JhcHBlci5sZWZ0IHtcclxuICAgIGxlZnQ6IDFlbTtcclxufVxyXG5cclxuLmFjY29yZGlvbntcclxuICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcclxufVxyXG5cclxuIl19 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Workout} from \"../workout.model\";\nimport {WorkoutPlan} from \"../workout-plan.model\";\n\n@Component({\n  selector: 'app-workout-plan-card',\n  templateUrl: './workout-plan-card.component.html',\n  styleUrls: ['./workout-plan-card.component.css']\n})\nexport class WorkoutPlanCardComponent implements OnInit {\n\n  @Input() workoutPlan: WorkoutPlan;\n  @Output() modalOpen: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  copyToMyWorkoutPlansHandler(id: string) {\n    this.modalOpen.emit(id);\n  }\n\n}\n","export default \".workout-plan-container {\\r\\n    background: rgba(255, 255, 255, 0.6);\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\ntable {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.order-index-workout {\\r\\n    position: absolute;\\r\\n    top: 7px;\\r\\n    left: 0;\\r\\n\\r\\n    border-radius: 50%;\\r\\n    width: 36px;\\r\\n    line-height: 36px;\\r\\n    padding: 4px;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tYWluL3dlYmFwcC9hcHAvd29ya291dC93b3Jrb3V0LXBsYW4tZGV0YWlscy93b3Jrb3V0LXBsYW4tZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0NBQW9DO0lBQ3BDLHVDQUF1QztBQUMzQzs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsT0FBTzs7SUFFUCxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osdUNBQXVDO0lBQ3ZDLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvbWFpbi93ZWJhcHAvYXBwL3dvcmtvdXQvd29ya291dC1wbGFuLWRldGFpbHMvd29ya291dC1wbGFuLWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53b3Jrb3V0LXBsYW4tY29udGFpbmVyIHtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcclxufVxyXG5cclxudGFibGUge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4ub3JkZXItaW5kZXgtd29ya291dCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDdweDtcclxuICAgIGxlZnQ6IDA7XHJcblxyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgd2lkdGg6IDM2cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMzZweDtcclxuICAgIHBhZGRpbmc6IDRweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport {Workout} from \"../workout.model\";\nimport {WorkoutService} from \"../workout.service\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {GetConstantViewNamePipe} from \"../../get-constant-view-name.pipe\";\nimport {WorkoutPlan} from \"../workout-plan.model\";\nimport {WorkoutPlanService} from \"../workout-plan.service\";\n\n@Component({\n  selector: 'app-workout-plan-details',\n  templateUrl: './workout-plan-details.component.html',\n  styleUrls: ['./workout-plan-details.component.css']\n})\nexport class WorkoutPlanDetailsComponent implements OnInit {\n\n  workoutPlan: WorkoutPlan;\n  workoutPlanId: string;\n  exercisesSets: any[];\n  customColors: any[];\n\n\n  constructor(private workoutPlanService: WorkoutPlanService,\n              private route: ActivatedRoute,\n              private modalService: NgbModal,\n              private router: Router,\n              private constantViewPipe: GetConstantViewNamePipe) {\n  }\n\n  ngOnInit() {\n\n    this.workoutPlan = new WorkoutPlan();\n\n    this.route.params.subscribe((params: Params) => {\n\n          this.workoutPlanId = params['id'];\n          this.fetchWorkoutPlanDetails();\n        }\n    );\n\n  }\n\n  fetchWorkoutPlanDetails(): void {\n    this.workoutPlanService.getWorkoutPlanById(this.workoutPlanId).subscribe((workoutPlan: WorkoutPlan) => {\n      if (workoutPlan) {\n        this.workoutPlan = workoutPlan;\n        this.calculateExercisesSets();\n      }\n    });\n  }\n\n  calculateExercisesSets() {\n\n    const exerciseSetsArray = [];\n    const muscleGroupColorsArray = [];\n\n    const colors = ['#f68d5c',\n      '#0dc8f3',\n      '#6f2ac2',\n      '#84e26b',\n      '#86974b',\n      '#fa1483',\n      '#c2118b',\n      '#d79aaf',\n      '#f2f0c1',\n      '#0ccbb7',\n      '#e88ef8',\n      '#ccf3f1',\n      '#d1fc9e',\n      '#dbb005',\n      '#2b352b',\n      '#781037',\n      '#636e8d'];\n\n    const exercisesSets = {};\n\n    for (const workout of this.workoutPlan.workouts) {\n      const workoutExercises = workout.workout.exercises;\n\n\n      workoutExercises.forEach(e => {\n\n        if (!exercisesSets.hasOwnProperty(e.exercise.majorMuscleGroup)) {\n          exercisesSets[e.exercise.majorMuscleGroup] = 0;\n        }\n\n        exercisesSets[e.exercise.majorMuscleGroup] += e.sets;\n\n        e.exercise.assistingMuscleGroups.forEach(a => {\n          if (!exercisesSets.hasOwnProperty(a)) {\n            exercisesSets[a] = 0;\n          }\n\n          exercisesSets[a] += e.sets * 0.5;\n        });\n      });\n    }\n\n    for (const exercisesSetsKey in exercisesSets) {\n      const exercise = {\n        name: this.constantViewPipe.transform(exercisesSetsKey).toUpperCase(),\n        value: exercisesSets[exercisesSetsKey]\n      };\n\n      const muscleGroupColor = {\n        name: this.constantViewPipe.transform(exercisesSetsKey).toUpperCase(),\n        value: colors.pop()\n      };\n\n      exerciseSetsArray.push(exercise);\n      muscleGroupColorsArray.push(muscleGroupColor);\n\n      exerciseSetsArray.push(exercise);\n    }\n\n\n    this.exercisesSets = exerciseSetsArray;\n    this.customColors = muscleGroupColorsArray;\n\n  }\n\n  open(content) {\n\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n\n      this.workoutPlanService.copyWorkoutPlanToMyWorkoutPlans(this.workoutPlanId).subscribe((workoutPlan: WorkoutPlan) => {\n        this.router.navigate(['my-workout-plans/', workoutPlan.id])\n      });\n    }, (reason) => {\n    });\n  }\n\n}\n","import {Creator} from \"./creator-model\";\r\nimport {WorkoutPlanWorkout} from \"./workout-plan-workout.model\";\r\n\r\nexport class WorkoutPlan {\r\n    id: string;\r\n    name: string;\r\n    workouts: WorkoutPlanWorkout[];\r\n    isPublic: boolean;\r\n    creator: Creator;\r\n    isCopied: boolean;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {WorkoutBindingModel} from './workout-binding-model';\r\nimport {WorkoutExerciseBindingModel} from '../exercise/all-exercises/workout-exercise-binding.model';\r\nimport {Workout} from \"./workout.model\";\r\nimport {WorkoutPlanBindingModel} from \"./workout-plan-binding-model\";\r\nimport {WorkoutPlan} from \"./workout-plan.model\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class WorkoutPlanService {\r\n\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    createWorkoutPlan(workoutPlanBindingModel: WorkoutPlanBindingModel) {\r\n\r\n        return this.http.post('http://localhost:8000/workout-plans/create', workoutPlanBindingModel);\r\n\r\n    }\r\n\r\n    getLoggedInUserWorkoutPlans() {\r\n\r\n        return this.http.get('http://localhost:8000/workout-plans/my');\r\n\r\n    }\r\n\r\n\r\n    deleteMyWorkoutPlan(workoutPlanId: string) {\r\n\r\n        return this.http.delete('http://localhost:8000/workout-plans/delete/' + workoutPlanId);\r\n\r\n    }\r\n\r\n    editMyWorkoutPlan(workoutPlanId: string, workoutPlanEditBindingModel: WorkoutPlan) {\r\n\r\n        return this.http.put('http://localhost:8000/workout-plans/edit/' + workoutPlanId, workoutPlanEditBindingModel);\r\n\r\n    }\r\n\r\n    getAllPublicWorkoutPlans() {\r\n\r\n        return this.http.get('http://localhost:8000/workout-plans/public/all');\r\n\r\n    }\r\n\r\n    getWorkoutPlanById(workoutPlanId: string) {\r\n\r\n        return this.http.get('http://localhost:8000/workout-plans/' + workoutPlanId);\r\n\r\n    }\r\n\r\n    copyWorkoutPlanToMyWorkoutPlans(workoutPlanId: string) {\r\n\r\n        return this.http.post('http://localhost:8000/workout-plans/copy/' + workoutPlanId, null);\r\n    }\r\n\r\n    addWorkoutFromMyWorkoutsToMyWorkoutPlan(workoutPlanId: string, workoutId: string) {\r\n\r\n        const params = new HttpParams().append('workoutId', workoutId);\r\n\r\n        return this.http.post('http://localhost:8000/workout-plans/add-workout/' + workoutPlanId, null, {params: params});\r\n\r\n    }\r\n\r\n}\r\n","import {WorkoutExercise} from \"./workout-exercise.model\";\r\nimport {Creator} from \"./creator-model\";\r\n\r\nexport class Workout {\r\n    id: string;\r\n    name: string;\r\n    exercises: WorkoutExercise[];\r\n    isPublic: boolean;\r\n    creator: Creator;\r\n    isCopied: boolean;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {WorkoutBindingModel} from './workout-binding-model';\r\nimport {WorkoutExerciseBindingModel} from '../exercise/all-exercises/workout-exercise-binding.model';\r\nimport {Workout} from \"./workout.model\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class WorkoutService {\r\n\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    createExercise(workoutCreateModel: WorkoutBindingModel) {\r\n\r\n        return this.http.post('http://localhost:8000/workouts/create', workoutCreateModel);\r\n    }\r\n\r\n    addWorkoutExerciseToWorkout(workoutExerciseBindingModel: WorkoutExerciseBindingModel, workoutId: string) {\r\n\r\n        return this.http.post('http://localhost:8000/workouts/add-exercise/' + workoutId, workoutExerciseBindingModel);\r\n    }\r\n\r\n\r\n    fetchAllPublicWorkouts() {\r\n\r\n        return this.http.get('http://localhost:8000/workouts/public/all');\r\n    }\r\n\r\n    fetchPublicWorkoutById(id: string) {\r\n\r\n        return this.http.get('http://localhost:8000/workouts/' + id);\r\n    }\r\n\r\n    getLoggedInUserWorkouts() {\r\n\r\n        return this.http.get('http://localhost:8000/workouts/my/');\r\n    }\r\n\r\n\r\n    deleteWorkoutExerciseFromWorkout(workoutId: string, exerciseId: string) {\r\n\r\n        const params = new HttpParams().append('exerciseId', exerciseId);\r\n        return this.http.delete('http://localhost:8000/workouts/delete-exercise/' + workoutId, {params: params});\r\n    }\r\n\r\n    deleteWorkoutById(workoutId: string) {\r\n\r\n        return this.http.delete('http://localhost:8000/workouts/delete/' + workoutId);\r\n    }\r\n\r\n    editWorkoutById(workoutId: string, workoutBindingModel: Workout) {\r\n\r\n        return this.http.put('http://localhost:8000/workouts/edit/' + workoutId, workoutBindingModel);\r\n    }\r\n\r\n    copyWorkoutToLoggedUserWorkouts(workoutId: string) {\r\n\r\n        return this.http.post('http://localhost:8000/workouts/copy/' + workoutId, null);\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}